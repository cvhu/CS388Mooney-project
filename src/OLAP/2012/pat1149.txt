Automatic programming, scheduling, and control of planned activities at "worker nodes" in a distributed environment are provided by a "real-time self tuner" (RTST). The RTST provides self-tuning of controlled interoperation among an interconnected set of distributed components (i.e., worker nodes) including, for example, home appliances, security systems, lighting, sensor networks, medical electronic devices, wearable computers, robotics, industrial controls, wireless communication systems, audio nets, distributed computers, toys, games, etc. The RTST acts as a centralized "planner" that is either one of the nodes or a dedicated computing device. A set of protocols allow applications to communicate with the nodes, and allow one or more nodes to communicate with each other. Self-tuning of the interoperation and scheduling of tasks to be performed at each node uses an on-line sampling driven statistical model and predefined node "behavior patterns" to predict and manage resource requirements needed by each node for completing assigned tasks.
Claims What is claimed is: 1. A system including a plurality of computing devices connected via an ad-hoc network environment for dynamic real-time scheduling of tasks to be performed by one or more of the plurality of computing devices, comprising using the plurality of computing devices to perform steps for: for each of the plurality of computing devices connected via an ad-hoc network environment, evaluating behavior patterns defined for each computing device associated with any task requested to be performed by those devices to predict nominal resource requirements for any corresponding task; wherein the behavior patterns for each device include one or more of a sequence of actions for allowing each device to perform one or more particular tasks, expected message types for controlling device actions, expected resources to be used by each device to execute any particular tasks, and an amount of acceptable temporal tolerance in task start times; statistically modeling the predicted resource requirements for any of the devices associated with any requested task as a function of the behavior patterns and samples of actual current resource usage on an ongoing basis prior to and during task execution; evaluating potential resource usage conflict information between the requested tasks; eliminating potential overlaps in resource usage between tasks by automatically adjusting task execution times relative to the acceptable temporal tolerance in task start times; and dynamically scheduling the requested tasks and reserving resources for those requested tasks on an ongoing basis prior to and during task execution as a function of the statistically modeled current resource usage, the resource usage conflict information, and the defined behavior patterns for each of the devices associated with any task. 2. The system of claim 1 wherein behavior patterns are automatically defined for one or more of the devices connected via the ad-hoc network environment, and wherein defining those behavior patterns comprises steps for automatically performing task dry-runs prior to an actual task execution time to determine nominal resource usage for each device associated with each particular task. 3. The system of claim 1 wherein statistically modeling predicted resource requirements for any device associated with any requested task comprises steps for: computing a probabilistic distribution of resource usage from status reports provided by one or more devices associated with each task; and determining an estimated amount of resources required to achieve a desired confidence in completing requested tasks as a function of the computed probability distribution. 4. The system of claim 1 wherein evaluating potential resource usage conflicts between all of the requested tasks comprises steps for: determining whether a requested task conflicts with an already scheduled task, including any ongoing repetitive actions and any one-time tasks; and determining whether all of the devices associated with any requested task are capable of performing the requested task prior to a task completion deadline. 5. The system of claim 1 wherein dynamically scheduling the requested tasks further comprises steps for: instantiating the behavior pattern associated with each corresponding device into corresponding action plans; negotiating the action plans with the corresponding devices to identify temporal constraints on task execution; and ordering the execution of each action plan in accordance with the temporal constraints of each action plan. 6. The system of claim 1 wherein statistically modeling predicted resource requirements further comprises steps for applying a negative feedback loop into statistical modeling computations by including prior median and variance values in the computation of predicted resource requirements for maintaining stability of the statistical computations. 7. A method for dynamically scheduling execution of requested tasks to be performed by a plurality of computing devices variously interconnected in a network environment, comprising: for each of a plurality of computing devices connected via an ad-hoc network environment, defining nominal behavior patterns for each of a plurality of computing devices relative to one or more particular tasks; wherein the behavior patterns for each device include one or more of a sequence of actions for allowing each device to perform one or more particular tasks, expected message types for controlling device actions, expected resources to be used by each device to execute any particular tasks, and an amount of acceptable temporal tolerance in task start times; probabilistically modeling expected resource usage on an ongoing basis prior to and during task execution for any device associated with any particular task by evaluating samples of actual resource usage in combination with the nominal behavior patterns defined for each of the corresponding computing devices; evaluating potential resource usage conflicts between each of a plurality of requested tasks; eliminating potential overlaps in resource usage between tasks by automatically adjusting task execution times relative to the acceptable temporal tolerance in task start times; and dynamically scheduling the requested tasks and allocation of resources for each of those tasks on an ongoing basis prior to and during task execution as a function of the probabilistically modeled resource usage, the evaluation of potential resource usage conflicts and the defined nominal behaviors for each corresponding computing device. 8. The method of claim 7 wherein defining the behavior patterns comprises automatically performing task dry-runs prior to an actual task execution time to determine nominal resource usage for each device associated with each particular task. 9. The method of claim 7 wherein probabilistically modeling expected resource usage for each device comprises determining an estimated amount of resources required to achieve a desired confidence level in successful completion of a requested task. 10. The method of claim 7 wherein evaluating potential resource usage conflicts comprises determining whether all devices associated with any requested task are capable of performing the requested task given currently available resources prior to a task completion deadline without interfering with another already scheduled task. 11. The method of claim 10 wherein dynamically scheduling the requested tasks and allocation of resources further comprises, for non-conflicting tasks: instantiating the nominal behavior pattern defined for each corresponding device into a corresponding action plan; negotiating the action plans with the corresponding devices to identify temporal constraints on task execution times; and ordering the execution of each action plan in accordance with the temporal constraints of each action plan. 12. A computer storage having computer-executable instructions stored thereon for dynamic real-time scheduling of tasks performed by any one or more of a plurality of computing devices in an ad-hoc network environment, said computer executable instructions comprising: for each of a plurality of computing devices connected via an ad-hoc network environment, defining a task-specific behavior pattern for each computing device, said behavior pattern describing specific actions that will be performed by each device for execution of the corresponding task; wherein the behavior patterns for each device include one or more of a sequence of actions for allowing each device to perform one or more particular tasks, expected message types for controlling device actions, expected resources to be used by each device to execute any particular tasks, and an amount of acceptable temporal tolerance in task start times; statistically modeling predicted resource usage requirements for each device for each corresponding task as a function of the corresponding behavior patterns on an ongoing basis prior to and during task execution; evaluating potential resource usage conflicts between each requested task as a function of desired task completion times for each requested task; eliminating potential conflicts in resource usage between tasks by automatically adjusting task execution times relative to the acceptable temporal tolerance in task start times; and dynamically scheduling the requested tasks and reserving resources for those requested tasks on an ongoing basis prior to and during task execution as a function of the statistically modeled predicted resource usage, the evaluation of potential resource usage conflicts, and the defined behavior patterns for each device associated with any task. 13. The computer storage of claim 12 wherein statistically modeling predicted resource usage requirements for each device further comprises evaluating samples of actual resource usage by each device for each corresponding task. 14. The computer storage of claim 12 wherein statistically modeling predicted resource usage requirements for each device for each corresponding task further comprises performing task dry-runs as a function of the behavior patterns of the corresponding devices prior to an actual task execution time to determine nominal resource usage for each device associated with each particular task. 15. The computer storage of claim 14 wherein statistically modeling predicted resource requirements for each device further comprises computing a probabilistic distribution of resource usage from one or more status reports provided by one or more of the devices associated with each task for determining an estimated amount of resources required to achieve a desired confidence in successful task execution. 