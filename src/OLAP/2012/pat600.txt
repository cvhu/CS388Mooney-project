The present exemplary embodiment relates to motion control and planning algorithms to facilitate execution of a series of moves within a motion trajectory. In one example, a trajectory is specified as a sequence of one or more path segments. A velocity profile is calculated for each of the one or more path segments, wherein each velocity profile is divided into a blend-in region, a blend-out region and a remainder region. Each path segment is executed such that the blend-in region of its velocity profile overlaps only with the blend-out region of the previous profile.
Claims The invention claimed is: 1. A method for generating a symmetric motion trajectory of an automated motion device with a processor having programming instructions stored on a computer readable medium for executing the method, comprising: specifying a trajectory as a sequence of independent path segments by the automated motion device; calculating a velocity profile for each path segment; dividing each velocity profile into a blend-in region, a blend-out region and a remainder region, each having a duration; overlapping the blend-out region of a current path segment with the blend-in region of a subsequent path segment; minimizing a difference between the duration of the blend-in and the blend-out region of consecutive path segments; calculating and applying a time offset for consecutive path segments; and moving along a path defined by the trajectory, wherein the path from a start point to an end point is approximately identical to the path from the end point to the start point. 2. The method according to claim 1, further including: minimizing durations of the remainder by calculating a blend radius between consecutive path segments as substantially equal to one hundred percent of a shorter path segment of two path segments. 3. The method according to claim 1, wherein the time offset is calculated via .DELTA.T(N)=max(0,T.sub.Blend-out(N-1)-T.sub.Blend-in(N)), where T.sub.Blend-out(N-1)is the duration of the blend-out region of path segment N-1; T.sub.Blend-in(N) is the duration of the blend-in region of path segment N; and .DELTA.T(N) is the time delay of the start of the blend-in region of path segment N with respect to the start of the blend-out region of the path segment N-1. 4. The method according to claim 1, wherein the blend-in comprises a deceleration segment of the blend-out region of the current path segment's velocity profile and an acceleration segment of the blend-in region of the subsequent path segment's velocity profile. 5. The method according to claim 4, wherein the deceleration segment of the blend-out region of the current path segment's velocity profile matches the acceleration segment of the blend-in region of the subsequent path segment's velocity profile. 6. The method according to claim 1, wherein the end point to start point path segments have inverse velocity profiles of the corresponding start point to end point path segments. 7. The method according to claim 1, wherein said path segments are each defined by one of a line, a circle, an arc and a polynomial. 8. The method according to claim 1, wherein the blend-out region from the current path segment and the blend-in region from subsequent path segment defines a blend radius. 9. The method according to claim 8, further including: selecting and utilizing the shortest blend-in or blend-out region within the blend radius. 10. The method according to claim 1, wherein the velocity profile is expressed as at least one of a trapezoidal, an S-curve, a parabolic, a trigonometric, and via a polynomial expression. 11. The method according to claim 1, further comprising: evaluating a length of the blend-out regions for each current velocity profile in view of the length of the blend-in regions for each subsequent velocity profile; reducing both a deceleration and a deceleration jerk of the current path segment, if the blend-out region of a current path segment is shorter than the blend-in region of a subsequent path segment to minimize the difference in duration of both regions; reducing both an acceleration and an acceleration jerk of the subsequent path segment if the subsequent path segment is shorter than the current path segment to minimize the difference in duration of both regions. 