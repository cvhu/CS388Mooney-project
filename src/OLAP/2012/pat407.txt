A robotic controller using schemata, the schemata being a set of parameterized sequences of motor commands in order to make a robot to achieve a set goal, the parameters of the sequences being gained from the state variables of the robotic controller, a robotic controller comprising an interface for supplying sensory input to the robotic controller. A schemata state memory (1) structure supplied with either input from a schemata recognition module (4) or input from an inverse model module (2) or combinations of them. An inverse model module (2) for generating motor commands based on state variables and stored schemata, a forward model module (3) for predicting state variables based on state variables and stored schemata, and a schemata recognition module (4) for selecting a schemata based on supplied state variables of the robot controlled by the robotic controller.
Claims We claim: 1. A robotic controller using schemata, the schemata being a set of parameterized sequences of motor commands in order to make a robot achieve a set goal, the parameters for the sequences being gained from the state variables of the robotic controller, the robotic controller comprising: an interface for supplying sensory input to the robotic controller, a schemata state memory structure supplied with either input from a schemata recognition module or input from an inverse model module or combinations of them, an inverse model module for generating motor commands based on state variables and stored schemata, a forward model module for predicting state variables based on state variables and stored schemata, where the forward model is implemented using a recurrent neural network, and a schemata recognition module for selecting a schemata based on supplied state variables of the robot controlled by the robotic controller. 2. The controller according to claim 1, furthermore comprising an additional switching module allows to switch between the usage of the currently sensed state variable values and the predicted state variable values as input to the forward model module, the inverse model module, and the recognition module. 3. The controller according to claim 1, where the forward model predicts the future values of the state variables depending on their current values as well as the current states of the schemata. 4. The controller according to claim 1, where the forward model predicts the derivatives of the state variables depending on their current values as well as the current states of the schemata. 5. The controller according to claim 3, where the forward model is implemented using a time-delay neural network. 6. The controller according to claim 1, where the neural network uses radial basis functions or hyper basis functions as representations in its hidden layer. 7. The controller according to claim 1, where the inverse model selects actions producing the attractor dynamics of the currently active schemata depending on the current values of the state variables as well as the current states of the schemata. 8. The controller according to claim 1, where the inverse model selects action derivatives producing the attractor dynamics of the current active schemata depending on the current values of the state variables as well as the current states of the schemata. 9. The controller according to claim 7, where the inverse model is implemented using a recurrent neural network. 10. The controller according to claim 7, where the inverse model is implemented using a time-delay neural network. 11. The controller according to claim 7, where the inverse model is implemented using a feed-forward neural network. 12. The controller according to claim 9, where the neural network uses radial basis functions or hyper basis functions as representations in its hidden layer. 13. The controller according to claim 3, where the inverse and forward models are combined in a single module. 14. The controller according to claim 1, where the recognition of the schemata is done using the current values of the state variables and their history. 15. The controller according to claim 14, where the recognition of the schemata is done using a recurrent neural network. 16. The controller according to claim 14, where the recognition of the schemata is done using a time-delay neural network. 17. The controller according to claim 15, where the neural network uses radial basis functions or hyper basis functions as representations in its hidden layer. 18. The controller according to claim 1, where the memory structure of the schemata states is a neural map composed of units distributed on a multi-dimensional grid. 19. The controller according to claim 18, where the neural map features a topographical organization, which is neighboring schemata representing similar attractor dynamics. 