A method and system for optimizing the assembly workcell layout in the context of industrial robotic CAD/CAM/CAE software products. The criterion to be minimized is the cycle time for completing a given sequence of operations, which is achieved by determining the relative positions of peripheral machines on the workcell floor. The method is constructive: each machine is placed one at a time in the robot neighborhood, by means of a modified simulated annealing method. This method yields several possible and optimal positions for a machine and several layouts are thus obtained at the end of execution.
Claims What is claimed is: 1. A method for operating a computer system for optimizing the placement of a robot and a set of peripheral machines in a workcell so as to minimize the cycle time for completion of a given operation sequence, the method comprising: a) defining a data set representing the workcell; b) placing the robot and a first peripheral machine from said set of peripheral machines in said workcell, and designating said placement as a current layout set; c) selecting another peripheral machine from said set of peripheral machines for placement in said workcell; d) for each layout in said current layout set, calculating a set of possible locations for placement of the peripheral machine selected in step c) in said workcell using an optimization method selective for minimum cycle time, said optimization method selective for minimum cycle time comprising a conventional simulated annealing method that has been modified, said modifications comprising: i) storing local minima as they are encountered during the simulated annealing process; ii) establishing attraction areas corresponding to each of said local minima comprising areas surrounding a local minimum data point; iii) performing a gradient descent, by setting a temperature function of the simulated annealing method to a value of zero, when a data point is encountered that is not within ah attraction area; and iv) redefining an attraction area when a gradient descent generates data points falling within an attraction area so that the attraction area includes the data point from which the gradient descent began; e) selecting from the set of possible locations calculated in step d) a subset of locations that represent the locations corresponding to the lowest calculated cycle times, wherein each selected location corresponds to a layout of objects in the workcell, and designating said subset of layouts as the current layout set; and f) repeating steps c) to e) until all of said peripheral machines in said set of peripheral machines has been placed in said workcell. 2. The method of claim 1, further comprising the step of placing the peripheral machines in said set of peripheral machines in an order for placement in the workcell. 3. The method of claim 2, wherein said peripheral machines are placed in an order favoring machines that are accessed the most by the robot. 4. The method of claim 2, wherein said peripheral machines are placed in an order favoring smaller machines over larger machines. 5. The method of claim 2, wherein said peripheral machines are placed in an order favoring machines that are accessed the most by the robot as one criterion, and favoring smaller machines over larger machines as a second criterion. 6. A CAD/CAM computer system comprising: an input device; a central processing unit; and a memory device for storing data; wherein the central processing unit is programmed to run an application program comprising code for optimizing the placement of a robot and a set of peripheral machines in a workcell so as to minimize the cycle time for completion of a given operation sequence, said code causing the system to execute a method comprising: a) defining a data set representing the workcell; b) placing the robot and a first peripheral machine from said set of peripheral machines in said workcell, and designating said placement as a current layout set; c) selecting another peripheral machine from said set of peripheral machines for placement in said workcell; d) for each layout in said current layout set, calculating a set of possible locations for placement of the peripheral machine selected in step c) in said workcell using an optimization method selective for minimum cycle time comprising a simulated annealing method that has been modified, said modifications comprising: i) storing local minima as they are encountered during the simulated annealing process; ii) storing attraction areas corresponding to each of said local minima, comprising areas surrounding a local minimum data point; and iii) performing a gradient descent, by setting a temperature function of the simulated annealing method to a value of zero, when a data point is encountered that is not within an attraction area; and iv) redefining and storing an attraction area when a gradient descent generates data points falling within an attraction area so that the attraction area includes the data point from which the gradient descent began; e) selecting from the set of possible locations calculated in step d) a subset of locations that represent the locations corresponding to the lowest calculated cycle times, wherein each selected location corresponds to a layout of objects in the workcell, and designating said subset of layouts as the current layout set; and f) repeating steps c) to e) until all of said peripheral machines in said set of peripheral machines has been placed in said workcell. 7. The CAD/CAM computer system of claim 6, wherein said method further comprises the step of placing the peripheral machines in said set of peripheral machines in an order for placement in the workcell. 8. The CAD/CAM computer system of claim 7, wherein said peripheral machines are placed in an order favoring machines that are accessed the most by the robot. 9. The CAD/CAM computer system of claim 7, wherein said peripheral machines are placed in an order favoring smaller machines over larger machines. 10. Computer executable code stored on a computer readable medium, the code comprising means for causing a computer to optimize the placement of a robot and a set of peripheral machines in a workcell so as to minimize the cycle time for completion of a given operation sequence, said code further comprising means for causing a computer to execute the method comprising: a) defining a data set representing the workcell; b) placing the robot and a first peripheral machine from said set of peripheral machines in said workcell, and designating said placement as a current layout set; c) selecting another peripheral machine from said set of peripheral machines for placement in said workcell; d) for each layout in said current layout set, calculating a set of possible locations for placement of the peripheral machine selected in step c) in said workcell using an optimization method selective for minimum cycle time comprising a simulated annealing method that has been modified, said modifications comprising: i) storing local minima as they are encountered during the simulated annealing process; ii) storing attraction areas corresponding to each of said local minima, comprising areas surrounding a local minimum data point; and iii) performing a gradient descent, by setting a temperature function of the simulated annealing method to a value of zero, when a data point is encountered that is not within an attraction area; and iv) redefining and storing an attraction area when a gradient descent generates data points falling within an attraction area so that the attraction area includes the data point from which the gradient descent began; e) selecting from the set of possible locations calculated in step d) a subset of locations that represent the locations corresponding to the lowest calculated cycle times, wherein each selected location corresponds to a layout of objects in the workcell, and designating said subset of layouts as the current layout set; and f) repeating steps c) to e) until all of said peripheral machines in said set of peripheral machines has been placed in said workcell. 11. The computer executable code stored on a computer readable medium of claim 10, said code further comprising means for causing a computer to take steps comprising: placing the peripheral machines in said set of peripheral machines in an order for placement in the workcell. 12. The computer executable code stored on a computer readable medium of claim 11, said code further comprising means for causing a computer to take the step comprising placing said peripheral machines in an order favoring machines that are accessed the most by the robot. 13. The computer executable code stored on a computer readable medium of claim 11, said code further comprising means for causing a computer to take the step comprising placing said peripheral machines in an order favoring smaller machines over larger machines. 