In an authoring system, a user creates and edits a scenario for a robot by using a GUI screen and a mouse. An authoring tool converts the scenario into a mnemonic code called "RCODE". When an RCODE action-control program is debugged, the RCODE program is extracted and encrypted step by step. The encrypted program is sequentially transferred to the robot by means of radio communication. The interpreter of the robot performs debugging by sequentially interpreting and executing the transferred program.
Claims What is claimed is: 1. An authoring system for creating and editing an action-control program for controlling the action of a robot, said authoring system comprising: an editing unit which provides a user with a work site for creating and editing a scenario concerning the action of said robot; and a converting unit which converts the scenario into a program code interpretable by said robot. 2. An authoring system according to claim 1, wherein said editing unit provides said user with components representing frequently used action statuses and processing routines or models thereof, and an operation screen on which by using a coordinate designating device to send instructions, each of the components is selectively arranged. 3. An authoring system according to claim 1, wherein said editing unit provides said user with an environment for creating and editing a script having the form of a predetermined programming language. 4. An authoring system according to claim 1, wherein said converting unit converts an action scenario represented by an arrangement of components and/or an action scenario described in the form of a script into a mnemonic code which can be interpreted by said robot. 5. An authoring system according to claim 1, further comprising communication means for transferring the program code to said robot. 6. An authoring system according to claim 5, wherein said communication means performs radio data communication with said robot. 7. An authoring system according to claim 5, wherein said communication means extracts the program code step by step and transfers the extracted program code to said robot. 8. An authoring system according to claim 5, wherein said communication means transfers the program code in an encrypted form. 9. An authoring system according to claim 5, wherein said robot includes: an interpretation unit which interprets the program code transmitted by said communication means; and a driving-control unit which drives said robot in accordance with the result of interpretation by said interpretation unit. 10. An authoring system according to claim 9, wherein said interpretation unit in said robot interprets and executes the transmitted program code in units of steps. 11. An authoring system according to claim 9, wherein: said robot stores posture-transition-limiting information on each action and each posture which can directly be changed from the present status of said robot and on each posture which can be changed through an action and a posture; and based on the posture-transition-limiting information, said driving-control unit converts the content of the program code into a form which enables transition of posture. 12. An authoring system according to claim 11, wherein: the posture-transition-limiting information is stored in the form of a directed graph composed of nodes representing possible postures of said robot and action arcs which each link two nodes having a possible transition therebetween; and said driving-control unit searches said directed graph and converts the content of the program code into a form which enables transition of posture. 13. An authoring method for creating and editing an action-control program for controlling the action of a robot, said authoring method comprising: an editing step which provides a user with a work site for creating and editing a scenario concerning the action of said robot; and a converting step which converts the scenario into a program code interpretable by said robot. 14. An authoring method according to claim 13, wherein said editing step provides said user with components representing frequently used action statuses and processing routines or models thereof, and an operation screen on which by using a coordinate designating device to send instructions, each of the components is selectively arranged. 15. An authoring method according to claim 13, wherein said editing step provides said user with an environment for creating and editing a script having the form of a predetermined programming language. 16. An authoring method according to claim 13, wherein said converting step converts an action scenario represented by an arrangement of components and/or an action scenario described in the form of a script into a mnemonic code which can be interpreted by said robot. 17. An authoring method according to claim 13, further comprising a communication step for transferring the program code to said robot. 18. An authoring method according to claim 17, wherein said communication step performs radio data communication with said robot. 19. An authoring method according to claim 17, wherein said communication step extracts the program code step by step and transfers the extracted program code to said robot. 20. An authoring method according to claim 17, wherein said communication step transfers the program code in an encrypted form. 21. An authoring method according to claim 17, wherein said robot includes: an interpretation step which interprets the program code transmitted in said communication step; and a driving-control step which drives said robot in accordance with the result of interpretation in said interpretation step. 22. An authoring method according to claim 21, wherein said interpretation step interprets and executes the transmitted program code in units of steps. 23. An authoring method according to claim 21, wherein: said robot stores posture-transition-limiting information on each action and each posture which can directly be changed from the present status of said robot and on each posture which can be changed through an action and a posture; and based on the posture-transition-limiting information, said driving-control step converts the content of the program code into a form which enables transition of posture. 24. An authoring method according to claim 23, wherein: the posture-transition-limiting information is stored in the form of a directed graph composed of nodes representing possible postures of said robot and action arcs which each link two nodes having a possible transition therebetween; and said driving-control step searches said directed graph and converts the content of the program code into a form which enables transition of posture. 25. A storage medium physically containing, in a computer-readable form, computer software described so as to control a computer system to execute authoring processing for creating and editing an action-control program for controlling the action of a robot, said computer software comprising: an editing step which provides a user with a work site for creating and editing a scenario concerning the action of said robot; and a converting step which converts the scenario into a program code interpretable by said robot. 26. A storage medium according to claim 25, wherein said editing step provides said user with components representing frequently used action statuses and processing routines or models thereof, and an operation screen on which by using a coordinate designating device to send instructions, each of the components is selectively arranged. 27. A storage medium according to claim 25, wherein said editing step provides said user with an environment for creating and editing a script having the form of a predetermined programming language. 28. A storage medium according to claim 25, wherein said converting step converts an action scenario represented by an arrangement of components and/or an action scenario described in the form of a script into a mnemonic code which can be interpreted by said robot. 29. A storage medium according to claim 25, wherein the computer software further comprises a communication step for transferring the program code to said robot. 