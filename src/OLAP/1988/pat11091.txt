The present invention includes an interpreter in which a parser examines a message using grammar and lexical tables to produce a parse table. The parse table is compared to data needed in a semantics table to fire a rule. The firing of a rule causes a function table to be evaluated. The function table includes function calls which can perform user desired functions. Among the functions is a generate function which will take the contents of a table and turn it into a message and route the message to a destination where the destination can be a table, process or device. Plural interpreters can be created where each interpreter includes a workspace containing the above-mentioned tables. Each interpreter can perform a different task such as recognizing the meaning of a message in one language and performing some action such as sending out a message in a different language or updating a database. The present invention is particularly suitable for managing a machining workcell including machines from different vendors.
Claims What is claimed is: 1. An interpreter process, comprising steps performed by a computer of: (a) converting a message into a parse table using a grammar table; (b) comparing the parse table to data needed in a condition designating a function table name; and (c) evaluating the named function table designated in the condition when the comparison indicates all data for the condition exists in the parse table. 2. A process as recited in claim 1, wherein step (a) comprises: (a1) dividing the message into tokens; (a2) scanning a grammar table for reference to a lexical table for each token where the reference is to a lexical table for a paritcular grammar type; (a3) comapring each token to lexical table contents deisgnated by the reference; and (a4) making an entry in the parse table where the token is added as an item and the grammar type is added as an entry name when the token appears in the lexical table and making an entry in the parse table where the token is added as an item and a legal data type name is added as the entry when the token does not appear in the lexical table and the token is a legal data type. 3. A process as recited in claim 2, wherein the grammar table includes name restrictors and a name restrictor is added to the entry name in step (a4). 4. A process as recited in claim 1, wherein the table name is a pathname. 5. An interpreter process, comprising steps performed by a computer of: (a) converting an input message into a parse table using a grammar table; (b) comparing the parse table to data needed in a condition designating a function table name; (c) evaluating the named function table designated by the condition when the comparison indicates all data for the condition exists in the parse table; and (d) generating an output message from an output message table as a result of evaluating the function table. 6. An interpreter process, comprising steps performed by a computer of: (a) parsing an input message into a parse table using a grammar table and a lexical table; (b) expanding the parse table using a semantics table including rules each designating function tables; (c) evaluating the function tables for all rules that fire; and (d) calling user designated functions during the evaluation of each function table. 7. A process as recited in claim 6, further comprising (e) generating at least one output message during the evaluation of step (c). 8. An interpreter process, comprising a step performed by a computer of: (a) generating a message from a table using a pathname to access the table and sending the message to a destination. 9. A process as recited in claim 8, wherein the table resides in a linked list and step (a) comprises the steps of: (a1) accessing the table through the linked list using the pathname; and (a2) combining items in the table into a message by concatenating the items. 10. a process as recited in claim 9, wherein step (a1) comprises the steps of: (i) accessing a table item through the linked list using the pathname; and (ii) accessing another table when the table items is an indirect reference. 11. A process as recited in claim 9, wherein step (a2) includes providing separators between each of the concatenated items. 12. An interpreter proces, comprising steps performed by a computer of: (a) expanding a data table to determine if data needed by a rule is available, the rule including a pathname designating a function table; (b) evaluating the function table designated by the pathname in the rule when a comparison indicates all data for the rule exists in the data table. 13. A process as recited in claim 12, wherein the function table resides on a linked list and includes function calls, and step (b) comprises: (b1) accessing the function table using the pathname; (b2) building a substitution table to provide an arguments list; and (b3) executing the functions listed in the function table using the arguments in the substitution table. 14. An interpreter process, comprising a step performed by a computer of: (a) expanding a data table to call a function. 15. An interpreter process comprising steps performed by a computer of: (a) analyzing a first message in a user defined first language to determine a meaning of the first message; and (b) producing a second message in a user defined second language in dependence on the meaning of the first message. 16. An interpreter process as recited in claim 15, wherein the first and second messages form a pair resulting in one of a translation from a natural language to a natural language, a translation from a natural language to an artificial language, a translation from an artificial language to a natural language and a translation from an artificial language to an artificial language. 17. An interpreter process, comprising steps performed by a computer of: (a) retrieving a message designating a workspace for (b) moving to a system workspace to determine interpretation information necessary to interpret the message; and (c) moving to the workspace for interpreting the message and interpreting the message in dependence upon the interpretation information. 18. A process as recited in claim 17, wherein step (c) comprises the steps of: (c1) parsing the message; and (c2) evaluating the message. 19. A process as recited in claim 18, wherein the interpretation information designates a grammar table used to parse the message, an output table for parsing results and a table name of a table used to evaluate the message. 