Various embodiments of systems and methods for providing external device support for a device driver abstraction layer are disclosed. Some embodiments of a method may involve: accessing attribute information associating each of several keys with a respective device attributes, where each of the keys identifies a respective device; and configuring an interface to a device driver for communication with a device dependent on which device attributes the attribute information associates with the key that identifies the device. Configuring the interface may configure the interface to include one or more of interface features. Each of the interface features may support a respective device attribute.
Claims What is claimed is: 1. A method, comprising: accessing attribute information associating each of a plurality of keys with a respective plurality of device attributes, wherein each of the plurality of keys identifies a respective device; configuring an interface to a device driver for communication with a device dependent on which device attributes the attribute information associates with one of the plurality of keys, wherein the one of the plurality of keys identifies the device; wherein said configuring configures the interface to include one or more of a plurality of interface features, wherein each of the plurality of interface features supports a respective device attribute; updating the attribute information to include a new key identifying a new device and to associate one or more device attributes with the new key, wherein the plurality of interface features is not updated by said updating; and configuring an interface to a device driver for communication with the new device dependent on which device attributes the attribute information associates with the new key, wherein the interface to the device driver includes one or more of the plurality of interface features. 2. The method of claim 1, wherein the information associating each of the plurality of keys with a respective plurality of device attributes is stored in one or more files. 3. The method of claim 1, wherein device attributes include one or more of: an attribute indicating a number of slots included in an associated device, an attribute indicating whether an associated device is configured as a self-cleaning device, and an attribute indicating whether an associated device includes a barcode reader. 4. The method of claim 1, wherein the information is organized as a table. 5. The method of claim 1, wherein the key includes an inquiry string identifying a vendor ID and a product ID. 6. A method, comprising: storing on a computer system an attribute file indicating which one or more of a plurality of device attributes is associated with each of a plurality of keys, wherein each of the plurality of keys identifies a respective device; a device driver abstraction layer included in the computer system configuring an interface to a device driver for a device dependent on which of the plurality of device attributes is associated with one of the plurality of keys in the attribute file, wherein the one of the plurality of keys identifies the device; updating the attribute file to indicate which one or more of the plurality of device attributes is associated with a new key identifying a new device, wherein the device driver abstraction layer is not updated in response to the new device; the device driver abstraction layer configuring an interface to a device driver for the new device dependent on which of the plurality of device attributes are associated with the new key in the attribute file. 7. The method of claim 6, wherein the device driver abstraction layer includes a plurality of interface features, wherein said configuring an interface to a device driver for a device comprises selecting one or more of the plurality of interface features to include in the interface dependent on which of the plurality of device attributes are associated with the one of the plurality of keys. 8. A computer accessible storage medium comprising program instructions executable to implement a device driver abstraction layer, wherein the device driver abstraction layer is configured to: access an attribute file, wherein the attribute file associates each of a plurality of keys with a respective plurality of device attributes, wherein each of the plurality of keys identifies a respective device; configure an interface to a device driver for a device dependent on which attributes are associated with a key identifying the device in the attribute file, wherein the configured interface includes a respective interface feature for each attribute of the plurality of attributes associated with the key in the attribute file; in response to the attribute file being updated to include a new key identifying a new device and to associate one or more device attributes with the new key; and configure an interface to a device driver for communication with the new device dependent on which device attributes the attribute file associates with the new key. 9. The computer accessible storage medium of claim 8, wherein device attributes include one or more of: an attribute indicating a number of slots included in an associated device, an attribute indicating whether an associated device is configured as a self-cleaning device, and an attribute indicating whether an associated device is configured to read barcodes. 10. The computer accessible storage medium of claim 8, wherein the key includes an inquiry string identifying a vendor ID and a product ID. 11. A system, comprising: a device; a device driver abstraction layer; an attribute file; and a device driver for the device; wherein the device driver abstraction layer is operable to receive a request to access the device and to responsively configure an interface to the device driver for the device; wherein the device driver abstraction layer is operable to configure the interface to the device driver dependent on which attributes are associated with a key identifying the device in the attribute file; wherein the device driver abstraction layer is operable to configure the interface to include a respective interface feature for each attribute of the plurality of attributes associated with the key in the attribute file; wherein the device driver abstraction layer is further operable, in response to the attribute file being updated, to include a new key identifying a new device and to associate one or more device attributes with the new key; and wherein the device driver abstraction layer is further operable to configure an interface to a device driver for the new device dependent on which device attributes are associated with the new key in the attribute file, wherein the device driver abstraction layer is not updated in response to the new device. 