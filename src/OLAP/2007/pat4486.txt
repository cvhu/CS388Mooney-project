A method, apparatus and data construct set for generating simulation data structures which can be used by a modeling system to interface between a PLC and simulator, the construct set encapsulating logic and at least a sub-set of simulation information for a particular resource.
Claims What is claimed is: 1. A method for generating code and simulation information for use by a controller and a simulator, respectively, the method comprising the steps of: for at least one mechanical resource, encapsulating resource logic in a control assembly (CA); identifying at least one of the CAs corresponding to at least one resource; using the at least one identified CA instance to generate code for controlling the at least one resource; and using the at least one identified CA instance to generate simulation information; providing the code and the simulation information to the controller and the simulator, respectively; using the controller to perform the code thereby generating output signals; providing the output signals to the simulator; and using the simulator to generate simulator output as a function of both the received output signals and the simulation information. 2. The method of claim 1 wherein the simulator output includes at least one of feedback signals to the controller and visual representations of at least one resource cycling through activities. 3. The method of claim 1 wherein the step of identifying at least one CA corresponding to at least one resource includes providing an interface for specifying the at least one resource. 4. The method of claim 3 wherein the step of providing an interface includes providing a graphical user interface wherein icons are used to graphically represent the at least one resource. 5. The method of claim 4 further including the step of using the interface to specify specific characteristics of at least a sub-set of the resources associated with the at least one identified CA. 6. The method of claim 1 wherein the step of using the at least one identified CA to generate code includes compiling the logic in the at least one identified CA to generate the code. 7. The method of claim 6 wherein the step of using the at least one identified CA to generate simulation information includes gleaning information from the at least one identified CA and using the gleaned information to generate the simulation information. 8. The method of claim 1 wherein the step of using the at least one identified CA to generate simulation information includes gleaning information from the at least one CA and using the gleaned information to generate the simulation information. 9. The method of claim 8 wherein the step of encapsulating also includes encapsulating simulation information for the at least one resource corresponding to at least one CA and wherein the step of gleaning includes retrieving the simulation information. 10. The method of claim 9 wherein the controller is a programmable logic controller that provides I/O combination output signals, the simulator is a module that provides simulator output by displaying visual representations of resources performing activities, the encapsulated simulation information includes I/O combinations correlated with specific visual representations in a table and the step of gleaning includes accessing the table and retrieving the correlated combination/representation information. 11. The method of claim 10 wherein the controller also accepts feedback signals, the encapsulated simulation information further includes I/O feedback combinations correlated with specific simulation events in a feedback table, the step of gleaning includes accessing the feedback table and retrieving the correlated feedback combination/simulation event information and, wherein, the simulator also provides output by providing feedback signals to the controller as a function of the gleaned information. 12. The method of claim 10 wherein the visual representations are motion pictures. 13. The method of claim 8 wherein the gleaned information includes a first simulation information set for the at least one identified CA and the method further includes the step of, for each of at least a subset of the CAs, encapsulating a second simulation information set in a data template and, wherein the step of using the gleaned information includes the step of combining the first and second simulation information sets for each identified CA to generate a separate data structure for each identified CA. 14. The method of claim 13 wherein resource operation during activities is dependent on resource environment and each second simulation information set models a resource environment. 15. The method of claim 13 wherein resource operation during activities is dependent on resource characteristics and each second simulation information set models resource characteristics. 16. The method of claim 13 further including the step of, prior to compiling, sequencing requested activities and, wherein, resource operation during activities is dependent on prior activities and each second simulation information set includes information indicating prior activities and modeling the effects of prior activities on resource operation. 17. The method of claim 1 wherein the controller accepts feedback signals and, wherein, the simulation information is useable to generate simulation feedback signals indicating simulation events. 18. The method of claim 1 wherein the simulation information is useable to generate visual representations of resources cycling through activities. 19. The method of claim 18 wherein the controller accepts feedback signals and, wherein, the simulation information is also useable to generate simulation feedback signals indicating simulation events. 20. The method of claim 1 wherein the controller performs the code to generate output signals which, when provided to the at least one resource, cause the resource to cycle through requested activities and, wherein, the simulator information enables the simulator to receive the controller output signals and generate simulation output as a function thereof. 21. An apparatus to be used with a system including a simulator and a controller, the apparatus for generating code and simulation information for use by the controller and the simulator, respectively, the apparatus comprising: a database including at least one control assembly (CA) for at least one resource type, the at least one CA encapsulating logic information corresponding to the at least one resource type; an editor for identifying at least one instance of at least one CA corresponding to at least one resource, a processor running a program to perform the steps of: using the at least one identified CA to generate code for the corresponding at least one resource; and using the at least one identified CA instance to generate simulation information for the corresponding at least one resource. 22. The apparatus of claim 21 wherein the processor executes the program to further perform the step of providing the code and the simulation information to the controller and the simulator, respectively. 23. The apparatus of claim 21 wherein the step of using the at least one identified CA instance to generate code includes compiling the at least one identified CA instance logic to generate the code. 24. The apparatus of claim 21 wherein the step of using the at least one identified CA instance to generate simulation information includes gleaning the information from the at least one identified CA and using the gleaned information to generate the simulation information. 25. The apparatus of claim 24 wherein at least one of the CAs also encapsulates simulation information for a corresponding at least one resource and wherein the processor gleans by retrieving the simulation information. 26. The apparatus of claim 25 wherein the controller is a programmable logic controller that provides I/O combination output signals, the simulator is a module that displays visual representations of resources cycling through activities, at least a subset of the encapsulated simulation information includes I/O combinations correlated with specific visual representations in a table and wherein the processor gleans by accessing the table and retrieving the correlated combination/representation information. 27. The apparatus of claim 26 wherein the controller also accepts feedback signals, at least a subset of the encapsulated simulation information further includes I/O feedback combinations correlated with specific simulation events in a feedback table and the processor gleans by accessing the feedback table and retrieving the correlated feedback combination/simulation event information. 28. The apparatus of claim 25 wherein the gleaned information includes a first simulation information set and at least a second simulation information set is accessible to the processor and the processor performs the step of using the gleaned information by combining the first and second simulation information sets for each instantiated CA to generate a separate data structure for each instantiated CA. 29. The apparatus of claim 21 wherein the controller accepts feedback signals and, wherein, the simulation information is useable by the simulator to generate simulation feedback signals indicating simulation events. 30. The apparatus of claim 21 wherein the simulation information is useable by the simulator to generate visual representations of resources cycling through activities. 31. The apparatus of claim 30 wherein the controller accepts feedback signals and, wherein, the simulation information is also useable by the simulator to generate simulation feedback signals indicating simulation events. 32. The apparatus of claim 21 wherein the controller performs the code to generate output signals which, when provided to at least one resource, cause the at least one resource to cycle through requested activities and, wherein, the simulation information enables the simulator to receive the controller output signals and generate simulation output as a function thereof. 