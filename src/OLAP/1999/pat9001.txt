A Virtual Rack module for a programmable logic controller. The Virtual Rack module comprises a subroutine written using a programming language understandable to the programmable logic controller, preferably using the relay ladder logic programming language. The main control program and the Virtual Rack module are compiled on the programming terminal connected to the programmable logic controller and then downloaded into the memory of the programmable logic controller. Once downloaded, the programmer can use configuration screens generated by the Virtual Rack module and displayed on the programming terminal to configure various input and output devices independent of when and where the input and output devices are connected to the programmable logic controller.
Claims What is claimed is: 1. A method of using a Virtual Rack module, comprising the steps of: installing an executable code containing a main control program and a Virtual Rack module in a programmable logic controller; configuring at least one module type connected to the programmable logic controller during runtime by using at least one configuration screen generated by the Virtual Rack module, whereby the Virtual Rack module allows the selected module type to be configured independent of when and where the at least one module type was installed in the programmable logic controller without creating a different executable code. 2. The method of claim 1 further comprising the step of selecting a slot to be configured in said configuration step by clicking on a slot number display box located on the at least one configuration screen generated by the Virtual Rack module. 3. The method of claim 1 further comprising the step of selecting the at least one module type by clicking on a radio button located on the at least one configuration screen generated by the Virtual Rack module. 4. The method of claim 1 further comprising the step of activating the at least one module type by clicking on a change slot type button located on the at least one configuration screen generated by the Virtual Rack module. 5. The method of claim 1, wherein the at least one configuration screen generated by the Virtual Rack module comprises a configuration screen for a Digital Input module type. 6. The method of claim 5, wherein the at least one configuration screen for the Digital Input module type includes at least one of a channel number reference, a polarity and a state configuration field. 7. The method of claim 1, wherein the at least one configuration screen generated by the Virtual Rack module comprises a configuration screen for a Digital Output module type. 8. The method of claim 7, wherein the at least one configuration screen for the Digital Output module type includes at least one of a channel number reference, a state and a force configuration field. 9. The method of claim 1, wherein the at least one configuration screen generated by the Virtual Rack module comprises a configuration screen for an Analog Input module type. 10. The method of claim 9, wherein the at least one configuration screen for the Analog Input module type includes at least one of a channel number reference, a Low R, a High R, a factor, and a value configuration field. 11. The method of claim 1, wherein the at least one configuration screen generated by the Virtual Rack module comprises a configuration screen for an Analog Output module type. 12. The method of claim 11, wherein the at least one configuration screen for the Analog Output module type includes at least one of a channel number reference, a low R, a high R, a force analog and a value configuration field. 13. The method of claim 12, wherein the force analog configuration screen generated by the Virtual Rack module includes sliders for allowing a programmer to check operation of a field device by directly forcing a current signal to the field device and displaying a current output of the field device. 14. The method of claim 1, wherein the at least one configuration screen generated by the Virtual Rack module comprises a configuration screen for a Flex Analog Output module type. 15. The method of claim 14, wherein the at least one configuration screen for the Flex Analog Output module type includes at least one of a channel number reference, a low R, a high R, a force analog and a value configuration field. 16. The method of claim 15, wherein the force analog configuration screen generated by the Virtual Rack module includes sliders for allowing the programmer to check operation of a field device by directly forcing a current signal to the field device and displaying a current output of the field device. 17. The method of claim 1, wherein the at least one configuration screen generated by the Virtual Rack module comprises a configuration screen for a 16/16 Block module type. 18. The method of claim 17, wherein the at least one configuration screen for the 16/16 Block module type includes at least one of a channel number reference, a polarity, a state configuration field in an input section of the 16/16 Block module type, and at least one of a state and a force configuration field in an output section of the 16/16 Block module type. 19. The method of claim 1, wherein the at least one configuration screen generated by the Virtual Rack module comprises a configuration screen for a VHSC module type. 20. The method of claim 19, wherein the at least one configuration screen for the VHSC module type includes at least one of a channel number reference, a counter total display, an On Latch, an Off Latch, an Enable Output, a counter mode, a counter reset and a rollover configuration field. 21. A method of operating a programmable logic controller to create a generic control system by using a Virtual Rack module, comprising the steps of: creating a main control program and a Virtual Rack module using a programming terminal connected to the programmable logic controller; compiling the main control program and the Virtual Rack module to create an executable code; and downloading the executable code from the programming terminal into the programmable logic controller, whereby the Virtual Rack module creates a generic control system when called by the main control program and allows a user to configure at least one module type connected to the programmable logic controller during runtime independent of where and when the at least one module type was connected to the programmable logic controller without creating a different executable code. 22. The method of claim 21, wherein the main control program and the Virtual Rack module are created using a programming language understandable by the programmable logic controller. 23. The method of claim 22, wherein the programming language comprises relay ladder logic programming language. 24. A method of creating a generic control system, the method comprising the steps of: downloading an executable code including a main control program and a Virtual Rack module into a memory of a programmable device; selecting at least one module type connected to the programmable device by using a configuration screen generated by the Virtual Rack module; and configuring the at least one module type during runtime using the configuration screen generated by the Virtual Rack module without creating a different executable code. 25. A method of creating a generic control system in a programmable logic controller by using a Virtual Rack module, comprising the steps of: programming a ladder logic program to create an executable code containing a software engine for the generic control system; creating a configuration screen for configuring the software engine; and using the configuration screen for assigning channel numbers in the Virtual Rack module to addresses in the programmable logic controller during runtime without creating a different executable code. 26. An apparatus for creating a generic control system by using a Virtual Rack module, comprising: a programming terminal having a data storage device for storing a set of program instructions compiled from a main control program that includes a Virtual Rack module; a programmable device connected to said programming computer, said programmable device including a memory for storing the set of program instructions from said programming terminal and a microprocessor for processing the set of program instructions stored in the memory, wherein said generic control system allows configuration of at least one module type connected to the programmable device during runtime without creating a different set of program instructions. 27. The apparatus according to claim 26, wherein the memory of said programmable logic controller comprises an electronically erasable programmable read-only memory. 28. The apparatus according to claim 26, further comprising at least one module type installed in a slot of said programmable logic controller. 29. The apparatus according to claim 28, wherein said at least one module type comprises a Digital Input module type. 30. The apparatus according to claim 28, wherein said at least one module type comprises a Digital Output module type. 31. The apparatus according to claim 28, wherein said at least one module type comprises a Analog Input module type. 32. The apparatus according to claim 28, wherein said at least one module type comprises a Analog Output module type. 33. The apparatus according to claim 28, wherein said at least one module type comprises a Flex Analog Output module type. 34. The apparatus according to claim 28, wherein said at least one module type comprises a 16/16 Block module type. 35. The apparatus according to claim 28, wherein said at least one module type comprises a VHSC module type. 