A process and apparatus generates a sequence of steps for assembly or disassembly of a mechanical system. Each step in the sequence is geometrically feasible, i.e., the part motions required are physically possible. Each step in the sequence is also constraint feasible, i.e., the step satisfies user-definable constraints. Constraints allow process and other such limitations, not usually represented in models of the completed mechanical system, to affect the sequence.
Claims We claim: 1. An apparatus for generating a disassembly sequence for a mechanical system, wherein the mechanical system comprises a plurality of parts, comprising: a) a processing unit; b) a storage system connected with the processing unit; c) an input device connected with the processing unit; d) an output device connected with the processing unit; e) model input means for using the input device to load a model of the mechanical system into the storage system, wherein the model defines the plurality of parts and relationships therebetween in the mechanical system; f) constraint input means for loading constraints into the storage system, where a constraint is a design rule that precludes certain geometrically feasible sequences of disassembly steps in a disassembly sequence; g) output means for using the output device to communicate a disassembly sequence to a user; h) candidate sequence means for generating a candidate disassembly sequence, where each step in the candidate disassembly sequence is both geometrically feasible and constraint feasible; and i) interactive means for generating the disassembly sequence, comprising means for performing the steps of: i) invoking the candidate sequence means; ii) invoking the output means; and iii) if the user indicates that additional constraints are desired then invoking the constraint means and restarting at step i). 2. The apparatus of claim 1, wherein constraints accepted by the constraint input means comprise at least one of: PRH-STAT, PRH-SUBASSY, REQ-CLUSTER, REQ-FASTENER, REQ-LINEAR-CLUSTER, REQ-ORDER-FIRST, REQ-ORDER-LAST, REQ-ORDER-LIASON, REQ-ORDER-PART, REQ-PART-SPECIAL, REQ-PATHS-AXIAL, EQ-STACK, REQ-SUBASSY, REQ-SUBASSY-WHOLE, REQ-SUBSEQUENCE, REQ-SUCCESS-PART, REQ-TOOL, and SUG-NAME. 3. An apparatus for generating a disassembly sequence for a mechanical system, wherein the mechanical system comprises a plurality of parts, comprising: a) a processing unit b) a storage system connected with the processing unit; c) an input device connected with the processing unit; d) an output device connected with the processing unit; e) model input means for using put device to load a model of the mechanical system into the storage system, wherein the model defines the plurality of parts and relationships therebetween in the mechanical system, wherein the model input means comprises contact means for determining a contacts set comprising contacts between parts in the assembled mechanical system; f) constraint input means for loading constraints into the storage system; g) output means for using the output device to communicate a disassembly sequence to a user; h) candidate sequence means for generating a candidate disassembly sequence, where each step in the candidate disassembly sequence is both geometrically feasible and constraint feasible, wherein the candidate sequence means comprises: i) candidate action means for determining a disassembly action from the contacts set and a model of a portion of the mechanical system, wherein a disassembly action comprises a part to be removed from the mechanical system and a path along which the part can be removed; ii) constraint checking means for checking constraint feasibility of a disassembly action based on constraints loaded by the constraint input means; iii) geometry checking means for checking geometric feasibility of a disassembly action; and iv) means for performing the steps of: a) starting with an empty disassembly sequence; b) invoking the candidate action means to determine a candidate disassembly action; c) invoking the geometry checking means to determine the geometric feasibility of the candidate disassembly action; d) invoking the constraint checking means to determine constraint feasibility of the candidate disassembly action; e) if the candidate disassembly action is both geometrical feasible and constraint feasible, then adding the candidate disassembly action to the disassembly sequence and removing the part from the model of the portion of the mechanical system; and f) repeating steps b) through e) until a desired terminal condition has been reached; and i) interactive means for generating the disassembly sequence, comprising means for performing the steps of: i) invoking the candidate sequence means; ii) invoking the output means; and iii) if the user indicates that additional constraints are desired then invoking the constraint means and restarting at step i). 4. The apparatus of claim 3, wherein the contact means comprises: a) means for locating surfaces in the assembled mechanical system that are substantially in contact with other surfaces in the assembled mechanical system; b) means for establishing a contact directions between said surfaces from the orientation of said surfaces; and c) means for encoding the identities of said surfaces and the corresponding contact directions into a data structure. 5. The apparatus of claim 3, wherein the constraint input means comprises means for loading constraint objects into the storage system, wherein a constraint objectors queriable as to whether a disassembly action satisfies the constraint; and wherein the constraint checking means comprises means for querying each constraint object and indicating that a disassembly action is constraint feasible if all of the constraint objects indicate that the disassembly action is valid. 6. The apparatus of claim 3, wherein the geometry checking means comprises: a) a z-buffer; b) means for clearing the z-buffer; c) means for setting the viewpoint of the z-buffer to the opposite of the direction required by the candidate disassembly action; d) means for drawing the mechanical system except for the part to be removed by the candidate disassembly action in the z-buffer in a first color; e) means for drawing the part to be removed by the candidate disassembly action in the z-buffer in a second color, where the second color is different from the first color; f) means for checking for pixels with the second color in the z-buffer; and g) means for providing an indication that the candidate disassembly action is not geometrically feasible if there are any selected patterns of pixels with the second color in the z-buffer. 7. The apparatus of claim 3, wherein constraints accepted by the constraint input means comprise at least one of: PRH-STAT, PRH-SUBASSY, REQ-CLUSTER, REQ-FASTENER, REQ-LINEAR-CLUSTER, REQ-ORDER-FIRST, REQ-ORDER-LAST, REQ-ORDER-LIASON, REQ-ORDER-PART, REQ-PART-SPECIAL, REQ-PATHS-AXIAL, EQ-STACK, REQ-SUBASSY, REQ-SUBASSY-WHOLE, REQ-SUBSEQUENCE, REQ-SUCCESS-PART, REQ-TOOL, and SUG-NAME. 8. A process for using a computer to generate a disassembly sequence for a mechanical system, wherein the mechanical system comprises a plurality of parts, comprising the steps of: a) loading a model of the mechanical system into the computer; b) generating a candidate disassembly sequence; c) communicating the candidate disassembly sequence to a user; and d) if the user indicates that constraints are required, then accepting constraints from the user, where a constraint is a design rule that precludes certain geometrically feasible sequences of disassembly steps in a disassembly sequence, and restarting the process at step b). 9. The process of the claim 8, wherein the step of loading a model of the mechanical system comprises determining contacts between parts in the assembled mechanical system. 10. The process of the claim 8, wherein the step of accepting constraints from the user comprises accepting from the user new constraints. 11. The process of the claim 8, wherein the step of accepting constraints from the user comprises accepting from the user redefinitions of existing constraints. 12. The process of the claim 8, wherein the step of accepting constraints from the user comprises accepting from the user direction to remove existing constraints. 13. The process of the claim 8, wherein the step of accepting constraints from the user comprises accepting from the user direction to suspend existing constraints. 14. The process of claim 8, wherein constraints accepted from the user comprise at least one of: PRH-STAT, PRH-SUBASSY, REQ-CLUSTER, REQ-FASTENER, REQ-LINEAR-CLUSTER, REQ-ORDER-FIRST, REQ-ORDER-LAST, REQ-ORDER-LIASON, REQ-ORDER-PART, REQ-PART-SPECIAL, REQ-PATHS-AXIAL, EQ-STACK, REQ-SUBASSY, REQ-SUBASSY-WHOLE, REQ-SUBSEQUENCE, REQ-SUCCESS-PART, REQ-TOOL, and SUG-NAME. 15. A process for using a computer to generate a disassembly sequence for a mechanical system, wherein the mechanical system comprises a plurality of parts, comprising the steps of: a) loading a model of the mechanical system into the computer; b) generating candidate disassembly sequence, wherein the step of generating a candidate disassembly sequence comprises: i) initializing a candidate disassembly sequence to empty; ii) generating a candidate disassembly action, where a candidate disassembly action comprises at least one part to be removed from the model of the mechanical system and a path along which the part is to be removed; iii) checking the candidate disassembly action by, in any order: a) checking the candidate disassembly action and the model of the mechanical system for geometric feasibility of the candidate disassembly action; and b) checking the candidate disassembly action, the model of the mechanical system, and any constraints for constraint feasibility of the candidate disassembly action; iv) adding the candidate disassembly action to the candidate disassembly sequence if the candidate disassembly action is both geometrically feasible and constraint feasible; and V) repeating steps ii) through iv) using the portion model until a desired terminal condition is reached; c) communicating the candid-ate disassembly sequence to a user; and d) if the user indicates that constraints are required, then accepting constraints from the user, and restarting the-process at step b). 16. The process of the claim 15, wherein the computer comprises a z-buffer, and wherein the step of checking the candidate disassembly action and the model of the mechanical system for geometric feasibility of the candidate disassembly action comprises; a) clearing the z-buffer; b) setting the viewpoint of the z-buffer to the opposite of he direction required by the candidate disassembly action; c) drawing the mechanical system except for the part to be removed by the candidate disassembly action in the z-buffer in a first color; d) drawing the part to be removed by the candidate disassembly action in the z-buffer in a second color, where the second color is different from the first color; e) checking for pixels with the second color in the z-buffer; and f) providing an indication that the candidate disassembly action is not geometrically feasible if there are any pixels with the second color in the z-buffer. 17. The process of claim 15, wherein constraints accepted from the user comprise at least one of: PRH-STAT, PRH-SUBASSY, REQ-CLUSTER, REQ-FASTENER, REQ-LINEAR-CLUSTER, REQ-ORDER-FIRST, REQ-ORDER-LAST, REQ-ORDER-LIASON, REQ-ORDER-PART, REQ-PART-SPECIAL, REQ-PATHS-AXIAL, EQ-STACK, REQ-SUBASSY, REQ-SUBASSY-WHOLE, REQ-SUBSEQUENCE, REQ-SUCCESS-PART, REQ-TOOL, and SUG-NAME. 18. A process for using a computer to generate a disassembly sequence for a mechanical system, wherein the mechanical system comprises a plurality of parts, comprising the steps of: a) loading a model of the mechanical system into the computer; b) determining contacts between parts in the assembled mechanical system; c) initializing a candidate disassembly sequence to empty; d) generating a candidate disassembly action, where a candidate disassembly action comprises at least one part to be removed from the model of the mechanical system and a path along which the part is to be removed; e) checking the candidate disassembly action by, in any order: i) checking the candidate disassembly action and the model of the mechanical system for geometric feasibility of the candidate disassembly action; and ii) checking the candidate disassembly action, the model of the mechanical system, and any constraints for constraint feasibility of the candidate disassembly action; f) adding the candidate disassembly action to the candidate disassembly sequence if the candidate disassembly action is both geometrically feasible and constraint feasible; g) repeating steps c) through f) until a desired terminal condition is reached; h) communicating the candidate disassembly sequence to a user; and i) if the user indicates that constraints are required, then accepting constraints from the user, and restarting the process at step c). 19. The process of claim 18, wherein constraints accepted from the user comprise at least one of: PRH-STAT, PRH-SUBASSY, REQ-CLUSTER, REQ-FASTENER, REQ-LINEAR-CLUSTER, REQ-ORDER-FIRST, REQ-ORDER-LAST, REQ-ORDER-LIASON, REQ-ORDER-PART, REQ-PART-SPECIAL, REQ-PATHS-AXIAL, EQ-STACK, REQ-SUBASSY, REQ-SUBASSY-WHOLE, REQ-SUBSEQUENCE, REQ-SUCCESS-PART, REQ-TOOL, and SUG-NAME. 20. A process for assembling a mechanical system, wherein the mechanical system comprises a plurality of parts, comprising the steps of: a) loading a model of the mechanical system into a computer; b) determining contacts between parts in the assembled mechanical system; c) initializing a candidate disassembly sequence to empty; d) generating a candidate disassembly action, where a candidate disassembly action comprises a part to be removed from the model of the mechanical system and a path on which the part is to be removed; e) checking the candidate disassembly action by, in any order: i) checking the candidate disassembly action and the model of the mechanical system for geometric feasibility of the candidated disassembly action; and ii) checking the candidate disassembly action, the model of the mechanical system, and any constraints for constraint feasibility of the candidate disassembly action; f) adding the candidate disassembly action to the candidate disassembly sequence if the candidate disassembly action is both geometrically feasible and constraint feasible; g) repeating steps c) through f) until a desired terminal condition is reached; h) communicating the candidate disassembly sequence to a user; i) if the user indicates that constraints are required, then accepting constraints from the user, and restarting the process at step c); j) if the user indicates that no additional constraints are required, then communicating the candidate disassembly sequence; and k) assembling the mechanical system by following the disassembly sequence in reverse order. 