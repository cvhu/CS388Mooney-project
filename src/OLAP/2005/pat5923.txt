A composite object group (COG) data structure embodied in a computer-readable medium for building a control system that has both a clock cycle and event processing is provided. An interface for passing information to and from the COG data structure is provided. One or more data flow objects are provided in the COG to accept input data and to produce output data on the clock cycle. The data flow object is connected to the interface and provides sampled-data processing for the control system. One or more state machine objects are provided in the COG; each includes a plurality of states and a plurality of transitions between the states that are each triggered by an event. The state machine object provides event-driven processing for the control system, whereby the COG data structure provides both sampled-data and event-driven processing for the control system.
Claims We claim: 1. A composite object group (COG) data structure embodied in a computer-readable medium for building a control system that has a clock cycle, said COG data structure being implemented using object-oriented programming and comprising: an interface for passing information to and from said COG data structure, said interface passing at least one control signal for controlling an aspect of said control system; a data flow object arranged to accept input data and to produce output data on said clock cycle, said data flow object connected to said interface and providing sampled-data processing for said control system; and a state machine object that includes a plurality of states and a plurality of transitions between said states that are each triggered by an event, said state machine object providing event-driven processing for said control system and being connected to said data flow object, whereby said COG data structure provides both sampled-data and event-driven processing for said control system. 2. A COG data structure as recited in claim 1 wherein said control system is an electromechanical control system. 3. A COG data structure as recited in claim 1 wherein said control system is a real-time control system. 4. A COG data structure as recited in claim 1 further comprising: a state transition object included within said state machine object, said state transition object being associated with one of said transitions and providing an action to be performed upon said one of said transitions, whereby said state machine object provides said action for said COG. 5. A COG data structure as recited in claim 1 further comprising: an execution method included in said data flow object, said execution method receiving said input data from sensors of said control system and calculating said output data. 6. A COG data structure as recited in claim 1 further comprising: connections between said interface, said data flow object and said state machine object that are represented graphically to a user on a computer screen. 7. A COG data structure as recited in claim 1 further comprising: a plurality of other COG data structures in a hierarchy, said hierarchy modeling said control system. 8. A computer-implemented method of defining a composite object group for use in building a control system, said method comprising: providing an interface for passing information to and from said composite object group, said interface passing at least one control signal for controlling an aspect of said control system; providing a data flow object that is arranged to accept input data and to produce output data on a clock cycle of said control system, said data flow object providing sampled-data processing for said electromechanical control system; providing a state machine object that includes a plurality of states, said state machine object providing event-driven processing for said control system; providing at least one transition between said states that is triggered by an event; linking said state machine object to said data flow object; and linking said state machine object or said data flow object to said interface, whereby said composite object group provides both sampled-data and event-driven processing for said control system. 9. A method as recited in claim 8 wherein said control system is an electromechanical control system. 10. A method as recited in claim 8 wherein said control system is a real-time control system. 11. A method as recited in claim 8 further comprising: providing a state transition object, said state transition object being associated with said transition and providing an action to be performed upon transition, whereby said state transition object provides said action for said composite object group. 12. A method as recited in claim 8 further comprising: defining an execution method of said data flow object, said execution method receiving said input data from sensors of said control system and calculating said output data. 13. A method as recited in claim 8 further comprising: linking said state machine object to said data flow object using a graphical user interface; and linking said state machine object or said data flow object to said interface using a graphical user interface, whereby said composite object group is represented graphically to a user on a computer screen. 14. A method as recited in claim 8 further comprising: defining a plurality of other composite object group in a hierarchy, said hierarchy modeling said control system. 15. The method, as recited in claim 8, further comprising: defining a plurality of other composite object groups; and placing the composite object groups in a hierarchy by placing a composite object group within another composite object group. 16. A control system for use on a real-time computer, said control system comprising: a system diagram graphically representing components and interconnections between components, said system diagram including a data flow component arranged to accept input data and to produce output data on a clock cycle, said data flow component providing sampled-data processing for said control system, and a state machine component that includes a plurality of states and a plurality of transitions between said states that are each triggered by an event, said state machine component providing event-driven processing for said control system; and a database repository storing computer code associated with said system diagram and said components, said database repository including a system diagram file representing said graphical system diagram, and a compiled code file for each component including compiled computer code for executing the functionality of said each component, whereby said system diagram file and said compiled code files of said control system may be loaded onto said real-time computer for execution. 17. A control system as recited in claim 16 wherein said control system is an electromechanical control system. 18. A control system as recited in claim 16 wherein said control system is a real-time control system. 19. A control system as recited in claim 16 further comprising: a composite object group included in said system diagram, said data flow component and said state machine component included in said composite object group, whereby said composite object group provides both sampled-data and event-driven processing for said control system; and a diagram file for said composite object group included in said database repository representing the contents of said composite object group. 20. The COG data structure, as recited in claim 1, further comprising a plurality of other COG data structures, each of the plurality of other COG data structures, comprising: an interface for passing information to and from said COG data structure, said interface passing at least one control signal for controlling an aspect of said control system; a data flow object arranged to accept input data and to produce output data on said clock cycle, said data flow object connected to said interface and providing sampled-data processing for said control system; and a state machine object that includes a plurality of states and a plurality of transitions between said states that are each triggered by an event, said state machine object providing event-driven processing for said control system and being connected to said data flow object, whereby said COG data structure provides both sampled-data and event-driven processing for said control system wherein a hierarchy between COG data structures is defined by allowing one COG data structure to be a component within another COG data structure. 