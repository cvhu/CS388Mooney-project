A method and apparatus that enables multiple host connections with a multi-library system that allows dynamic tracking of all physical cartridge locations and provides continuous updates, while intercepting move or exchange commands from multiple hosts, converting them to the physical element address locations, and executing the commands. The system having a switching matrix for selectively connecting a plurality of hosts to drives for reading and writing data on data storage media, logic, operatively coupled to switching matrix, for providing a control signal to the switching matrix to connect a first host to a first drive, accessor controller for providing control signals to at least one accessor for instructing the at least one accessor to access data storage media in the library system and to move data storage media between the bins and the drives, and a processor, operatively coupled to the logic and the accessor controller, for controlling the logic and the accessor controller in response to a command from the first host to move a desired data storage media to the first drive and to read and write data on the desired data storage media.
Claims What is claimed is: 1. A device allocation manager for connecting multiple host to a multi-library system, comprising: a switching matrix for selectively connecting two or more hosts of a set of hosts separately and concurrently to two or more drives of a set of drives for transferring data between the set of hosts and data storage media coupled to the set of drives; logic, operatively coupled to switching matrix, for providing a control signal to the switching matrix to connect a first host of the set of host to a free drive of the set of drives; and a processor, operatively coupled to the logic, for controlling the logic in response to a command from the first host to transfer data between the free drive and the first host. 2. The device allocation manager of claim 1 wherein an address of the free drive is modified to match an address associated with the command from the host. 3. The device allocation manager of claim 1 wherein the processor identifies the free drive by scanning a demount queue for available drives. 4. The device allocation manager of claim 1 further comprising accessor controller for providing control signals to at least one accessor for instructing the at least one accessor to access data storage media in the library system and to move data storage media between the bins and the drives. 5. The device allocation manager of claim 1 wherein the processor intercepts the commands from the hosts, converts the commands to the physical element address locations of drives, and executes the commands. 6. The device allocation manager of claim 1 further comprising host ports for interfacing with the plurality of hosts and receiving commands from the hosts for accessing data storage media located in bins of the library system. 7. The device allocation manager of claim 6 wherein the host ports are SCSI ports. 8. The device allocation manager of claim 6 wherein the processor is coupled to the host ports and the logic via an internal bus. 9. The device allocation manager of claim 8 further comprising memory coupled to the internal bus. 10. The device allocation manager of claim 1 wherein the switching matrix further comprises: a plurality of buses, the plurality of buses comprising a bus associated with each host; a plurality of switches, the plurality of switches being coupled to the buses, each switch being coupled to at least one drive; and a plurality of selection signal lines, the plurality of selection signal lines commanding each switch to connect the host on a bus to the free drive. 11. A method for connecting multiple host to a data library, comprising the steps of: selectively connecting two or more hosts of a set of hosts separately and concurrently to two or more drives of a set of drives for transferring data between the set of host and the set of drives; in response to a command from a first host of the set of host providing a control signal to connect the first host to a free drive of the set of drives; converting the command from the first host to a physical location of a desired data storage media; and executing the command to transfer data between the free drive and the first host. 12. The method of claim 11 wherein the step of converting commands further comprises the step of modifying an address of the free drive to match an address associated with the command from the first host. 13. The method of claim 12 the step of modifying an address of the free drive further comprises the step of identifying the free drive by scanning a demount queue for available drives. 14. The method of claim 11 wherein the step of converting the commands further comprises translating a logical location of the desired data storage media known to the first host to a physical location of the data storage media in the library system. 15. The method of claim 11 wherein the step of executing the command further comprises the step of using the physical location of the desired data storage media to control an accessor to move the desired data storage media to the free drive for reading and writing data on the desired data storage media. 16. The method of claim 15 wherein the step of selectively connecting any of a plurality of host to any of a plurality of drives further comprising the steps of: monitor a bus until the bus becomes free; asserting the bus to indicate the bus is busy; and switching a free drive to the bus. 17. The method of claim 11 further comprising the steps of optimizing commands and reconfiguring drive addresses for fast access to data between hosts and drives. 18. An article of manufacture for a computer-based user-interface, the article of manufacture comprising a computer readable medium having instructions for causing a computer to perform automated reconcile of a server and client database in a virtual tape server, the method comprising the steps of: selectively connecting two or more hosts of a set of hosts separately and concurrently to two or more drives of a set of drives for transferring data between the set of host and the set of drives; in response to a command from a first host of the set of host providing a control signal to connect the first host to a free drive of the set of drives; converting the command from the first host to a physical location of a desired data storage media; and executing the command to transfer data between the free drive and the first host. 19. The article of manufacture of claim 18 wherein the step of converting commands further comprises the step of modifying an address of the free drive to match an address associated with the command from the first host. 20. The article of manufacture of claim 19 the step of modifying an address of the free drive further comprises the step of identifying the free drive by scanning a demount queue for available drives. 21. The article of manufacture of claim 18 wherein the step of converting the commands further comprises translating a logical location of the desired data storage media known to the first host to a physical location of the data storage media in the library system. 22. The article of manufacture of claim 18 wherein the step of executing the command further comprises the step of using the physical location of the desired data storage media to control an accessor to move the desired data storage media to the free drive for reading and writing data on the desired data storage media. 23. The article of manufacture of claim 22 wherein the step of selectively connecting any of a plurality of host to any of a plurality of drives further comprising the steps of: monitor a bus until the bus becomes free; asserting the bus to indicate the bus is busy; and switching a free drive to the bus. 24. The article of manufacture of claim 18 further comprising the steps of optimizing commands and reconfiguring drive addresses for fast access to data between hosts and drives. 