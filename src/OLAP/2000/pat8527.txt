A family of novel multi-layer discrete-time neural net controllers is presented for the control of an multi-input multi-output (MIMO) dynamical system. No learning phase is needed. The structure of the neural net (NN) controller is derived using a filtered error/passivity approach. For guaranteed stability, the upper bound on the constant learning rate parameter for the delta rule employed in standard back propagation is shown to decrease with the number of hidden-layer neurons so that learning must slow down. This major drawback is shown to be easily overcome by using a projection algorithm in each layer. The notion of persistency of excitation for multilayer NN is defined and explored. New on-line improved tuning algorithms for discrete-time systems are derived, which are similar to e-modification for the case of continuous-time systems, that include a modification to the learning rate parameter plus a correction term. These algorithms guarantee tracking as well as bounded NN weights. An extension of these novel weight tuning updates to NN with an arbitrary number of hidden layers is discussed. The notions of discrete-time passive NN, dissipative NN, and robust NN are introduced.
Claims What is claimed is: 1. A method of controlling a plant through on-line tuning of a multi-layer neural network, comprising the steps of: obtaining data on output characteristics of the plant; estimating a functional output of the plant from past output of the plant and current values of a plurality of neural network weights and a plurality of neural network layer activation functions; initializing said neural network weights to give an initial neural network output of zero; updating said neural network weights to tune said multi-layer network in accordance with weight tuning equations: and and in accordance with one of the modified weight update equations: obtaining an error function from past and present output of the plant and a desired output of said plant; determining a response function to control future output of the plant; outputting said response function to the plant; and controlling the plant using said response function. 2. A method as claimed in claim 1, wherein said updating step further comprises conditions: ##EQU74## for weight update equation (a), and ##EQU75## for weight update equation (b), where .eta. is ##EQU76## for weight update equation (a) and .sigma. for weight update equation (b) is: ##EQU77## with .eta. being ##EQU78## 3. A method for direct adaptive control of a nonlinear plant having a sensed state x and an output trajectory, said sensed state evolving via an unknown function f(x), using a discrete-time neural network controller, comprising the steps of: obtaining data on past and present states of the plant; estimating said unknown function f(x) from past and present values of the past and present states of the plant and current values of a plurality of neural network weights and a plurality of neural network activation functions; comparing said sensed state with a desired state from a desired trajectory in an outer feedback loop to produce a tracking error signal; calculating a control action as a function of said tracking error signal and said functional estimate; applying said control action to said plant to drive said output trajectory toward said desired trajectory; and adjusting said plurality of neural network weights such that said discrete-time neural network controller guarantees tracking stability and bounded weights. 4. The method of claim 3, wherein said calculating step comprises extending standard delta rule technique to said tracking error signal, thereby providing guaranteed closed-loop stability without preliminary off-line training of said plurality of neural network weights. 5. The method of claim 3, wherein said discrete-time neural network comprises a passivity property, thereby guaranteeing robust performance of said discrete-time neural network controller. 6. A method of controlling future output of a plant via a neural network, comprising the steps of: obtaining actual and desired output characteristics of the plant; using said neural network to obtain modeled functional behavior of said actual output characteristics of said plant using a plurality of neural network weights and activation functions; initializing said neural network weights to give an initial neural network output of zero; updating said neural network weights to tune said multi-layer network in accordance with weight tuning equations: and and in accordance with one of the modified weight update equations: constructing a control signal from said actual output characteristics, said modeled functional behavior, and said desired output characteristics, and controlling said future output of the plant using the control signal. 