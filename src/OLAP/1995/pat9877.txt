A system and method of sequencing commands for operation of a volume positioning mechanism in an automated library is taught. The automated library has a plurality of volumes, a plurality of racks for storing the plurality of volumes and at least a first drive unit for recording data to or reading data from a volume mounted thereon by the volume positioning mechanism. Exogenous requests for data stored to the volumes or for storing data to volumes are received from time to time by the library. Each exogenous request for data in a volume is utilized to generate at least a first command for execution by the volume positioning mechanism. Commands as generated are stored in a command queue having a queue input level, a queue output level for the next scheduled command for execution and allowing a plurality of intervening levels. With each introduction of a new command to the command queue, the command queue is reordered with a goal of improving time to dispatch for execution of high priority commands.
Claims What is claimed is: 1. A method of operating a volume positioning mechanism in an automated library, the library having a plurality of volumes, a plurality of racks for storing the plurality of volumes and at least a first drive unit for recording data to or reading data from a volume mounted thereon by the volume positioning mechanism, the method comprising the steps performed by a data processing system of: processing each exogenous request for data in a volume to generate at least a first command for execution by the volume positioning mechanism; providing a command queue having a queue input level, a queue output level for the next scheduled command for execution and allowing a plurality of intervening levels; adding the at least first command to a command queue at the command queue input level; responsive to addition of a command to the command queue, selecting a command for each level in the queue by, qualifying commands for execution at a particular level, responsive to qualification of at least a first command for execution at the particular level, scoring each qualified command for execution at the particular level, placing the qualified command with the highest score in the command queue at the particular level and disqualifying the qualified command for consideration at any remaining levels; projecting a system state for after execution of the qualified command placed at a level in the command queue; and storing the projected system state with the command in the command queue; scanning the command queue for preselected patterns among adjacent commands; and responsive to location of an example of a preselected pattern, substituting a complex command for the adjacent commands. 2. A method of operating a volume positioning mechanism in an automated library, the library having a plurality of volumes, a plurality of racks for storing the plurality of volumes and at least a first drive unit for recording data to or reading data from a volume mounted thereon by the volume positioning mechanism, as set forth in claim 1, the method further comprising the steps performed by a data processing system of: responsive to failure to qualify a command for execution at a level, resetting as a current level an immediately preceding level; disqualifying the command at the current level; resetting the projected system state to that saved for a level preceding the current level; and reexecuting the selecting step for the current level. 3. A method of operating a volume positioning mechanism in an automated library, the library having a plurality of volumes, a plurality of racks for storing the plurality of volumes and at least a first drive unit for recording data to or reading data from a volume mounted thereon by the volume positioning mechanism, as set forth in claim 1, wherein the step of scoring includes the further steps of: scoring a command for execution as a function of time in the command queue, priority of the exogenous request from which the command was generated, location of the volume positioning mechanism and the projected system state. 4. A method of operating a volume positioning mechanism in an automated library, the library having a plurality of volumes, a plurality of racks for storing the plurality of volumes and at least a first drive unit for recording data to or reading data from a volume mounted thereon by the volume positioning mechanism, as set forth in claim 1, further comprising the step of: blocking complex commands from further selection for levels in the command queue; and wherein commands at levels between a level of a complex command and the command queue output level are blocked from further selection for levels in the command queue. 5. A method of operating a volume positioning mechanism in an automated library, the library having a plurality of volumes, a plurality of racks for storing the plurality of volumes and at least a first drive unit for recording data to or reading data from a volume mounted thereon by the volume positioning mechanism, as set forth in claim 1, further comprising the step of: periodically fetching previously unfetched commands from levels closest to the command queue output level for execution, thereby blocking further selection of those previously unfetched commands for reordering in the command queue. 6. An automated data storage library for supporting operation of a data base in a data processing system, comprising: a plurality of volumes; a plurality of storage locations for volumes; at least a first drive unit for reading information from and storing information to volumes; transporter means for transferring a volume between the storage locations and the first drive unit; a source of data requests; means responsive to receipt of a data request for generating at least a first command for execution by the transporter means; a command queue supporting a plurality of levels for commands progressing toward execution from a command queue input to a command queue output; means for placing the at least first command into a command queue along with a projected system state for after execution of the at least a first command beginning at the command queue input; means for sequencing the commands in the command queue including means responsive to qualification of at least a first command for execution at a particular level for scoring each qualified command for execution at the particular level and means for placing the qualified command with the highest score in the command queue at the particular level; means for projecting a system state for after execution of the command placed at a level in the command queue; means for storing the projected system state with the command in the command queue; means responsive to failure to qualify a command for execution at a level for resetting as a new current level an immediately preceding level; means for disqualifying the command at the new current level; means for resetting the projected system state to that saved for a command at a level preceding the new current level; means for locating preselected patterns of commands occurring in the command queue; and means for substituting a complex command for a located preselected pattern of commands. 7. An automated data storage library for supporting operation of a data base in a data processing system as set forth in claim 6 and further comprising: means for scoring a command for execution as a function of its elapsed time in the command queue, priority of the data request from which the command was generated, location of the transporter means and the projected system state subsequent to execution of any commands in the command queue ahead of the command being scored. 8. An automated data storage library for supporting operation of a data base in a data processing system as set forth in claim 7 and further comprising: means for blocking complex commands from further selection for levels in the command queue; and wherein commands at levels between a level of a complex command and the command queue output level are also blocked from further selection for reordering in the command queue. 9. An automated data storage library for supporting operation of a data base in a data processing system as set forth in claim 8 and further comprising: means for periodically fetching previously unfetched commands from levels closest to the command queue output level for execution, thereby blocking further selection of those previously unfetched commands for reordering in the command queue. 