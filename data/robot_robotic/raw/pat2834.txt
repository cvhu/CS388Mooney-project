A process is provided for controlling a robotal device, such as a multiaxial industrial robot, by a control unit, with a control core for executing control processes for the robotal device. An interface function checks whether models and/or procedures optionally contained in the control core or additional models and/or transformation procedures and/or special algorithms of kinematic structures, which can be preset at the interface are used as model modules for motion-relevant variables of the robotal device. Special and third-party kinematics can thus also be operated with a control device suitable for executing the process without the control itself having to be modified.
Claims What is claimed is: 1. A method for controlling a robotic device, comprising the steps of: electronically storing a plurality of control algorithms in a first memory, that each contain control code that operates a robotic device by causing components of the robotic device, articulated with respect to each other at respective axes, to execute respective motions dependent on said control code; electronically storing a plurality of model modules in a second memory, separate from said first memory, that each contain an exclusively mathematical model of a kinematic structure of said robotic device that mathematically represents at least said motions and said axes, and that contains no control code, and that must be transformed in order to be used by the respective control algorithms in order to operate said robotic device; through an interface of a control unit of said robotic device, accessing at least one of said model modules from said second memory for current use in operating said robotic device as a pre-setting for said robotic device; in a computerized checking module, automatically checking compatibility of said presetting with said control algorithms by determining at least whether said pre-setting can be transformed for use by said control algorithms; and when said checking module indicates that said presetting is compatible, automatically operating said robotic device from said control unit to execute at least some of said control algorithms with said pre-setting. 2. A method as claimed in claim 1 comprising incorporating said computerized checking module in each of said model modules. 3. A method as claimed in claim 1 comprising incorporating said computerized checking module in said interface. 4. A method as claimed in claim 1 comprising, when said checking module indicates that said pre-setting is compatible, embedding said pre-setting in the control code of said at least some of said control algorithms. 5. A robotic device comprising: a first memory in which a plurality of control algorithms are stored, that each contain control code that operates a robotic device by causing components of the robotic device, articulated with respect to each other at respective axes, to execute respective motions dependent on said control code; a second memory in which a plurality of model modules are stored, said second memory being separate from said first memory, each of said model modules containing an exclusively mathematical model of a kinematic structure of said robotic device that mathematically represents at least said motions and said axes, and that contains no control code, and that must be transformed in order to be used by the respective control algorithms in order to operate said robotic device; a control unit; an interface of the control unit configured to access at least one of said model modules from said second memory, in response to a manual input, for current use in operating said robotic device as a pre-setting for said robotic device; computerized checking module configured to automatically check compatibility of said presetting with said control algorithms by determining at least whether said pre-setting can be transformed for use by said control algorithms; and said control unit being configured, when said checking module indicates that said presetting is compatible, to automatically operate said robotic device to execute at least some of said control algorithms with said pre-setting. 6. A robotic device as claimed in claim 1 wherein said computerized checking module is integrated in each of said model modules. 7. A robotic device as claimed in claim 1 wherein said computerized checking module is integrated in said interface. 8. A robotic device as claimed in claim 1 wherein said control unit, when said checking module indicates that said pre-setting is compatible, is configured to embed said pre-setting in the control code of said at least some of said control algorithms. 