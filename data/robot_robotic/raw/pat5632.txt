A system for motion control in which an application is developed that is independent from the actual motion control hardware used to implement the system. A software system employs an application programming interface comprising component functions and a service provider interface comprising driver functions. Code associated with the component functions relates these functions to the driver functions. Driver functions are separated into core and extended driver functions. All software drivers implement the core driver functions, and optionally implement the extended driver functions. Extended driver functionality may be obtained through a combination of core driver functions.
Claims What is claimed is: 1. A method of moving an object in a desired manner using a motion control device from a group of supported motion control devices, comprising the steps of: (i) selecting a software driver from a plurality of software drivers, each of the plurality of software drivers comprising driver code to control one or more motion control devices; (ii) generating a control command based on an application program and the driver code of the selected software driver; and (iii) operating the selected motion control device in accordance with the control command to move the object. 2. The method of claim 1, wherein the step of generating a control command is further based on a set of driver functions, each driver function defining one or more incremental motion steps that may be performed by the motion control device. 3. The method of claim 2, wherein the application program comprises a sequence of component functions, and at least some of the component functions are associated with driver functions. 4. The method of claim 3, wherein the set of driver functions comprises a subset of first driver functions and a subset of second driver functions, and wherein each first driver function identifies an incremental motion step that may be performed by a motion control device and each second driver function identifies a plurality of incremental motion steps that may be performed by a motion control device. 5. A system for moving an object, comprising; (i) a motion control device; (ii) a memory storage device containing: (a) a software driver selected from a plurality of software drivers, each of the plurality of software drivers comprising driver code to control one or more motion control devices; and (b) one or more control commands based on the driver code of the selected software driver; and (iii) a computer processor in communication with the motion control device and the memory storage device to operate the motion control device by sending the control commands to the motion control device. 6. The system of claim 5, wherein the control commands are based on a set of driver functions, each driver function defining one or more incremental motion steps that may be performed by the motion control device. 7. The system of claim 6, wherein the set of driver functions comprises a subset of first driver functions and a subset of second driver functions, and wherein each first driver function identifies an incremental motion step that may be performed by a motion control device and each second driver function identifies a plurality of incremental motion steps. 8. The system of claim 7, wherein the application program comprises a sequence of component functions, and wherein at least some of the component functions are associated with driver functions. 9. The system of claim 8, wherein the computer processor comprises a processor on a personal computer. 10. The system of claim 8, wherein the computer processor comprises a processor on a personal digital assistant. 11. The system of claim 8, wherein the computer processor is installed on the motion control device. 12. The system of claim 8, wherein the computer processor comprises a processor on a server accessible over a network. 13. A method for generating a sequence of control commands for controlling a motion control device to perform a series of motion steps, the method comprising the steps of: providing an application program comprising a series of component functions; selecting the motion control device from a group of supported motion control devices; selecting a software driver associated with the motion control device from a set of software drivers; and generating the sequence of control commands based on the component functions of the application program and the software driver. 14. The method of claim 13, wherein each software driver from the set of software drivers comprises driver code for implementing motion control operations associated with at least some driver functions, and the step of generating the sequence of control commands is further based on the driver code. 15. The method of claim 14, wherein (i) each motion control operation comprises either a primitive operation the implementation of which is required to control the object and cannot be simulated using any other motion control operations or a non-primitive operation that does not meet the definition of a primitive operation, and (ii) the driver functions comprise a core set of core driver functions in which each core driver function is associated with one of the primitive operations and an extended driver functions in which each extended driver function is associated with one of the non-primitive operations. 16. The method of claim 15, wherein the component functions are selected from a set of component functions, component code associates at least some of the component functions with at least some of the driver functions, and the step of generating the sequence of control commands is further based on the component code. 