Robot platforms, methods, and computer media are disclosed. The robot platform includes perceptors, locomotors, and a system controller, which executes instructions for a robot to follow a target in its environment. The method includes receiving a target bearing and sensing whether the robot is blocked front. If the robot is blocked in front, then the robot's motion is adjusted to avoid the nearest obstacle in front. If the robot is not blocked in front, then the method senses whether the robot is blocked toward the target bearing and if so, sets the rotational direction opposite from the target bearing, and adjusts the rotational velocity and translational velocity. If the robot is not blocked toward the target bearing, then the rotational velocity is adjusted proportional to an angle of the target bearing and the translational velocity is adjusted proportional to a distance to the nearest obstacle in front.
Claims What is claimed is: 1. A method for a robot to follow a target in its environment, comprising: receiving a target bearing from a target tracking behavior; and sensing whether the robot is blocked in a front direction and if so, then: adjusting the robot's motion to avoid a nearest obstacle in the front direction by adjusting at least one of a rotational direction, a rotational velocity, a translational direction, and a translational velocity; and if the robot is not blocked in front, then: sensing whether the robot is blocked toward the target bearing and if so, then: setting the rotational direction opposite from that of the target bearing; adjusting the rotational velocity to a first fractional amount of a maximum rotational velocity; and adjusting the translational velocity to a second fractional amount of a maximum translational velocity; and if the robot is not blocked toward the target bearing, then: adjusting the rotational velocity proportional to an angle of the target bearing; and adjusting the translational velocity proportional to a distance to the nearest obstacle in the front direction. 2. The method of claim 1, wherein adjusting the robot's motion to avoid a nearest obstacle comprises: sensing whether the robot is blocked on either lateral side of the robot and if so, then: setting the rotational velocity to substantially near zero; and adjusting the translational velocity to a reverse direction at a third fractional amount of the maximum translational velocity; and if the robot is not blocked on either lateral side, then: sensing whether the robot is blocked toward the target bearing and if not, then: setting the rotational direction toward that of the target bearing; adjusting the rotational velocity to a fourth fractional amount of the maximum rotational velocity; and adjusting the translational velocity to substantially near zero; and if the robot is blocked toward the target bearing, then: if the target bearing is in the front direction, adjusting the translational velocity to a fifth fractional amount of the maximum translational velocity; if the target bearing is not in the front direction, adjusting the translational direction backwards and the translational velocity to a sixth fractional amount of the maximum translational velocity; and adjusting the rotational velocity proportional to a seventh fractional amount of the maximum rotational velocity. 3. The method of claim 1, further comprising: asserting that the target is achieved if: the robot is obstructed on a left-front side and a right-front side; an angle of the target bearing lies in front of the robot; and a distance to the target in front is less than a distance to the target on a left side or on a right side. 4. The method of claim 1, wherein receiving a target bearing comprises receiving a bearing from a remote system wherein the remote system is selected from the group consisting of a remote robot controller performing a search algorithm, a remote robot controller responding to user input, and another robot in communication with the robot. 5. The method of claim 1, wherein receiving a target bearing comprises receiving sensory information from a perceptor selected from the group consisting of a fixed camera, an operator movable camera, a thermal sensor, an infrared sensor, a sonar sensor, a laser sensor, and combinations thereof. 6. The method of claim 1, further comprising repeating all the acts on each iteration through an event timing loop. 7. The method of claim 6, wherein the event timing loop includes a loop period that is adjusted based on a current work load of a system controller on the robot. 8. The method of claim 1, further comprising: repeating on each iteration through an event timing loop, the acts of: defining an event horizon comprising a distance from the robot that is proportional to a current velocity of the robot; detecting a range to obstacles around the robot; testing for an event horizon intrusion by determining if any range to the obstacles is within the event horizon; reducing the rotational velocity of the robot in proportion to a loop period of the event timing loop if the event horizon intrusion occurs; and reducing the translational velocity of the robot in proportion to the loop period of the event timing loop if the event horizon intrusion occurs. 9. A computer readable medium having computer instructions thereon, which when executed on a system controller provide a method for a robot to follow a target in its environment, the computer instructions comprising instructions for: receiving a target bearing from a target tracking behavior; and sensing whether the robot is blocked in a front direction and if so, then: adjusting the robot's motion to avoid a nearest obstacle in the front direction by adjusting at least one of a rotational direction, a rotational velocity, a translational direction, and a translational velocity to avoid a nearest obstacle in the front direction; and if the robot is not blocked in front, then: sensing whether the robot is blocked toward the target bearing and if so, then: setting the rotational direction opposite from that of the target bearing; adjusting the rotational velocity to a first fractional amount of a maximum rotational velocity; and adjusting the translational velocity to a second fractional amount of a maximum translational velocity; and if the robot is not blocked toward the target bearing, then: adjusting the rotational velocity proportional to an angle of the target bearing; and adjusting the translational velocity proportional to a distance to the nearest obstacle in the front direction. 10. The computer readable medium of claim 9, wherein adjusting the robot's motion to avoid a nearest obstacle comprises: sensing whether the robot is blocked on either lateral side of the robot and if so, then: setting the rotational velocity to substantially near zero; and adjusting the translational velocity to a reverse direction at a third fractional amount of the maximum translational velocity; and if the robot is not blocked on either lateral side, then: sensing whether the robot is blocked toward the target bearing and if not, then: setting the rotational direction toward that of the target bearing; adjusting the rotational velocity to a fourth fractional amount of the maximum rotational velocity; and adjusting the translational velocity to substantially near zero; and if the robot is blocked toward the target bearing, then: if the target bearing is in the front direction, adjusting the translational velocity to a fifth fractional amount of the maximum translational velocity; if the target bearing is not in the front direction, adjusting the translational direction backwards and the translational velocity to a sixth fractional amount of the maximum translational velocity; and adjusting the rotational velocity proportional to a seventh fractional amount of the maximum rotational velocity. 11. The computer readable medium of claim 9, further comprising instructions for: asserting that the target is achieved if: the robot is obstructed on a left-front side and a right-front side; an angle of the target bearing lies in front of the robot; and a distance to the target in front is less than a distance to the target on a left side or on a right side. 12. The computer readable medium of claim 9, wherein receiving a target bearing comprises receiving a bearing from a remote system wherein the remote system is selected from the group consisting of a remote robot controller performing a search algorithm, a remote robot controller responding to user input, and another robot in communication with the robot. 13. The computer readable medium of claim 9, wherein receiving a target bearing comprises receiving sensory information from a perceptor selected from the group consisting of a fixed camera, an operator movable camera, a thermal sensor, an infrared sensor, a sonar sensor, a laser sensor, and combinations thereof. 14. The computer readable medium of claim 9, further comprising instructions for repeating all the acts on each iteration through an event timing loop. 15. The computer readable medium of claim 14, wherein the event timing loop includes a loop period that is adjusted based on a current work load of a system controller on the robot. 16. The computer readable medium of claim 9, further comprising instructions for: repeating on each iteration through an event timing loop, the acts of: defining an event horizon comprising a distance from the robot that is proportional to a current velocity of the robot; detecting a range to obstacles around the robot; testing for an event horizon intrusion by determining if any range to the obstacles is within the event horizon; reducing the rotational velocity of the robot in proportion to a loop period of the event timing loop if the event horizon intrusion occurs; and reducing the translational velocity of the robot in proportion to the loop period of the event timing loop if the event horizon intrusion occurs. 17. A robot platform, comprising: at least one perceptor configured for perceiving environmental variables of interest; at least one locomotor configured for providing mobility to the robot platform; a system controller configured for executing computer instructions configured for following a target in the robot's environment, the computer instructions comprising instructions for: receiving a target bearing from a target tracking behavior; and sensing whether the robot is blocked in a front direction and if so, then: adjusting the robot's motion to avoid a nearest obstacle in the front direction by adjusting at least one of a rotational direction, a rotational velocity, a translational direction, and a translational velocity to avoid a nearest obstacle in the front direction; and if the robot is not blocked in front, then: sensing whether the robot is blocked toward the target bearing and if so, then: setting the rotational direction opposite from that of the target bearing; adjusting the rotational velocity to a first fractional amount of a maximum rotational velocity; and adjusting the translational velocity to a second fractional amount of a maximum translational velocity; and if the robot is not blocked toward the target bearing, then: adjusting the rotational velocity proportional to an angle of the target bearing; and adjusting the translational velocity proportional to a distance to the nearest obstacle in the front direction. 18. The robot platform of claim 17, wherein adjusting the robot's motion to avoid a nearest obstacle comprises instructions for: sensing whether the robot is blocked on either lateral side of the robot and if so, then: setting the rotational velocity to substantially near zero; and adjusting the translational velocity to a reverse direction at a third fractional amount of the maximum translational velocity; and if the robot is not blocked on either lateral side, then: sensing whether the robot is blocked toward the target bearing and if not, then: setting the rotational direction toward that of the target bearing; adjusting the rotational velocity to a fourth fractional amount of the maximum rotational velocity; and adjusting the translational velocity to substantially near zero; and if the robot is blocked toward the target bearing, then: if the target bearing is in the front direction, adjusting the translational velocity to a fifth fractional amount of the maximum translational velocity; if the target bearing is not in the front direction, adjusting the translational direction backwards and the translational velocity to a sixth fractional amount of the maximum translational velocity; and adjusting the rotational velocity proportional to a seventh fractional amount of the maximum rotational velocity. 19. The robot platform of claim 17, further comprising instructions for: asserting that the target is achieved if: the robot is obstructed on a left-front side and a right-front side; an angle of the target bearing lies in front of the robot; and a distance to the target in front is less than a distance to the target on a left side or on a right side. 20. The robot platform of claim 17, wherein receiving a target bearing comprises receiving a bearing from a remote system wherein the remote system is selected from the group consisting of a remote robot controller performing a search algorithm, a remote robot controller responding to user input, and another robot in communication with the robot. 21. The robot platform of claim 17, wherein receiving a target bearing comprises receiving sensory information from a perceptor selected from the group consisting of a fixed camera, an operator movable camera, a thermal sensor, an infrared sensor, a sonar sensor, a laser sensor, and combinations thereof. 22. The robot platform of claim 17, further comprising instructions for repeating all the acts on each iteration through an event timing loop. 23. The robot platform of claim 22, wherein the event timing loop includes a loop period that is adjusted based on a current work load of the system controller. 24. The robot platform of claim 17, further comprising instructions for: repeating on each iteration through an event timing loop, the acts of: defining an event horizon comprising a distance from the robot that is proportional to a current velocity of the robot; detecting a range to obstacles around the robot; testing for an event horizon intrusion by determining if any range to the obstacles is within the event horizon; reducing the rotational velocity of the robot in proportion to a loop period of the event timing loop if the event horizon intrusion occurs; and reducing the translational velocity of the robot in proportion to the loop period of the event timing loop if the event horizon intrusion occurs. 