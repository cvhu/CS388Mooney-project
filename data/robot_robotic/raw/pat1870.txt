Systems, methods and apparatus are provided through which in some embodiments, an agent-oriented specification modeled with MaCMAS, is analyzed, flaws in the agent-oriented specification modeled with MaCMAS are corrected, and an implementation is derived from the corrected agent-oriented specification. Described herein are systems, method and apparatus that produce fully (mathematically) tractable development of agent-oriented specification(s) modeled with methodology fragment for analyzing complex multiagent systems (MaCMAS) and policies for autonomic systems from requirements through to code generation. The systems, method and apparatus described herein are illustrated through an example showing how user formulated policies can be translated into a formal mode which can then be converted to code. The requirements-based programming systems, method and apparatus described herein may provide faster, higher quality development and maintenance of autonomic systems based on user formulation of policies.
Claims We claim: 1. A tangible computer-accessible medium having executable instructions to generate a system, the executable instructions capable of directing a processor to perform: receiving at least one agent-oriented specification modeled with MaCMAS; and translating the at least one agent-oriented specification modeled with MaCMAS of the system to an implementation. 2. The computer-accessible medium of claim 1, wherein the executable instructions capable of directing the processor to perform translating the at least one agent-oriented specification modeled with MaCMAS of the system to the implementation further comprises: translating the at least one agent-oriented specification modeled with MaCMAS of the system to the implementation, without the use of an automated inference engine. 3. The computer-accessible medium of claim 1, wherein the executable instructions capable of directing the processor to perform translating the at least one agent-oriented specification modeled with MaCMAS of the system to the implementation further comprises: translating the at least one agent-oriented specification modeled with MaCMAS of the system to the implementation, in reference to an inference engine. 4. The computer-accessible medium of claim 1, the medium further comprising executable instructions capable of directing the processor to perform: analyzing the agent-oriented specification modeled with MaCMAS. 5. The computer-accessible medium of claim 4, wherein the executable instructions capable of directing the processor to perform analyzing the agent-oriented specification modeled with MaCMAS further comprises: applying mathematical logic to the agent-oriented specification modeled with MaCMAS in order to identify a presence or absence of mathematical properties of the agent-oriented specification modeled with MaCMAS. 6. The computer-accessible medium of claim 5, the medium further comprising executable instructions capable of directing the processor to perform: correcting the absence of the mathematical properties in the agent-oriented specification modeled with MaCMAS if the mathematical properties are identified as absent in the agent-oriented specification modeled with MaCMAS. 7. The computer-accessible medium of claim 5, wherein the mathematical properties of the agent-oriented specification modeled with MaCMAS further comprise: whether the agent-oriented specification modeled with MaCMAS implies a system execution trace that includes a deadlock condition; whether the agent-oriented specification modeled with MaCMAS implies a system execution trace that includes a livelock condition; and whether the agent-oriented specification modeled with MaCMAS implies a system execution trace that exhibits or does not exhibit a plurality of other behaviors. 8. The computer-accessible medium of claim 1, wherein the implementation further comprises: a script encoded in PERL language. 9. The computer-accessible medium of claim 1, wherein the implementation further comprises: a script encoded in BIOPERL language. 10. The computer-accessible medium of claim 1, wherein the implementation further comprises: a script encoded in PYTHON language. 11. The computer-accessible medium of claim 1, wherein the implementation further comprises: a script encoded in awk language. 12. A tangible computer-accessible medium having executable instructions to generate a system from at least one agent-oriented specification modeled with MaCMAS, the executable instructions capable of directing a processor to perform: translating the at least one agent-oriented specification modeled with MaCMAS to a formal specification; and translating the formal specification to scripts implementing the system. 13. The computer-accessible medium of claim 12, wherein the executable instructions capable of directing the processor to perform translating the at least one agent-oriented specification modeled with MaCMAS to the formal specification further comprise: verifying the syntax of the at least one agent-oriented specification modeled with MaCMAS; and mapping the at least one agent-oriented specification modeled with MaCMAS to a plurality of agent-oriented specification segments modeled with MaCMAS. 14. The computer-accessible medium of claim 12, wherein the executable instructions capable of directing the processor to perform translating at least one agent-oriented specification modeled with MaCMAS to the formal specification further comprise: verifying consistency of the formal specification. 15. The computer-accessible medium of claim 12, the medium further comprising executable instructions capable of directing the processor to perform: analyzing the agent-oriented specification modeled with MaCMAS. 16. The computer-accessible medium of claim 12, the medium further comprising executable instructions capable of directing the processor to perform: determining mathematical and logical properties of the agent-oriented specification modeled with MaCMAS by an automated inference engine. 17. The computer-accessible medium of claim 12, wherein the executable instructions capable of directing the processor to perform translating each of a plurality of at least one agent-oriented specification modeled with MaCMAS further comprises: translating the at least one agent-oriented specification modeled with MaCMAS to a separate formal specification without the use of an automated inference engine. 18. The computer-accessible medium of claim 12, wherein the script further comprises: a script encoded in PERL language. 19. The computer-accessible medium of claim 12, wherein the script further comprises: a script encoded in awk language. 20. The computer-accessible medium of claim 12, wherein the script further comprises: a script encoded in PYTHON language. 21. A system including a processor and a memory storing software to validate a software system, the system comprising: an inference engine; a translator, operable to receive at least one agent-oriented specification modeled with MaCMAS of the software system and to generate in reference to the inference engine an implementation; and an analyzer operable to perform model verification/checking and determine existence of omissions, deadlock, livelock, and race conditions or other problems and inconsistencies in the agent-oriented specification modeled with MaCMAS. 22. The system of claim 21, wherein the translation of the at least one agent-oriented specification modeled with MaCMAS into an implementation is carried out without human intervention. 23. A computer-accessible medium having executable instructions to validate a system, the executable instructions capable of directing a processor to perform: translating a plurality of policies to a plurality of agent-oriented specifications modeled with MaCMAS; combining the plurality of agent-oriented specifications modeled with MaCMAS to a singular agent-oriented specification modeled with MaCMAS; analyzing the singular agent-oriented specification modeled with MaCMAS; correcting absence of the mathematical properties in the singular agent-oriented specification modeled with MaCMAS; and translating the corrected agent-oriented specification modeled with MaCMAS to a policy. 24. The computer-accessible medium of claim 23, wherein the executable instructions capable of directing the processor to perform analyzing the singular agent-oriented specification modeled with MaCMAS further comprise: applying mathematical logic to the singular agent-oriented specification modeled with MaCMAS in order to identify a presence or absence of mathematical properties of the singular agent-oriented specification modeled with MaCMAS. 25. The computer-accessible medium of claim 24, wherein the mathematical properties of the singular agent-oriented specification modeled with MaCMAS further comprise: whether the singular agent-oriented specification modeled with MaCMAS implies a system execution trace that includes a deadlock condition; whether the singular agent-oriented specification modeled with MaCMAS implies a system execution trace that includes a livelock condition; and whether the singular agent-oriented specification modeled with MaCMAS implies a system execution trace that exhibits or does not exhibit a plurality of other behaviors. 26. A method of generating an executable system from an informal specification, the method comprising: translating an informal specification into process-based specification segments; aggregating the process-based specification segments into a single process-based specification; translating the single process-based specification into high level computer language instructions; and compiling the high level language instructions into an executable system. 27. The method of claim 26, wherein translating informal specifications into process-based specification segments further comprises: verifying the syntax of a set of scenarios; mapping the set of scenarios to a process-based specification; verifying the consistency of the process-based specification; and verifying a lack of other problems in the process-based specification. 