A development tool combines advantages of a simulation tool with an object-oriented modeling tool, including a real-time mathematical matrix library and an object model. The tool is applicable to any intelligent control system. A composite object group (COG) contains both sampled-data and event-driven capabilities. COGs merge procedural and object-oriented programming, and provide explicit, graphical integration of both types of processing and are fully hierarchical. A control system is built up of object-oriented components, including these types: atomic, interface, data flow and state transition. A finite state machine (FSM) component is built from states, transitions, events and state transition components. Data flow components provide sampled-data capabilities. FSMs provide event-drive capabilities. Each component may include methods and attributes. A COG includes any type of component including COGs, graphical interconnections between components, and is used to graphically build a model of a control system.
Claims We claim: 1. A reusable interface component data structure executed on a computer and stored on a computer readable medium for use in a control system having a plurality of components, said reusable interface component data structure comprising: an interface component name, said name indicating an association with one of said components of said control system; a group of first method names indicating methods defined upon said component that said component provides; a group of second method names indicating methods defined within said control system that said component uses; a group of output pin names indicating attributes defined upon said component for which said component provides values; a group of input pin names indicating attributes defined within said control system whose values said component uses; whereby said interface component is designed as an interface to said component of said control system and reuse with other of said components wherein each input pin provides a value needed by said component in order for the component to execute. 2. A reusable interface component data structure as recited in claim 1 wherein said control system is an electromechanical control system. 3. A reusable interface component data structure as recited in claim 1 wherein said control system is a real-time control system. 4. A reusable interface component data structure as recited in claim 1 further comprising: a graphical representation, whereby said interface component appears as an icon to a user on a computer screen. 5. A reusable interface component data structure as recited in claim 1 wherein said interface component is a computer object and is implemented using object-oriented technology. 6. A reusable interface component data structure, as recited in claim 1, wherein the interface component data structure provides an interface to another component. 7. A reusable interface component data structure, as recited in claim 1, wherein a computer uses the interface component data structure to provide an interface to another component. 8. A reusable interface component data structure, as recited in claim 7, wherein a computer uses the interface component data structure for scheduling execution of components. 