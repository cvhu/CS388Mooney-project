A system for and method of constructing an executable reusable procedure which includes determining an executable procedure from at least one scored trace of a procedure execution.
Claims What is claimed is: 1. A computerized method of constructing an executable reusable procedure, said method comprising: loading at least one scored trace of a procedure into a memory, said scored trace comprising a recorded sequence of state-action pairs during an execution of said procedure, a scoring of said scored trace comprising an indication of how much a procedural action changes a state of the system as progressing towards a goal of said procedure; and determining, using a processor, an executable procedure from one or more of said at least one scored trace of said procedure execution. 2. The method according to claim 1, wherein said executable procedure selectively favors actions with a higher score. 3. The method according to claim 1, further comprising: obtaining said at least one scored trace of said procedure execution, wherein said obtaining said at least one scored trace comprises: automatically observing at least one of a procedure execution and at least one instance of a procedure execution, wherein said automatically observing is performed prior to automatically aligning said observed executions of procedures, and wherein said automatically aligning said observed executions of procedures is performed prior to automatically producing executable procedure. 4. The method according to claim 3, wherein said automatically observing said at least one procedure execution comprises: automatically observing at least one expert executing instances of said procedure execution; and providing each expert of said at least one expert with means for annotating individual steps of said instance of said procedure execution. 5. The method according to claim 1, further comprising: obtaining said at least one scored trace of said procedure execution, wherein said obtaining comprises: recording at least one trace; and scoring said at least one trace based on a scoring function to determine said at least one scored trace. 6. The method according to claim 1, further comprising: creating a library of a plurality of reusable procedures. 7. The method according to claim 1, wherein said determining comprises: inducing a model from said at least one scored trace. 8. The method according to claim 7, wherein said model comprises: a stochastic finite-state Mealy machine model. 9. The method according to claim 7, wherein said inducing said model comprises an initialization phase comprising: computing an initial alignment and an initial generalization of said at least one trace; computing a transition model based on said initial alignment; and computing an action model for said initial alignment. 10. The method of claim 7, wherein said inducing said model comprises: inducing a best alignment for a given generalization and a best generalization for a given alignment. 11. The method of claim 10, wherein said inducing a best generalization for a given alignment comprises: computing a transition model based on said given alignment; computing an action model for said given alignment; and evaluating a capability of said best alignment and said best generalization to produce at least one action with a predetermined high score. 12. The method according to claim 10, wherein at least one of said transition model selectively favors transitions with a higher score and said action model selectively favors actions with a higher score. 13. The method according to claim 10, wherein said computing the action model comprises: for each state, partitioning aligned input-output pairs by output into groups; for each group, constructing a regression model of a score on inputs using scored input-output pairs. 14. The method according to claim 1, further comprising: initializing said executable procedure; predicting a next action based on said executable procedure; executing said predicted next action; evaluating an effect of said next action by observing a new input after said next action is executed; and determining whether to terminate said executable procedure based on said evaluation. 15. The method according to claim 1, further comprising: initializing said executable procedure; predicting a next action based on said executable procedure; estimating a score for said next action; if said score is higher than a predetermined threshold, executing said next action; if said score is not higher than said predetermined threshold, soliciting a user to select a user selected action and executing said user selected action; evaluating an effect of said one of said next action and said user selected action by observing a new input after said one of said next action and said user selected action is executed; and determining whether to terminate said executable procedure based on said evaluation, wherein said soliciting said user to select said user selected action comprises: providing said user with information on at least one of a current state of a system, actions previously performed, and predicted actions; and asking said user to select said user selected action. 16. The method according to claim 1, further comprising: monitoring a status of a system executing said executable procedure; selecting an action and executing said selected action; observing at least one effect of said executed action on the system; scoring said action based on a user-specified scoring function; modifying said procedure model based on at least one scored action; determining whether to modify said procedure model based on a recent scored action; and inducing a new procedure model using at least a portion of available scored traces. 17. A method for deploying computing infrastructure in which computer-readable code is integrated into a computing system, and combines with said computing system to perform the method according to claim 1. 18. A computer-readable storage medium tangibly embodying a program of machine-readable instructions executable by a digital processing apparatus to perform the method of causing the construction of an executable reusable procedure, according to claim 1. 19. A computerized system for constructing an executable reusable procedure, comprising: a memory for loading a scored trace of a procedure, said scored trace comprising a recorded sequence of state-action pairs during an execution of said procedure, a scoring of said scored trace comprising an indication of how much a procedural action changes a state of the system as progressing towards a goal of said procedure; a processor-executed determining unit that selectively determines an executable procedure from said at least one scored trace of said procedure execution; a processor-executed obtaining unit that selectively obtains said at least one scored trace of said procedure execution; a processor-executed observing unit that selectively automatically observes at least one of a procedure execution and at least one expert executing said procedure; a processor-executed aligning unit that selectively automatically aligns said observed executions of procedures; and means for annotating individual steps of at least one instance of said executable procedure. 20. A system for constructing an executable reusable procedure, comprising: a memory to store at least one scored trace of a procedure execution, said scored trace comprising a recorded sequence of state-action pairs during an execution of said procedure, a scoring of said scored trace comprising an indication of how much a procedural action changes a state of the system as progressing towards a goal of said procedure; and means for determining an executable procedure from said at least one scored trace of said procedure execution, as executed by a processor. 