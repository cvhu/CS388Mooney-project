The subject invention relates to systems and methods that facilitate motion between different coordinate systems in an industrial control environment. The systems and methods accept data in one coordinate system and transform the data to a different coordinate system. Suitable transformations include instructions that transform between Cartesian, pre-defined non-Cartesian, and user-defined non-Cartesian coordinate systems, including transformations between a non-Cartesian coordinate system to another non-Cartesian coordinate system. Such transformations can be programmed in essentially any industrial control language and can be seamlessly integrated with the control environment. The systems and methods can be utilized to generate a motion instruction that includes, among other information, source and target coordinate systems and the transformation between them. The subject invention provides for connecting various systems together through respective motion instructions, wherein a motion of a source system is mapped to a coordinate system of a target system and the target system is moved accordingly.
Claims What is claimed is: 1. A system that facilitates motion control in an industrial control environment, comprising: a receiving component that receives a position represented in a first coordinate system and associated with a move of a source system, the first coordinate system is one of a Cartesian coordinate system or a non-Cartesian coordinate system; and a component that transforms the position in the first coordinate system to a position in a second coordinate system associated with a target system, with a user-defined transform that is written in an industrial control language, the transformed position is utilized to move the target system according to the move specified of the source system, the second coordinate system is different from the first coordinate system. 2. The system of claim 1, the move of the source system is a commanded move through control software or a manual move by a user. 3. The system of claim 1, the source system and/or the target system is a machine. 4. The system of claim 3, the machine is a robot. 5. The system of claim 1, the first and/or the second coordinate systems are a Cartesian coordinate system, a pre-defined non-Cartesian coordinate system; and/or a user-defined non-Cartesian coordinate system. 6. The system of claim 1, the user defines, programs, and integrates the user-defined transform into the control system. 7. The system of claim 1, the coordinate system is one of an Articulated Cylindrical coordinate system; a two-axis Articulated Independent coordinate system; a two-axis Articulated Dependent coordinate system; a Polar/Cylindrical coordinate system; a three-axis Articulated Independent coordinate system; a three axis Articulated Dependent coordinate system; a SCARA Independent coordinate system; a SCARA Dependent coordinate system; a Spherical coordinate system; a four-axis SCARA Independent coordinate system; a four-axis SCARA Dependent coordinate system; a four-axis Articulated Independent coordinate system; or a four-axis Articulated Dependent coordinate system. 8. The system of claim 1, at least one of the first or second coordinate systems is defined in a joint space. 9. The system of claim 1, further comprising one or more additional coordinate systems chained together, wherein the move of the source system initiates a move in the one or more additional coordinate systems through same and/or different transformations. 10. The system of claim 1 is bi-directional, wherein a movement of the source system is transformed to a movement for the target system and a movement of the target system is transformed to a movement for the source system. 11. The system of claim 1, the source system and/or the target system is industrial control software. 12. The system of claim 1, the transformation is a user-defined transformation synchronized with the industrial control environment. 13. The system of claim 1, the position transformation is from one of a programming space to a positioning space; a programming space to a joint space; or a positioning space to a joint space. 14. The system of claim 1, the axes of the coordinate systems are real or virtual axes. 15. The system of claim 1, the source system, the target system, and the transformation are defined in a motion control instruction. 16. The system of claim 15, the motion control instruction is one of a Motion Coordinated Transform (MCT) instruction or a Motion Calculate Transform Position (MCTP) instruction. 17. The system of claim 1, the industrial control language is one of structured text (ST), sequential function chart (SFC), functional block diagram (FBD), instruction list (IL), or ladder diagram (LD). 18. The system of claim 1, the user-defined transform is programmed in one of C, C++, C#, Basic, assembly, or Pascal, wherein the program language is invoked through one of a routine or an add-on instruction. 19. The system of claim 1, the number of axes in the first coordinate system is the same or different from the number of axes in the second coordinate system. 20. The system of claim 1, further comprising a summation component that adds axis information from a single axis object, a coordinate axis object, and/or a motion instruction object for an axis node. 21. A method that facilitates motion control in an industrial control environment, comprising: establishing a relationship between a source system and a target system through an instruction; utilizing the instruction to obtain a transform for converting source system motion in the source system that is a Cartesian coordinate system to target system motion in the target system that is a non-Cartesian, Joint space coordinate system; generating the transform in an industrial control language; transforming a position of the source system to a position of the target system in the target coordinate system; and moving the target system to the position in the target coordinate system. 22. The method of claim 21, the industrial control language is one of structured text, sequential function chart, functional block diagram, instruction list, or ladder diagram. 23. The method of claim 21, the source system has a different number of axes than the target system. 24. The method of claim 21, further comprising transforming motion of the target system to a source position in the source coordinate system and moving the source system based on the transformed position. 25. A method that creates motion instruction that facilitate motion control in an industrial control environment, comprising: defining a source system as one of a Cartesian coordinate system or a non-Cartesian coordinate system; defining a target system as a different coordinate system than the coordinate system associated with the source system; utilizing the defined source system and target system to determine a transformation between a coordinate system of the source system and a coordinate system of the target system; generating a transform, based on the transformation, in an industrial control language that is one of structured text, sequential function chart, functional block diagram, instruction list, or ladder diagram; generating a motion instruction that at least includes the source and target systems and the transformation, the motion instruction is utilized to map a movement of the source system to the coordinate system of the target system in order to move the target system according to the movement of the source system. 26. The method of claim 25, the motion instruction is one of a Motion Coordinated Transform (MCT) instruction or a Motion Calculate Transform Position (MCTP) instruction. 27. The method of claim 25, further comprising utilizing the motion instruction to map a movement of the target system to the coordinate system of the source system in order to move the source system according to the movement of the target system. 28. The method of claim 25, the transform is a forward transform that converts non-Cartesian coordinates to Cartesian coordinates. 29. The method of claim 25, the transform is an inverse transform that converts Cartesian coordinates to non-Cartesian coordinates. 30. The method of claim 25, the non-Cartesian coordinate system is one of a pre-defined coordinate system or a user-defined coordinate system programmed in an industrial control language. 31. The method of claim 25, further comprising transforming a number of axes of the source system based on the number of axes required by the transform. 32. The method of claim 25, further comprising creating a sequence list that specifies the order in which axis nodes are executed. 33. The method of claim 32, further comprising recording the sequence list when a connection with the instruction is instantiated. 34. The method of claim 32, further comprising maintaining the order of the sequence list when the direction of the motion changes from source-to-target to target-to-source or from target-to-source to source-to-target. 35. A system that facilitates motion control in an industrial control environment, comprising: means for a establishing a relationship between a source coordinate system having a number of axes and a target coordinate system having a different number of axes than the source coordinate system; and means for utilizing the relationship to convert a position in the target coordinate system based on a movement in position of the source coordinate system. 