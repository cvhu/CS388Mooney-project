A linkage mechanism, such as an industrial robot, comprises an electronic motion controller and a set of self-driven joints. A controller receives a series of end effector positions from memory or from a host control system which define a routine for the mechanism to execute in relation to a predetermined reference frame such as cartesian coordinates. Angular values for the joints are computed in real time which follow the predetermined reference frame values in a manner which avoids the problems of singularities and which efficiently accommodates kinematic redundancy. A corresponding drive signal is generated for each joint.
Claims What is claimed is: 1. An apparatus for moving an end effector in response to input signals which define a series of discrete positions along a path of a point associated with said end effector, said apparatus comprising: a. a manipulator upon which the end effector is mounted, the manipulator having a plurality of joints, at least one of said joints including an actuator; and b. a manipulator controller, including a means for providing drive signals to said actuators, the controller comprising: (1) means for generating data sets which identify cartesian coordinate values of points along said end effector path; (2) means for computing a set of joint angles corresponding to said cartesian coordinate points based on the constrained minimization of a convex objective function referenced to a fixed origin; (3) means responsive to said joint angles for producing a drive signal for each of said joint actuators; and (4) means for iterating the functions provided by means 1 through 4 to cause said end effector point to move through a series of increments along a path. 2. The apparatus according to claim 1 wherein said joint angle computing means is based on the constrained minimization of a positive semi-definite quadratic form as the objective function referenced to a fixed origin. 3. The apparatus according to claim 1 wherein said joint angle computing means is based on the constrained minimization of a positive semi-definite quadratic form with a diagonal coefficient matrix as the objective function referenced to a fixed origin. 4. An apparatus according to claim 1 wherein said joint angle computation means comprises: means for formulating a Jacobian operator of manipulator coordinate transformation equations; and means for performing said joint angle computation without explicity solving for the null space of the Jacobian. 5. An apparatus according to claim 1 wherein said joint angle computation means includes means for performing an affine transformation whereby the problem is made directly solvable by the Moore-Penrose inverse definition. 6. An apparatus according to claim 1 wherein said joint angle computation means includes means for performing an affine transformation whereby a problem is produced which, for a given size Jacobian matrix, is solvable by a constant number of algebraic operations, independent of the elements within the matrix. 7. An apparatus according to claim 1 wherein said joint angle computation means comprises: means for computing a unique set of joint angle values which minimize: ##EQU14## where: n is the number of joints; k.sub.i is a predetermined control value for the i.sup.th joint; .theta..sub.i is the known current position of the i.sup.th joint; .DELTA..theta..sub.i is the unknown change in angle for the i.sup.th joint from its current position; .theta..sub.io is a predetermined origin for the i.sup.th joint; {.DELTA..theta.} is the vector of the unknown change in angle for each joint from its current position; {.DELTA.X} is the vector of the change in cartesian coordinates of the tool position between the current position and the next position; [J.degree.] is the Jacobian matrix evaluated at the current position where the Jacobian is an M by n matrix where M is the number of system constraints and n is the number of actuated joints, defined by the following expression; ##EQU15## where f is the vector of functions mapping joint variables into cartsian coordinates. 8. An apparatus according to claim 1 wherein said joint angle computation means comprises: a. means for formulating a Jacobian operator of manipulator coordinate transformation equations; b. means for transforming the problem statement of: ##EQU16## into the statement of: d. means for computing the change in joint angles from the previously known position such that: where: n is the number of joints; k.sub.i is a predetermined control value for the i.sup.th joint; .theta..sub.i is the known current position of the i.sup.th joint; .DELTA..theta..sub.i is the unknown change in angle for the i.sup.th joint from its current position; .theta..sub.io is a predetermined origin for the i.sup.th joint; {.theta.} is the vector of the known current position of the joints; {.theta..sub.o } is the vector of predetermined origins for each joint; {.DELTA..theta.} is the vector of the unknown change in angle for each joint from its current position; {.DELTA.X} is the vector of the change in cartesian coordinates of the tool position between the current position and the next position; [J.degree.] is the Jacobian matrix evaluated at the current position where the Jacobian is an M by n matrix where M is the number of system constraints and n is the number of actuated joints, defined by the following expression: ##EQU18## where f is the vector of functions mapping joint variables into cartesian coordinates. 9. An apparatus according to claim 1 wherein said joint angle computation means comprises: a. means for formulating a Jacobian operator of manipulator coordinate transformation equations; b. means for transforming the problem statement of: ##EQU19## into the statement of: such that [E] produces the following relationship: [I]=[F][F].sup.t ; d. means for calculating the solution of the minimization function as: {D}=[F].sup.t {G}; and e. means for computing the change in joint angles from the previously known position such that: where: n is the number of joints; k.sub.i is a predetermined control value for the i.sup.th joint; .theta..sub.i is the known current position of the i.sup.th joint; .DELTA..theta..sub.i is the unknown change in angle for the i.sup.th joint from its current position; .theta..sub.io is a predetermined origin for the i.sup.th joint; {.theta.} is the vector of the known current position of the joints; {.theta..sub.o } is the vector of predetermined origins for each joint; {.DELTA..theta.} is the vector of the unknown change in angle for each joint from its current position; {.DELTA.X} is the vector of the change in cartesian coordinates of the tool position between the current position and the next position; [J.degree.] is the Jacobian matrix evaluated at the current position where the Jacobian is an M by n matrix where M is the number of system constraints and n is the number of actuated joints, defined by the following expression: ##EQU21## where f is the vector of functions mapping joint variables into cartesian coordinates. 10. An apparatus according to claim 1 wherein said joint angle computation means comprises: a. means for formulating a Jacobian operator of manipulator coordinate transformation equations; b. means for transforming the problem statement of: ##EQU22## into the statement of: such that [E] produces the following relationship: [I]=[F][F].sup.t by the steps of: (1) subtracting from each of the rows of [A] and {B} multiples of their respective first row such that the first row of [A] becomes orthogonal to the remaining rows of [A] and (2) repeating step (1) for each successive row of [A]; d. means for calculating the solution of the minimization function as: {D}=[F].sup.t {G}; and e. means for computing the change in joint angles from the previously known position such that: where: n is the number of joints; k.sub.i is a predetermined control value for the i.sup.th joint; .theta..sub.i is the known current position of the i.sup.th joint; .DELTA..theta..sub.i is the unknown change in angle for the i.sup.th joint from its current position; .theta..sub.io is a predetermined origin for the i.sup.th joint; {.DELTA..theta.} is the vector of the known current position of the joints; {.theta..sub.o } is the vector of predetermined origins for each joint; {.DELTA..theta.} is the vector of the unknown change in angle for each joint from its current position; {.DELTA.X} is the vector of the change in cartesian coordinates of the tool position between the current position and the next position; [J.degree.] is the Jacobian matrix evaluated at the current position where the Jacobian is an M by n matrix where M is the number of system constraints and n is the number of activated joints, defined by the following expression: ##EQU24## where f is the vector of functions mapping joint variables into cartesian coordinates. 11. The apparatus according to claim 10 further comprising: a. means for determining if the vector magnitude of one of the rows of [A] falls below a predetermined threshold during the execution of said steps c.(1) and c.(2); and b. means responsive to such determination for eliminating the below-threshold matrix row from use in said joint angle computation. 12. The apparatus according to claim 10 further comprising: a. means for determining if one of the rows of [A] is a linear combination of the previous rows of [A]; and b. means responsive to such determination for eliminating said linearly dependent matrix row from use in said joint angle computation. 13. An apparatus for moving an end effector in response to input signals which define a series of discrete positions along a path of a joint associated with said end effector, said apparatus comprising: a. a manipulator upon which the end effector is mounted, the manipulator having a plurality of self-contained, modular joints linked in a series, each non-static, joint including an actuator and a means responsive to the position of the joint for producing a signal; and b. a manipulator controller, including a means for providing appropriately compensated servo drive signals to said actuators, said controller comprising: (1) means for generating data sets which identify cartesian coordinate values of points along said end effector path; (2) means for computing a set of joint angles corresponding to said cartesian coordinate points based on the constrained minimization of a non-linearlized convex objective function referenced to a fixed origin; (3) means responsive to said position signals and to said joint angle values for producing a drive signal for each of said joint actuators; and (4) means for iterating the functions provided by means 1 through 4 to cause said end effector point to move through a series of increments along a path. 14. An apparatus according to claim 13 wherein said joint angle computation means comprises: means for formulating a Jacobian operator of manipulator coordinate transformation equations; and means for performing said joint angle computation without explicitly solving for the null space of the Jacobian. 15. An apparatus according to claim 13 wherein said joint angle computation means includes means for performing an affine transformation whereby the problem is made directly solvable by the Moore-Penrose inverse definition. 16. An apparatus according to claim 13 wherein said joint angle computation means includes means for performing an affine transformation whereby a problem is produced which, for a given size Jacobian matrix, is solvable by a constant number of algebraic operations independent of the elements within the matrix. 17. An apparatus according to claim 13 wherein said joint angle computation means comprises: means for formulating a Jacobian operator of manipulator coordinate transformation equations; and means for computing a unique set of joint angle values which minimize: ##EQU25## where: n is the number of joints; k.sub.i is a predetermined control value for the i.sup.th joint; .theta..sub.i is the known current position of the i.sup.th joint; .DELTA..theta..sub.i is the unknown change in angle for the i.sup.th joint from its current position; .theta..sub.io is a predetermined origin for the i.sup.th joint; {.DELTA..theta.} is the vector of the unknown change in angle for each joint from its current position; {.DELTA.X} is the vector of the change in cartesian coordinates of the tool position between the current position and the next position; [J.degree.] is the Jacobian matrix evaluated at the current position where the Jacobian is an M by n matrix where M is the number of system constraints and n is the number of actuated joints, defined by the following expression: ##EQU26## where f is the vector of functions mapping joint variables into cartesian coordinates. 18. An apparatus according to claim 13 wherein said joint angle computation means comprises: a. means for formulating a Jacobian operator of manipulator coordinate transformation equations; b. means for transforming the problem statement of: ##EQU27## into the statement of: d. means for computing the change in joint angles from the previously known position such that: where: n is the number of joints; k.sub.i is the predetermined control value for the i.sup.th joint; .theta..sub.i is the known current position of the i.sup.th joint; .DELTA..theta..sub.i is the unknown change in angle for the i.sup.th joint from its current position; .theta..sub.io is a predetermined origin for the i.sup.th joint; {.theta.} is the vector of the known current position of the joints; {.theta..sub.o } is the vector of predetermined origins for each joint; {.DELTA..theta.} is the vector of the unknown change in angle for each joint from its current position; {.DELTA.X} is the vector of the change in cartesian coordinates of the tool position between the current position and the next position; [J.degree.] is the Jacobian matrix evaluated at the current position where the Jacobian is an M by n matrix where M is the number of system constraints and n is the number of actuated joints, defined by the following expression: ##EQU29## where f is the vector of functions mapping joint variables into cartesian coordinates. 19. An apparatus according to claim 13 wherein said joint angle computation means comprises: a. means for formulating a Jacobian operator of manipulator coordinate transformation equations; b. means for transforming the problem statement of: ##EQU30## into the statement of: such that [E] produces the following relationship: [I]=[F][F].sup.t ; d. means for calculating the solution of the minimization function as: {D}=[F].sup.t {G}; and e. means for computing the change in joint angles from the previously known position such that: where: n is the number of joints; k.sub.i is a predetermined control value for the i.sup.th joint; .theta..sub.i is the known current position of the ith joint; .DELTA..theta..sub.i is the unknown change in angle for the ith joint from its current position; .theta..sub.io is a predetermined origin for the i.sup.th joint; {.theta.} is the vector of the known current position of the joints; {.theta..sub.o } is the vector of predetermined origins for each joint; {.DELTA..theta.} is the vector of the unknown change in angle for each joint from its current position; {.DELTA.X} is the vector of the change in cartesian coordinates of the tool position between the current position and the next position; [J.degree.] is the Jacobian matrix evaluated at the current position where the Jacobian is an M by n matrix where M is the number of system constraints and n is the number of actuated joints, defined by the following expression: ##EQU32## where f is the vector of functions mapping joint variables into cartesian coordinates. 20. An apparatus according to claim 13 wherein said joint angle computation means comprises: a. means for formulating a Jacobian operator of manipulator coordinate transformation equations; b. means for transforming the problem statement of: ##EQU33## into the statement of: such that [E] produces the following relationship: [I]=[F][F].sup.t by the steps of: (1) subtracting from each of the rows of [A] and {B} multiples of their respective first row such that the first row of [A] becomes orthogonal to the remaining rows of [A] and (2) repeating step (1) for each successive row of [A]; d. means for calculating the solution of the minimization function as: {D}=[F].sup.t {G}; and e. means for computing the change in joint angles from the previously known position such that: where: n is the number of joints; k.sub.i is a predetermined control value for the i.sup.th joint; .theta..sub.i is the known current position of the ith joint; .DELTA..theta..sub.i is the unknown change in angle for the ith joint from its current position; .theta..sub.io is a predetermined origin for the i.sup.th joint; {.theta.} is the vector of the known current position of the joints; {.theta..sub.o } is the vector of predetermined origins for each joint; {.DELTA..theta.} is the vector of the unknown change in angle for each joint from its current position; {.DELTA.X} is the vector of the change in cartesian coordinates of the tool position between the current position and the next position; [J.degree.] is the Jacobian matrix evaluated at the current position where the Jacobian is an M by n matrix where M is the number of system constraints and n is the number of actuated joints, defined by the following expression: ##EQU35## where f is the vector of functions mapping joint variables into cartesian coordinates. 21. The apparatus according to claim 20 further comprising: a. means for determining if one of the rows of [A] is a linear combination of the previous rows of [A]; and b. means responsive to such determination for eliminating said linearly dependent matrix now from use in said joint angle computation. 22. The apparatus according to claim 20 further comprising: a. means for determining if the vector magnitude of one of the rows of [A] falls below a predetermined threshold during the execution of said steps c.(1) and c.(2); and b. means responsive to such determination for eliminating the below-threshold matrix row from use in said joint angle computation. 23. A method of controlling the motion of a manipulator end effector in response to input signals, which signals define a series of discrete positions along a path of a point associated with said end effector, comprising the steps of: a. generating data sets which identify cartesian coordinate values of points along said end effector path; b. computing a set of joint angle corresponding to each of said cartesian coordinate points based on the constrained minimization of a convex objective function referenced to a fixed origin; c. producing, in response to said joint angles, a drive signal for each joint actuator; and d. interating steps a. through d. to cause said end effector point to move through a series of increments along said path. 24. The method according to claim 23 wherein said joint angle computation step is based on the constrained minimization of a positive semi-definite quadratic form as the objective function referenced to a fixed origin. 25. The method according to claim 23 wherein said joint angle computation step is based on the constrained minimization of a positive semi-definite quadratic form with a diagonal coefficient matrix as the objective function referenced to a fixed origin. 26. The method according to claim 23 wherein said joint angle computation step comprises the steps of: formulating a Jacobian operator of manipulator coordinate transformation equations; and computing said joint angles without explicitly solving for the null space of the Jacobian. 27. The method according to claim 23 wherein said joint angle computation step includes the step of performing an affine transformation whereby the problem is made directly solvable by the Moore-Penrose inverse definition. 28. The method according to claim 23 wherein said joint angle computation step includes the step of performing an affine transformation whereby a problem is produced which, for a given size Jacobian matrix, is solvable by a constant number of algebraic operations independent of the elements within the matrix. 29. The method according to claim 23 wherein said joint angle computation step further comprises the steps of: a. formulating a Jacobian operator of manipulator coordinate transformation equations; and b. computing a unique set of joint angle values which minimize: ##EQU36## where: n is the number of joints; k.sub.i is a predetermined control value for the i.sup.th joint; .theta..sub.i is the known current position of the i.sup.th joint; .DELTA..theta..sub.i is the unknown change in angle for the i.sup.th joint from its current position; .theta..sub.io is a predetermined origin for the i.sup.th joint; {.DELTA..theta.} is the vector of the unknown change in angle for each joint from its current position; {.DELTA.X} is the vector of the change in cartesian coordinates of the tool position between the current position and the next position; [J.degree.] is the Jacobian matrix evaluated at the current position where the Jacobian is an M by n matrix where M is the number of system constraints and n is the number of actuated joints, defined by the following expression: ##EQU37## where f is the vector of functions mapping joint variables into cartesian coordinates. 30. The method according to claim 23 wherein said joint angle computation step further comprises the steps of; a. formulating a Jacobian operator of manipulator coordinate transformation equations; b. transforming the problem statement of: ##EQU38## into the statement of: d. means for computing the change in joint angles from the previously known position such that: where: n is the number of joints; k.sub.i is a predetermined control value for the i.sup.th joint; .theta..sub.i is the known current position of the i.sup.th joint; .DELTA..theta..sub.i is the known change in angle for the i.sup.th joint from its current position; .theta..sub.io is a predetermined origin for the i.sup.th joint; {.theta.} is the vector of the known current position of the joints; {.theta..sub.o } is the vector of predetermined origins for each joint; {.DELTA..theta.56 is the vector of the unknown change in angle for each joint from its current position; {.DELTA.X} is the vector of the change in cartesian coordinates of the tool position between the current position and the next position; [J.degree.] is the Jacobian matrix evaluated at the current position where the Jacobian is an M by n matrix where M is the number of system constraints and n is the number of actuated joints, defined by the following expression; ##EQU40## where f is the vector of functions mapping joint variables into cartesian coordinates. 31. The method according to claim 23 wherein said joint angle computation step further comprises the steps of: a. formulating a Jacobian operator of manipulator coordinate transformation equations; b. transforming the problem statement of: ##EQU41## into the statement of: such that [E] produces the following relationship: [I]=[F][F].sup.t ; d. calculating the solution of the minimization function as: {D}=[F].sup.t {G}; and e. computing the change in joint angles from the previously known position such that: where: n is the number of joints; k.sub.i is a predetermined control value for the i.sup.th joint; .theta..sub.i is the known current position of the ith joint; .DELTA..theta..sub.i is the unknown change in angle for the ith joint from its current position; .theta..sub.io is a predetermined origin for the i.sup.th joint; {.theta.} is the vector of the known current position of the joints; {.theta..sub.o } is the vector of predetermined origins for each joint; {.DELTA..theta.} is the vector of the unknown change in angle for each joint from its current position; {.DELTA.X} is the vector of the change in cartesian coordinates of the tool position between the current position and the next position; [J.degree.] is the Jacobian matrix evaluated at the current position where the Jacobian is an M by n matrix where M is the number of system constraints and n is the number of joints, defined by the following expression: ##EQU43## where f is the vector of functions mapping joint variables into cartesian coordinates. 32. The method according to claim 23 wherein said joint angle computation step further comprises the steps of: a. formulating a Jacobian operator of manipulator coordinate transformation equations; b. transforming the problem statement of: ##EQU44## into the statement of: such that [E] produces the following relationship: [I]=[F][F].sup.t ; by the steps of: (1) subtracting from each of the rows of [A] and {B} multiples of their respective first row such that the first row of [A] becomes orthogonal to the remaining rows of [A] and (2) repeating step (1) for each successive row of [A]; d. calculating the solution of the minimization function as: {D}=[F].sup.t {G}; and e. computing the change in joint angles from the previously known position such that: where: n is the number of joints; k.sub.i is a predetermined control value for the i.sup.th joint; .theta..sub.i is the known current position of the ith joint; .DELTA..theta..sub.i is the unknown change in angle for the ith joint from its current position; .theta..sub.io is a predetermined origin for the i.sup.th joint; {.DELTA..theta.} is the vector of the unknown change in angle for each joint from its current position; {.DELTA.X} is the vector of the change in cartesian coordinates of the tool position between the current position and the next position; [J.degree.] is the Jacobian matrix evaluated at the current position where the Jacobian is an M by an n matrix where M is the number of system constraints and n is the number of joints, defined by the following expression: ##EQU46## where f is the vector of functions mapping variables into cartesian coordinates. 33. The method according to claim 32 further comprising the steps of: a. determining if one of the rows of [A] is a linear combination of the previous rows of [A]; and b. eliminating the linearly dependent matrix now from use in said angle computation. 34. The method according to claim 32 further comprising the steps of: a. determining if the vector magnitude of one of the rows of [A] falls below a predetermined threshold during the execution of said steps c.(1) and c.(2); and b. eliminating the below-threshold matrix row from use in said joint angle computation. 