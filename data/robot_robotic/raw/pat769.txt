Computer implemented machine learning methods are described. A co-operative learning method involves a first rule based system and a second rule based system. A rule base is generated from input data and recursion data is used to recursively update the rule base as a result of newly received input data. Rule data defining at least one rule and associated data are sent to the second system which determines whether to update its rule base using the transmitted rule data, and if so the recursion data is used to recursively determine the updated rules for its rule base. A father machine learning method for a rule based system, involves receiving time series data, determining whether the data increases or decreases the spatial density for previously existing rules, and if so then creating a new cluster and associated rule, otherwise a new cluster is not created.
Claims The invention claimed is: 1. A computer implemented method for co-operative learning by at least a first entity supporting a first rule based system and a second entity supporting a second rule based system, the method comprising: the first entity generating a rule base from input data supplied from at least one input and having recursion data used to recursively update the rule base as a result of newly received input data; the first entity sending rule data defining at least one rule of the rule base of the first entity and associated data, including the recursion data, to the second entity; the second entity determining whether to update the rule base of the second entity using the transmitted rule data, and if so then using the recursion data to recursively determine the updated rules for its rule base. 2. The method as claimed in claim 1, wherein determining whether to update the rule base of the second entity includes: forming a joint data space for the first system and the second system; and determining the separation in the joint data space of the inputs for a transferred rule and the separation in the joint data space for the outputs for the transferred rule; and using the separations to determine whether to absorb the rule, reject the rule or create a new rule. 3. The method as claimed in claim 2, and further comprising: determining whether the first entity and the second entity have the same dimensions, and if not then determining a partial separation in the joint data space. 4. The method as claimed in claim 1, wherein the recursion data includes data representing the mean of all data from the first, transmitting entity. 5. The method as claimed in claim 1, wherein the associated data further comprises parameters of the consequents that can be used to continue learning from the transmitted rule. 6. The method of claim 1, wherein the associated data further comprises at least one indicator of the quality of the rules. 7. The method of claim 6, wherein the at least one indicator includes at least one of age; support; utility; and local potential. 8. The method of claim 1, wherein the associated data further comprises initialisation parameters. 9. The method of claim 1, wherein the associated data further comprises auxiliary parameters for continuing clustering by the second entity. 10. The method of claim 1, wherein the second entity sends rule data defining the rules of the rule base of the second entity and associated data, including recursion data, to the first entity. 11. The method of claim 1, wherein the first entity sends rule data defining at least one rule of the rule base of the first entity and associated data, including the recursion data, to a plurality of different entities each supporting a rule based system. 12. The method of claim 1, wherein the first and/or second entity generates an output using the current rules of its rule base. 13. The method as claimed in claim 12, wherein the output is data or a signal representing a prediction, classification, clustering or control. 14. A computer implemented method for machine learning by a first entity supporting a rule based system, wherein each rule is associated with a centre of a cluster of data points in a combined rule input and rule output data space, the method comprising: receiving a time series data item as input; determining whether a data point for the time series input data item increases or decreases the spatial density for each previously existing rule; if the data point does increase or decrease the spatial density for every previously existing cluster, then creating a new cluster and associated rule, otherwise, if the data point does not increase the spatial density for every previously existing cluster, or does not decrease the spatial density for every previously existing cluster, then not creating a new cluster; and repeating the method for a next time series data item received. 15. The method of claim 14, further comprising: determining if the newly created rule is similar to any of the previously existing rules, and if so then removing the previously existing rule or rules from the rule base. 16. The method of claim 14, and further comprising recursively recalculating a measure of the spread of each cluster in the data space. 17. The method of claim 14, and further comprising: calculating a mean position in the data space of all previous data points; and using the mean position in determining whether the data point for the time series input data item increases or decreases the spatial density for every previously existing cluster. 18. The method of claim 14, wherein determining whether the data point for the time series input data item increases of decreases the spatial density of data points for all previously existing clusters, includes determining whether the sum of the number of increases of spatial density or decreases of spatial density for every previously existing cluster is equal to the number of previously existing cluster centres. 19. The method of claim 1, wherein there are a plurality of different potential inputs, and further comprising: determining which of the plurality of different potential inputs to use as actual inputs by quantifying the importance of each potential input to the system and iteratively discarding those potential inputs that do not make a significant contribution. 20. The method of claim 19 wherein the importance of each potential input is quantified by calculating the relative importance of the potential inputs. 21. The method of claim 20, and further comprising calculating a normalised value of the relative importance and wherein the normalised value of the relative importance is compared with a threshold value to determine whether to discard a potential input. 22. Computer program code executable by at least a first data processing device to carry out the method of claim 1. 23. At least a first computer readable medium bearing computer program code as claimed in claim 22. 24. A data processing system providing co-operative learning by at least a first entity supporting a first rule based system and a second entity supporting a second rule based system, the data processing system including at least a first data processing device and at least a first storage device in communication therewith and storing instructions which can configure the data processing device to cause: the first entity to generate a rule base from input data supplied from at least one input and to calculate recursion data which can be used to recursively update the rule base as a result of newly received input data; the first entity to send rule data defining at least one rule of the rule base of the first entity and associated data, including the recursion data, to the second entity; and the second entity to determine whether to update the rule base of the second entity using the transmitted rule data, and if so then to use the recursion data to recursively determine the updated rules for its rule base. 25. A data processing system as claimed in claim 24, in which the data processing system includes: a first data processing apparatus which includes the first data processing device and the first storage device and which hosts the first entity; a second data processing apparatus which includes a second data processing device and second storage device in communication therewith and storing instructions which can configure the second data processing device, and which hosts the second entity. 26. A data processing system as claimed in claim 24, wherein the first data processing apparatus and the second data processing apparatus are separate apparatus and are in communication via a communication link via which the rule data and associated data can be sent between the first entity and the second entity. 27. A data processing system providing machine learning by an entity supporting a rule based system, the data processing system including at least a first data processing device and at least a first storage device in communication therewith and storing instructions which can configure the data processing device to: receive a time series data item as input; determine whether a data point for the time series input data item increases or decreases the spatial density for each previously existing rule; if the data point does increase or decrease the spatial density for every previously existing cluster, then creating a new cluster and associated rule, otherwise, if the data point does not increase the spatial density for every previously existing cluster, or does not decrease the spatial density for every previously existing cluster, then not creating a new cluster; and repeat the method for a next time series data item received. 