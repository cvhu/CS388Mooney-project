The present invention provides a method and apparatus for reducing the overhead required in conventional fault tolerant processing by redundant processors. Commands are received and queued by both the active and standby units but are processed only by the active unit. Short messages, each including a command identifier, are transmitted from the active unit to the standby unit. In addition, periodic handshaking signals are exchanged between the two units. In the event the active unit fails, the standby unit is automatically brought on-line to process the unprocessed commands and transmit responses to the command source. When the failed unit is restored, it can become the standby unit.
Claims What is claimed is: 1. A system for fault tolerant command processing, comprising: a first receiver for receiving commands from a command source, comprising: a first buffer coupled to the command source; a first validation module coupled to receive commands from said first buffer; and a first queue coupled to receive validated commands from said first validation module; a first transmitter, coupled with said first receiver, for transmitting a response to the command source; a first inter-unit interface coupled with said first receiver and said first transmitter; said first receiver, said first transmitter and said first inter-unit interface comprising a first command processing unit; a second receiver for receiving the command from the command source, comprising: a second buffer coupled to the command source; a second validation module coupled to receive commands from said second buffer; and a second queue coupled to receive validated commands from said second validation module; a second transmitter, coupled with said second receiver, for transmitting a response to the command source; a second inter-unit interface coupled with said second receiver, said second transmitter and said first inter-unit interface; said second receiver, said second transmitter and said second inter-unit interface comprising a second command processing unit; and a controller for designating that said first command processing unit be an active unit and respond to the command and that said second command processing unit be a standby unit and respond to the command only if a failure occurs in said first command processing unit, wherein said first receiver and said first transmitter are operationally linked with said second receiver when said first command processing unit is the active unit. 2. The system of claim 1, further comprising means for directing that the command be transmitted from said first receiver to said second receiver if the command is not received by the second receiver from the command source. 3. The system of claim 1, wherein said controller further comprises: means for detecting when said first command processing unit is restored; and means for redesignating said first command processing unit as the standby unit; wherein said second receiver and said second transmitter are operationally linked with said first receiver. 4. The system of claim 1, wherein: when said first command processing unit is designated as the active unit and said second command processing unit is designated as the standby unit, said first and second inter-unit interfaces comprise: a first operational link between said first queue and said second queue; a second operational link between said first queue and said second buffer; and a third operational link between said first response generator and said second queue; and when said second command processing unit is designated as the active unit and said first command processing unit is designated as the standby unit, said first and second inter-unit interfaces comprise: a fourth operational link between said second queue and said first buffer; and a fifth operational link between said second response generator and said first queue. 5. A method of fault tolerant command processing, comprising the steps of: a) designating a first command processing unit as an active unit and designating a second command processing unit as a standby unit; b) receiving a command in a command buffer of the first command processing unit, the command being transmitted by a command source; n) attempting to receive the command in a command buffer of the second command processing unit; c) validating the command in a command received in the command buffer of said first command processing unit validating module of the first command processing unit; d) queuing the validated command in a command queue of the first command processing unit; e) transmitting a queue message from the first command processing unit to the second command processing unit; f) if the command is found in the command buffer of the second command processing unit, queuing the command in a command queue of the second command processing unit; g) directing that the first command processing unit respond to the command received in the command buffer of said first command processing unit; h) transmitting a de-queue message from the first command processing unit to the second command processing unit; and i) de-queuing the command from the command queue of the second command processing unit. 6. The method of claim 5, wherein said step of de-queuing the command from the command queue of the second processing unit comprises the step of de-queuing the command without the second command processing unit responding to the command. 7. The method of claim 5, further comprising the step of associating a command identifier with the command received from the command source. 8. The method of claim 7, wherein said step of transmitting a queue message comprises the step of transmitting a message which include the command identifier and a queue directive. 9. The method of claim 7, wherein said step of transmitting a de-queue message comprises the step of transmitting a message which include the command identifier and a de-queue directive. 10. The method of claim 5, further comprising the step of periodically exchanging a handshaking signal between the active command processing unit and the standby command processing unit wherein a failure of one unit to receive a handshaking signal is an indication of a fault in the other unit. 11. The method of claim 5, further comprising the step of, if the first command processing unit has failed: j) taking the first command processing unit off-line; k) re-designating the second command processing unit as the active unit; and l) directing that the second command processing unit process commands in the command buffer and command queue of the second command processing unit. 12. The method of claim 11, further comprising the step of: m) re-designating the first command processing unit as the standby unit after the failure has been corrected. 13. The method of claim 5, further comprising the steps of: o) after the step e), determining whether the command is in the command buffer of the second command processing unit; p) if the command is not in the command buffer of the second command processing unit, sending an error message from the second command processing unit to the first command processing unit; and q) transmitting the command from the command queue of the first command processing unit to the command queue of the second command processing unit. 14. The method of claim 13, wherein: said step of transmitting a queue message comprises the step of transmitting a message which include a command identifier and a queue directive; and said step of transmitting the command from the first command processing unit comprises the step of transmitting the command and an associated identifier. 15. A fault tolerant, automated data storage and retrieval library, comprising: a data drive for writing data to or reading data from a selected one of a plurality of removable storage media; a drive controller interconnected between said data drive and a host processor; a media accessor for transporting the selected media between a storage cell and said data drive; first and second library managers coupled with said drive controller and said media accessor; each of said first and second library managers having: a command buffer coupled to receive commands from said drive controller; a command validation module coupled to receive commands from said command buffer; a command queue coupled to receive validated commands from said command validation module; a command response generator coupled to receive validated commands from said command queue and to transmit command responses to said drive controller; and an interface, comprising: a first operational link between said command queue of said first library manager and said command queue of said second library manager; a second operational link between said command queue of said first library manager and said command buffer of said second library manager; and a third operational link between said command response generator of said first library manager and said command queue of said second library manager. 16. The library of claim 15, further comprising means for initially designating that said first library manager be an active unit and that said second library manager be a standby unit. 17. The library of claim 16, wherein said first library manager further comprises: means for directing that said command queue of said first library manager transfer a command to said command queue of said second library manager after the command has been validated and transferred into said command queue of said first library manager if the command is not received in said command buffer of said second library manager; and means for directing that the command be dequeued from said command queue of said second library manager after said command response builder of said first library manager has completed a response to the command. 18. The library of claim 16, further comprising means for re-designating said second library manager as the standby unit when said first library manager incurs a failure and for re-designating said first library manager as the standby unit when the failure is corrected. 19. The library of claim 18, wherein said interface further comprises: a fourth operational link between said command queue of said second library manager and said command buffer of said first library manager; and a fifth operational link between said command response generator of said second library manager and said command queue of said first library manager. 20. The library of claim 15, wherein said first library manager further comprises: means for directing that said command buffer of said second library manager transfer a command to said command queue of said second library manager after the command has been validated and transferred into said command queue of said first library manager; and means for directing that the command be dequeued from said command queue of said second library manager after said command response builder of said first library manager has completed a response to the command. 