A system for motion control in which an application is developed that is independent from the actual motion control hardware used to implement the system. The system comprises a software system that employs an application programming interface comprising component functions and a service provider interface comprising driver functions. A system programmer writes an application that calls the component functions. Code associated with the component functions relates these functions to the driver functions. A hardware designer writes driver code that implements the driver functions on a given motion control hardware product. The driver functions are separated into core and extended driver functions. All software drivers implement the core driver functions, while the software drivers need not contain code for implementing the extended driver functions. If the software driver does not contain code to implement an extended driver function, the functionality of the extended driver function is obtained through a combination of core driver functions. The system programmer may also select one or more streams that allow the control commands to be communicated to, and response data to be communicated from, motion control hardware.
Claims We claim: 1. A system for generating a sequence of control commands for controlling a selected motion control device selected from a group of supported motion control devices, comprising: a set of motion control operations, where each motion control operation is either a primitive operation the implementation of which is required to operate motion control devices and cannot be simulated using other motion control operations or a non-primitive operation that does not meet the definition of a primitive operation; a core set of core driver functions, where each core driver function is associated with one of the primitive operations; an extended set of extended driver functions, where each extended driver function is associated with one of the non-primitive operations; a set of component functions; component code associated with each of the component functions, where the component code associates at least some of the component functions with at least some of the driver functions; a set of software drivers, where each software driver is associated with one motion control device in the group of supported motion control devices, each software driver comprises driver code for implementing the motion control operations associated with at least some of the driver functions, and one of the software drivers in the set of software drivers is a selected software driver, where the selected software driver is the software driver associated with the selected motion control device; an application program comprising a series of component functions, where the application program defines the steps for operating motion control devices in a desired manner; and a motion control component for generating the sequence of control commands for controlling the selected motion control device based on the component functions of the application program, the component code associated with the component functions, and the driver code associated with the selected software driver. 2. A system as recited in claim 1, in which the software drivers comprise driver code for implementing all of the core driver functions. 3. A system as recited in claim 2, in which the software drivers comprise driver code for implementing at least some of the extended driver functions. 4. A system as recited in claim 3, in which: non-supported extended driver functions are extended driver functions having no driver code associated therewith; and the motion control component generates control commands based on the driver code associated with a combination of the core driver functions to emulate the motion control operations associated with at least some of the non-supported extended driver functions. 5. A system as recited in claim 4, further comprising: an extended function pointer table that maps the non-supported extended driver functions to the combination of core driver functions employed to emulate the non-supported extended functions; and the motion control component generates the control commands further based on the contents of the extended function pointer table. 6. A system as recited in claim 5, in which the extended function pointer table contains pointers for both supported and non-supported extended driver functions, where the pointers for the supported extended driver functions point to driver code for implementing the supported extended driver functions and the pointers for the non-supported extended driver functions point to the combination of core driver functions that emulate the non-supported extended functions. 7. A system as recited in claim 1, further comprising: means for determining a driver unit system employed by the software drivers; and means for converting an application unit system employed by the application program into the driver unit system. 8. A system as recited in claim 1, further comprising: a plurality of destinations of control commands, with one of the plurality of destinations of control commands being a selected destination of control commands; a plurality of streams, where each stream contains transmit stream code that determines how the control commands are to be transferred to at least one of the plurality of destinations of control commands; and stream control means for communicating the control commands to the selected destination of control commands based on the transmit stream code contained by the stream associated with the selected destination of control commands. 9. A system as recited in claim 8, in which certain of the destinations of control commands generate response data, wherein: the streams associated with the destinations of control commands that generate response data are each associated with response stream code; and the stream control means processes the response data based on the response stream code. 10. A system as recited in claim 1, further comprising a command format template and a response format template associated with each driver function, wherein: the motion control component further comprises: means for generating command data strings for controlling the selected motion control device based on the command format template and the application program; and means for parsing response data strings generated by the selected motion control device based on the response format template and the application program. 