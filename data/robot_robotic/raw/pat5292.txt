A system and method for specifying a computer-implemented process utilizing two or more different program creation methodologies. In one embodiment, the different program creation methodologies may include specifying steps or operations for the process using graphical input panels, e.g., in a "wizard-based" manner, and using graphical programming techniques for other portions, such as to specify decision operations. Thus, optimum program creation methodologies may be used for specifying different respective portions of the process. At least a portion of the process may be dependent on prior execution results determined by a previous portion of the process. As an example, for a machine vision inspection process, the previous portion of the process may analyze images of a product, and a subsequent portion of the process may depend on the results of the image analysis, e.g., may either accept or reject the product depending on prior execution results of the image analysis portion. Thus, the process may include one or more decision operations that analyze the prior execution results. The execution of the portion(s) of the process that are dependent on prior execution results may depend on the outcome(s) of the decision operation(s). The decision operation(s) may advantageously be specified graphically, e.g., as a block diagram constructed in response to user input.
Claims We claim: 1. A method for specifying a computer-implemented process, the method comprising: displaying a graphical user interface comprising a plurality of possible steps that are useable in specifying at least a portion of a process; receiving first user input selecting a plurality of steps specifying a first portion of the process; storing the plurality of steps in a memory in response to the first user input; and creating a block diagram in response to second user input selecting a plurality of nodes and interconnecting at least two of the plurality of nodes, thereby specifying a plurality of interconnected nodes, wherein the block diagram specifies a second portion of the process, wherein the second portion of the process is distinct from the first portion of the process, wherein the block diagram is distinct from the plurality of steps, wherein the block diagram comprises the plurality of interconnected nodes, and wherein the plurality of interconnected nodes visually indicate operation of the second portion of the process; wherein the process specification and the block diagram collectively specify the computer-implemented process. 2. The method of claim 1, wherein the block diagram graphically specifies a procedure that uses values determined by the first portion of the process to produce one or more results. 3. The method of claim 1, wherein the block diagram graphically specifies a decision operation based on execution results determined by steps in the plurality of steps. 4. The method of claim 1, further comprising: including one or more steps in the plurality of steps operable to perform a plurality of operations based on a result computed by the block diagram. 5. The method of claim 1, further comprising: including a step in the plurality of steps that references the block diagram. 6. The method of claim 1, further comprising: executing the process, wherein said executing comprises executing the plurality of steps and executing the block diagram. 7. The method of claim 1, further comprising: displaying a graphical user interface useable to create the block diagram; wherein said receiving the second user input comprises receiving the second user input via the graphical user interface. 8. The method of claim 1, wherein said creating the block diagram comprises: displaying the plurality of nodes in the block diagram, wherein one or more of the nodes are displayed in response to the second user input; and creating an interconnection between the at least two of the plurality of nodes in response to the second user input. 9. The method of claim 1, wherein said creating the block diagram in response to the second user input comprises creating a graphical program in response to the second user input. 10. The method of claim 1, wherein the block diagram includes a first set of nodes having values determined by execution results of the plurality of steps; and wherein said creating the block diagram comprises: including a second set of function nodes in the block diagram in response to the second user input; and connecting nodes from the first set of nodes to nodes from the second set of function nodes, in response to the second user input. 11. The method of claim 1, wherein each of the plurality of steps in the plurality of steps has one or more associated values; and wherein the first user input specifies at least a subset of the values associated with the plurality of steps; the method further comprising: automatically including one or more nodes in the block diagram, wherein each node corresponds to a value from the specified at least a subset of values. 12. The method of claim 1, wherein the graphical user interface indicates operations that can be performed on an object; wherein the first user input specifies one or more operations on the object; and wherein said storing the plurality of steps is performed in response to the first user input received via the graphical user interface specifying one or more operations to be performed on the object. 13. The method of claim 12, wherein the object is an image. 14. The method of claim 1, wherein the plurality of steps comprises a script. 15. The method of claim 1, wherein the plurality of steps is stored as a computer program. 16. The method of claim 1, wherein the first user input specifies a plurality of code modules; and wherein said storing the plurality of steps comprises including a reference to each specified code module in the plurality of steps. 17. The method of claim 1, wherein said storing the plurality of steps in response to the first user input comprises creating a program portion coded in a text-based programming language in response to the first user input, and storing the program portion in the memory. 18. The method of claim 1, wherein process is executable to inspect a device; and wherein the block diagram is executable to determine an inspection classification for the device, depending on execution results of the plurality of steps. 19. The method of claim 1, wherein the process is a machine vision process executable to visually inspect a device; and wherein the block diagram is executable to determine an inspection classification for the device, depending on execution results of the plurality of steps. 20. The method of claim 1, wherein the process is executable to perform one or more of the following types of applications: a machine vision application; an image processing application; an image analysis application; a motion control application; an industrial automation application; a process control application; a test and measurement application; a simulation application. 21. A method for specifying a computer-implemented process, the method comprising: displaying a graphical user interface (GUI), wherein the GUI includes operations that are selectable to be included in a plurality of operations; receiving user first input to the GUI, wherein the first user input selects operations for inclusion in the plurality of operations; storing the plurality of operations in response to the first user input, wherein the plurality of operations specifies a first portion of the process; and creating a block diagram in response to second user input to the GUI selecting a plurality of nodes and interconnecting at least two of the plurality of nodes, thereby specifying a plurality of interconnected nodes, wherein the block diagram specifies a second portion of the process, wherein the block diagram comprises the plurality of interconnected nodes, and wherein the plurality of interconnected nodes visually indicate operation of the second portion of the process; wherein the plurality of operations is distinct from the block diagram; and wherein the plurality of operations and the block diagram collectively specify the computer-implemented process. 22. The method of claim 21, wherein the block diagram graphically specifies a procedure that uses values determined by the first portion of the process to produce one or more results. 23. The method of claim 21, wherein the block diagram graphically specifies a decision operation based on execution results determined by steps in the plurality of operations. 24. The method of claim 21, further comprising: including one or more steps in the plurality of operations operable to perform a plurality of operations based on a result computed by the block diagram. 25. A method for specifying a computer-implemented process, the method comprising: receiving first user input indicating operations to be performed on an object; storing a plurality of steps in a script in response to the first user input, wherein each step is operable to perform an operation; and creating a block diagram in response to second user input, wherein the block diagram specifies a decision operation based on execution results of the plurality of steps, wherein the block diagram comprises a plurality of interconnected nodes which visually indicate the decision operation; wherein the decision operation is distinct from the operations to be performed on the object, and wherein the block diagram is distinct from the script; wherein the script and the diagram collectively specify the computer-implemented process. 26. The method of claim 25, further comprising: receiving second user input specifying a first plurality of nodes; wherein said creating the block diagram comprises creating the block diagram from the script, second user input, including the first plurality of nodes, and automatically including a second plurality of nodes, wherein each node of the second plurality of nodes is associated with a step of the plurality of steps in the script. 27. The method of claim 26, further comprising: interconnecting at least one of the first plurality of nodes with at least one of the second plurality of nodes in response to third user input. 28. A method for specifying a computer-implemented process, the method comprising: creating a plurality of steps in response to first user input, wherein the plurality of steps specify a first portion of the process; creating a block diagram in response to second user input, wherein the block diagram specifies a second portion of the process; wherein the block diagram comprises a plurality of interconnected nodes which visually indicate operation of the second portion of the process; wherein the plurality of steps is distinct from the block diagram; wherein the plurality of steps and the block diagram collectively specify the computer-implemented process. 29. A memory medium for specifying a computer-implemented process, the memory medium comprising program instructions executable to: display a graphical user interface comprising a plurality of possible steps that are useable in specifying at least a portion of a process; receive first user input selecting a plurality of steps specifying a first portion of the process; store the plurality of steps in response to the first user input, wherein the plurality of steps specify a first portion of the process; create a block diagram in response to second user input selecting a plurality of nodes and interconnecting at least two of the plurality of nodes, thereby specifying a plurality of interconnected nodes, wherein the block diagram specifies a second portion of the process; wherein the block diagram comprises the plurality of interconnected nodes, and wherein the plurality of interconnected nodes visually indicate operation of the second portion of the process; wherein the second portion of the process is distinct from the first portion of the process, and wherein the process specification is distinct from the block diagram; and wherein the process specification and the block diagram collectively specify the computer-implemented process. 30. The memory medium of claim 29, wherein the block diagram graphically specifies a procedure that uses values determined by the first portion of the process to produce one or more results. 31. The memory medium of claim 29, wherein the block diagram graphically specifies a decision operation based on execution results determined by steps in the plurality of steps. 32. The memory medium of claim 29, wherein the program instructions are further executable to: include one or more steps in the plurality of steps operable to perform a plurality of operations based on a result computed by the block diagram. 33. The memory medium of claim 29, wherein, in said creating the block diagram, the program instructions are further executable to: display a plurality of nodes in the diagram, wherein one or more of the nodes are displayed in response to the second user input; create an interconnection between at least two of the plurality of nodes in response to the second user input. 34. The memory medium of claim 29, wherein the graphical user interface indicates operations that can be performed on an object; wherein the user input specifies one or more operations on the object; and wherein the program instructions are further executable to perform said creating the plurality of steps in response to the first user input received via the graphical user interface specifying one or more operations to be performed on the object. 35. The memory medium of claim 34, wherein the object is an image. 36. The memory medium of claim 29, wherein the process is a machine vision process executable to visually inspect a device; wherein the block diagram is executable to determine an inspection classification for the device, depending on execution results of the plurality of steps. 37. A system for specifying a computer-implemented process, the system comprising: a processor; a memory storing program instructions; wherein the processor is operable to execute the program instructions to: display a graphical user interface comprising a plurality of possible steps that are useable in specifying at least a portion of a process; receive first user input selecting a plurality of steps specifying a first portion of the process; store the plurality of steps in response to the first user input; and create a block diagram in response to second user input selecting a plurality of nodes and interconnecting at least two of the plurality of nodes, thereby specifying a plurality of interconnected nodes, wherein the block diagram specifies a second portion of the process; wherein the block diagram comprises the plurality of interconnected nodes, and wherein the plurality of interconnected nodes visually indicate operation of the second portion of the process; wherein the first portion of the process is distinct from the second portion of the process, and wherein the plurality of steps is distinct from the block diagram; and wherein the plurality of steps and the block diagram collectively specify the computer-implemented process. 