A large scale distributed multimedia system comprising the following: i) one or more server(s), wherein each server includes a main server thread, one or more threads capable of monitoring incoming data feeds and instantiating the resultant data into the system (monitoring threads), one or more threads capable of handling incoming data requests (request threads), and cache memory; ii) a mass storage system (MSS), wherein the MSS stores information concerning the arrangement of one or more server(s) and is capable of controlling one or more robotic autoloader systems (robots); iii) a types system for defining data types at a binary level and for associating those data types with one or more server(s) such that the mapping maps data types with the servers that must be addressed to obtain the corresponding data; and iv) a query system for executing data queries on servers mapped to the data type being queried. Additional features are also supported including registration on one or more servers of customized commands and functions, and input and output folders for transmitting data to or from data storage.
Claims The invention claimed is: 1. A large scale distributed multimedia system comprising: a) one or more servers, wherein each of said one or more servers includes i) a main server thread; ii) one or more threads capable of monitoring incoming data feeds and instantiating the resultant data into the system (monitoring threads), and iii) one or more threads capable of handling incoming data requests (request threads); and iv) cache memory; b) logically connected to said one or more servers, a mass storage system, wherein said mass storage system stores information concerning an arrangement of said one or more servers and is capable of controlling one or more robotic autoloader systems (robots); c) logically connected to said one or more servers, a types system for defining data types at a binary level and for associating said data types with said one or more servers such that a mapping maps data types with said one or more servers that must be addressed to obtain the corresponding data; and d) logically connected to said one or more servers, a query system for executing data queries on said one or more servers mapped to said data type being queried. 2. The system of claim 1, further comprising an output folder logically connected to said one or more servers, wherein said output folder stores a multimedia portion of any said data feeds acquired by said one or more servers. 3. The system of claim 2, wherein said output folder stores batches of information to be migrated to said mass storage system. 4. The system of claim 1, wherein each of said one or more servers includes a same core software. 5. The system of claim 1, wherein each of said one or more servers is configured at run-time to support a different functionality. 6. The system of claim 1, wherein each of said one or more servers is customized using at least one registered plug-in. 7. The system of claim 1, wherein at least one server has a main server and a drone server that transparently operate as part of a single logical server cluster. 8. The system of claim 7, wherein said drone server is tasked by said main server. 9. The system of claim 1, wherein at least one server has a first and second drone servers, wherein said first drone server is tasked by said second drone server. 10. The system of claim 7, wherein said logical server cluster is physically distributed over a wide area. 11. The system of claim 7, wherein each said server in said logical server cluster communicates with other servers (including other servers in said logical server cluster) using a standard communication protocol. 12. The system of claim 1, wherein said mass storage system stores information concerning a logical arrangement of said one or more servers. 13. The system of claim 1, wherein said mass storage system stores information concerning a physical location of said one or more servers. 14. The system of claim 1, wherein said mass storage system is capable of fulfilling one or more information requests from a server by directing a robot to mount a drive that stores a corresponding information. 15. The system of claim 1, wherein said mass storage system includes logical operations that enable migration of data from cache based storage to storage managed by said one or more robots. 16. The system of claim 15, wherein said mass storage system includes definitions for drivers of one or more devices, such definitions mapping said logical operations provided by said mass storage system to one or more commands necessary to implement said logical operations for a given device of said one or more devices. 17. The system of claim 2 further comprising: one or more client machines that are logically connected to said one or more servers and that use said logical connection to submit one or more queries to said query system. 18. The system of claim 17, wherein said query system is capable of distributing portions of a query received from said one or more client machines (each a distributed query) to said one or more servers based on a functionality supported by said one or more servers. 19. The system of claim 18, wherein said query system reassembles a results of said distributed queries into a unified list. 20. The system of claim 19, wherein said query system is capable of saving and executing said one or more queries on a continuous basis against any new data acquired from said data feeds being monitored by said monitoring threads. 21. The system of claim 20, wherein said one or more queries saved and executed by said query system includes one or more interest profiles corresponding to one or more client machines such that whenever a new data arrives from said data feeds that matches said one or more interest profiles, a corresponding client is notified by query system. 22. The system of claim 17, wherein each of said one or more client machines includes a server functionality such that each of said one or more client machines is capable of making data available to the system. 23. The system of claim 22, wherein said server functionality stored on each of said one or more client machines permits any other client machine in the system to discover any said data types served by each of said one or more client machines (if any). 24. The system of claim 1, wherein at least one server of said one or more servers enables direct access to one or more databases. 25. The system of claim 1, further comprising an input folder, wherein data coming from said incoming data feeds that are monitored by said monitoring threads are stored in said input folder in a hierarchical manner. 26. The system of claim 25, wherein said one or more servers includes one or more monitoring threads that monitors said input folder for changes. 27. The system of claim 26, wherein said one or more monitoring threads further supports defined aliases (or references) to data on other client machines such that, responsive to a request from a client machine, said one or more monitoring threads will acquire said data and transfer it to said input folder for processing. 28. The system of claim 25, further comprising a rejects folder, wherein said rejects folder stores any said incoming data feeds that cannot be processed by said input folder. 29. The system of claim 1, wherein said one or more servers further includes a maintenance interface, said maintenance interface permitting registration and execution of arbitrary maintenance functions. 30. The system of claim 17, wherein said one or more servers further includes custom commands and APIs that are registered on said one or more servers. 31. The system of claim 30, wherein said custom commands and said APIs registered on said one or more servers are based, at least in part, on a functionality associated with said one or more servers. 32. The system of claim 31, wherein said query system further includes one or more registered custom commands and APIs for a given said data type. 33. The system of claim 17, wherein said query system is capable of searching and retrieving data stored on said one or more robots using customizable aliases stored in said output folder. 34. The system of claim 1, wherein said one or more servers further include one or more routing algorithms to route commands and responses to/from one or more client machines that make up a logical server cluster. 