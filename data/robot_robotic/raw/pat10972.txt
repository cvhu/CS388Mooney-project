A system for controlling a mechanical manipulator in a laboratory environment employs a system of taught motions, attribute operators and procedure rules to simplify the programming task for scientists or engineers skilled in their own fields and not robotics.
Claims We claim: 1. A method for controlling a mechanical manipulator using a controller, the method comprising: storing in the controller a procedure which includes an ordered sequence of motions, each motion including an ordered sequence of positions, each position including coordinates which define a location relative to each axis of movement for the mechanical manipulator, each of said procedure, motions, positions and coordinates defining an attribute level; storing a first and a second attribute operator, said two attribute operators pertaining to different attribute levels and affecting two or more attribute levels, said first attribute operator having a higher rank than the second according to a predetermined ranking rule based on a ranking of the attribute levels; comparing the attribute operators stored and selecting the attribute operator having a higher rank from a pair of attribute operators when the pair have conflicting influence on the procedure; and executing the stored procedure according to the stored attribute operators, except for any non-selected attribute operator when the selecting step occurs. 2. The method of claim 1, further comprising editing the procedure and at least one attribute operator before the executing step. 3. The method of claim 2, wherein the editing is performed without moving the manipulator. 4. The method of claim 1, wherein the predetermined ranking rule is such that a coordinate attribute operator has higher rank than a position attribute operator, that a position attribute operator has higher rank than a procedure attribute operator, and that a procedure attribute operator has higher rank than a motion attribute operator. 5. The method of claim 1, wherein the predetermined ranking rule is such that a coordinate attribute operator has higher rank than a position attribute operator, that a position attribute operator has higher rank than a motion attribute operator, and that a motion attribute operator has higher rank than a procedure attribute operator. 6. The method of claim 1, further comprising storing at least one additional attribute operator for the procedure, a motion, position, or coordinate already stored, before execution, where the additional attribute operator has higher rank than other attribute operators so that the procedure will be executed acording to the additional attribute operator in the executing step. 7. The method of claim 1, wherein one of the two attribute operators is a motion attribute operator, and wherein the motion attribute opertor is such that at least one coordinate of a position remains the same as the coordinate of a previous position in an ordered sequence of positions in a motion in the procedure. 8. The method of claim 1, wherein one of the two attribute operators is a relative motion attribute operator, wherein the positions of each motion are defined relative to a first reference frame, the method further comprising storing in the controller a second reference frame before the executing step, wherein the relative motion attribute operator causes the motion to be executed during the executing step in reference to the second reference frame instead of in reference to the first reference frame. 9. The method of claim 1, wherein one of the two attribute operators is a don't-change attribute operator which causes the controller to use the value of a previous coordinate instead of the coordinate's actual value. 10. The method of claim 1, wherein one of the two attribute operators is a force attribute operator which specifies a maximum value of force to be applied to that coordinate. 11. The method of claim 1, wherein one of the two attribute operators is a move-through attribute operator which causes the controller not to stop at a position, but which rather moves the mechanical manipulator through the position, when executed. 12. The method of claim 1, wherein one of the two attribute operators is a velocity attribute operator which defines a velocity of the entire motion or procedure. 13. The method of claim 1, wherein one of the two attribute operators is a frame attribute operator which defines a new frame of reference for the entire motion or procedure. 14. The method of claim 1, wherein one of the two attribute operator is a tool-offset attribute operator which defines a positional offset for the entire motion or procedure. 15. The method of claim 1, wherein one of the two attribute operators is an acceleration attribute operator which defines an amount of acceleration for the entire motion or procedure. 16. The method of claim 1, wherein one of the two attribute operators is a reverse attribute operator which causes the controller to execute an entire motion or procedure in reverse order. 17. The method of claim 1, wherein one of the two attribute operators is a relative attribute operator which cause the controller to execute an entire motion or procedure in a present frame of reference rather than the frame of reference the motion or procedure was defined in. 18. The method of claim 1, wherein one of the two attribute operators is a procedure or motion attribute operator, and wherein the procedure attribute operator or motion operator is a relative frame of reference attribute operator which, when executed by the controller, transforms the positions in the procedure or in a motion to a new frame of reference. 19. An apparatus for controlling a mechanical manipulator using a controller, the method comprising: means for storing in the controller a procedure which includes an ordered sequence of motions, each motion including an ordered sequence of positions, each position including coordinates which define a location relative to each axis of movement for the mechanical manipulator, each of said procedures, motions, positions and coordinates defining an attribute level; means for storing a first and a second attribute operator, said two attribute operators pertaining to different attribute levels and affecting two or more attribute levels, said first attribute operator having a higher rank than the second according to a predetermined ranking rule based on a ranking of the attribute levels; means for comparing the attribute operators stored and selecting the attribute operator having a higher rank from a pair of attribute operators when the pair have conflicting influence on the procedure; and means for executing the stored procedure according to the stored attribute operators, except for any non-selected attribute operator when the selecting step occurs. 