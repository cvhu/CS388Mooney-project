The invention provides texture mapping techniques that facilitate interactive painting of a three-dimensional virtual surface by a user in object space, without requiring global parameterization. The texture mapping techniques feature rendering texture for a given virtual object using a plurality of composite textures, each formed by blending collapsible texture layers. Texture coordinates in texture space are derived using information determined at the time of surface mesh generation. The invention features dynamic texture allocation and deallocation, allowing a user to interactively modify the shape of a painted, three-dimensional model. Finally, the invention features an architecture for combined graphical rendering and haptic rendering of a virtual object, allowing a user to experience force feedback during the painting of the object in object space.
Claims What is claimed is: 1. A method of graphically rendering a virtual object, the method comprising the steps of: (a) using an index corresponding to each of a plurality of jacks of a voxel-based virtual object to identify texture elements for which surface elements of the virtual object are mapped; (b) generating texture coordinates of the identified texture elements in a texture space; and (c) dividing an object space comprising at least a portion of the virtual object into a plurality of jack blocks each comprising a plurality of jacks, wherein step (b) comprises generating texture coordinates of texture elements to which surface elements within each jack of each jack block are mapped. 2. The method of claim 1, wherein the index corresponds to one of a known plurality of surface element configurations produced during mesh generation. 3. The method of claim 1, wherein the index is a marching cubes index or a marching tetrahedra index. 4. The method of claim 1, wherein the texture space comprises a plurality of texture regions. 5. The method of claim 4, further comprising the steps of: (d) binding to a graphics application a blended texture corresponding to one of the plurality of texture regions; and (e) transmitting to the graphics application the texture coordinates of the texture elements of the blended texture. 6. A method of graphically rendering a virtual object, the method comprising the steps of: (a) using an index corresponding to each of a plurality of jacks of a voxel-based virtual object to identify texture elements for which surface elements of the virtual object are mapped; and (b) generating texture coordinates of the identified texture elements in a texture space, wherein step (a) comprises using a first lookup table to determine to which of a plurality of texture elements a surface element is mapped. 7. The method of claim 6, wherein step (a) comprises using a second lookup table to determine to which of a plurality of positions within a texture element a surface element is mapped. 8. The method of claim 6, further comprising the step of creating the first lookup table. 9. A method of graphically rendering a virtual object, the method comprising the steps of: (a) using an index corresponding to each of a plurality of jacks of a voxel-based virtual object to identify texture elements for which surface elements of the virtual object are mapped; and (b) generating texture coordinates of the identified texture elements in a texture space, wherein the texture elements are quadrilaterals and the surface elements are triangles, wherein step (a) comprises assigning to a quadrilateral texture element two triangular surface elements that share a common edge. 10. The method of claim 9, wherein step (a) comprises assigning either one or two triangular surface elements to a quadrilateral texture element. 11. The method of claim 1, wherein the surface elements of the virtual object are components of a triangle mesh generated for the virtual object using at least one of a marching cubes algorithm and a marching tetrahedra algorithm. 12. An apparatus for graphically rendering a virtual object, the apparatus comprising: a memory for storing code that defines a set of instructions; and a processor for executing the set of instructions to: (a) use an index corresponding to each of a plurality of jacks of a voxel-based virtual object to identify texture elements for which surface elements of the virtual object are mapped; (b) generate texture coordinates of the identified texture elements in a texture space, wherein the texture space comprises a plurality of texture regions; (c) bind to a graphics application a blended texture corresponding to one of the plurality of texture regions; and (d) transmit to the graphics application the texture coordinates of the texture elements of the blended texture. 13. The apparatus of claim 12, wherein the index corresponds to one of a known plurality of surface element configurations produced during mesh generation. 14. The apparatus of claim 12, wherein the index is a marching cubes index or a marching tetrahedra index. 15. An apparatus for graphically rendering a voxel-based virtual object, the apparatus comprising: a memory for storing code that defines a set of instructions; and a processor for executing the set of instructions to: (a) divide an object space comprising at least a portion of the voxel-based virtual object into a plurality of jack blocks each comprising a plurality of jacks; (b) use an index corresponding to each of the plurality of jacks of the voxel-based virtual object to identify texture elements for which surface elements of the virtual object are mapped; and (c) generate texture coordinates of the identified texture elements to which surface elements within each jack of each jack block are mapped. 