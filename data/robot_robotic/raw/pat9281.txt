A method and apparatus for controlling and providing force feedback using an interface device manipulated by a user. A microprocessor is provided local to the interface device and reads sensor data from sensors that describes the position and/or other information about a user object moved by the user, such as a joystick. The microprocessor controls actuators to provide forces on the user object and provides the sensor data to a host computer that is coupled to the interface device. The host computer sends high level host commands to the local microprocessor, and the microprocessor independently implements a local reflex process based on the high level command to provide force values to the actuators using sensor data and other parameters. A provided host command protocol includes a variety of different types of host commands and associated command parameters. By providing a relatively small set of high level host commands and parameters which are translated into a panoply of forces, the protocol further shifts the computational burden from the host computer to the local microprocessor and allows a software developer to easily create force feedback applications.
Claims What is claimed is: 1. An interface device for use with a host computer displaying a graphical environment, said host computer updating said graphical environment in response to user manipulation of said interface device and commanding force feedback sensations utilizing said interface device in response to said manipulation and in coordination with events within said graphical environment, said interface device comprising: a user manipulatable object grasped by a user; a support mechanism which supports said user manipulatable object with respect to an origin while allowing a plurality of degrees of freedom in the motion of said user manipulatable object with respect to said origin; an actuator coupled to said user manipulatable object for providing a force resistance to motion of said user manipulatable object along at least one of said degrees of freedom with respect to said origin, said resistance to motion generated in response to commands from said host computer and in coordination with said graphical environment; a sensor outputting a locative signal responsive to and corresponding with manipulation of said user manipulable object along at least said degree of freedom in which said resistance is provided; a user adjustable switch apparatus outputting a state signal representing the state of said switch apparatus; a local microprocessor separate from said host computer, coupled to said host computer by a communication interface and coupled to said actuator, said sensor, and to said user adjustable switch, said local microprocessor executing a local process in parallel with host execution of said graphical environment, said local process involving the execution of a plurality of local routines, wherein said local process executed by said local microprocessor is stored in local memory coupled to said local microprocessor, wherein said local process enables communication between said interface device and said host computer, decodes commands sent by said host computer to said interface device over said communication interface, controls said actuator in response to at least one decoded command received from said host computer, wherein said control of said actuator is coordinated with an event occurring in said parallel host computer execution of said graphical environment, thereby locally creating a feel sensation that corresponds with a relevant displayed event within said graphical environment, reports a representation of said locative signal to said host computer, wherein said host computer updates said parallel execution of said graphical environment in response to said representation of said locative signal, and reports a representation of said state signal to said host computer, wherein said host computer updates said parallel execution of said graphical environment in response to said switch state, and wherein a plurality of host commands are received by said local microprocessor over said communication interface; and a plurality of command routines stored in memory local to said microprocessor, wherein particular ones of said command routines are executed in response to particular ones of said received host commands, wherein at least one of said host commands causes execution of a command routine for reporting data from said local microprocessor to said host computer, at least one of said host commands causes the execution of a force routine, said force routine being a command routine that causes said force generator to produce a resistance to motion of said user object along at least one of said degrees of freedom. 2. An interface device as recited in claim 1 wherein at least one of said host commands causes the execution of a force routine that causes said actuator to remove a resistance to motion of said user object along at least one of said degrees of freedom. 3. An interface device as recited in claim 1 wherein said host commands are transferred to said local microprocessor using a force feedback command protocol, said force feedback command protocol being comprised of a plurality of discrete host commands, each of which includes a command identifier and at least one of which includes at least one command parameter. 4. An interface device as recited in claim 3 wherein said microprocessor implements one of a plurality of force routines selected in accordance with said command identifier and said command parameters of a received host command, and wherein said microprocessor locally produces a force feedback sensation to said user by outputting command signals to said actuator in accordance with said force routine, wherein said command signals to said actuator are output in response to said received host command and are independent of further commands from said host computer during a period of time, thereby freeing said host computer to perform other tasks. 5. An interface device as recited in claim 4 wherein said at least one command parameter includes a magnitude parameter determining a magnitude of said force to be output by said actuator. 6. An interface device as recited in claim 4 said control of said actuator is performed in accordance said locative signal. 7. An interface device as recited in claim 6 wherein said at least one command parameter includes a duration parameter determining how long said force output by said actuator is in effect. 8. An interface device as recited in claim 4 wherein said at least one command parameter includes a direction parameter determining the direction and degrees of freedom of said force output by said actuator. 9. An interface device as recited in claim 6 wherein said at least one command parameter includes button parameters which designate a button coupled to said processor and determine a magnitude, direction, and duration of a force output by said actuators when said button is pressed by said user. 10. An interface device as recited in claim 4 wherein said host computer and said processor are coupled together by a serial interface. 11. An interface device as recited in claim 10 wherein said serial interface includes a Universal Serial Bus interface. 12. An interface device as recited in claim 4 further including a local clock accessible to said microprocessor for providing said microprocessor with a timing signal used in said local process, wherein said control of said actuator is performed in accordance with timing data derived from said local clock. 13. An interface device as recited in claim 4 wherein at least one command parameter defines a dead-band region within range of motion of said user object, wherein forces resulting from execution of a particular force routine are to be reduced to approximately zero when said user object is within said dead-band region. 14. An interface device as recited in claim 12 wherein at least one command parameter defines the frequency of a periodic signal used to modulate forces output by said actuator in accordance with a particular force routine. 15. An interface device as recited in claim 4 wherein at least one of said command parameters defines at least one axis to which a particular force routine is to be applied. 16. An interface device as recited in claim 4 wherein at least one of said command parameters defines at least one degree of freedom in which a particular force routine is to be applied. 17. An interface device as recited in claim 4 wherein multiple force routines are executed simultaneously in response to multiple host commands using multi-tasking on said microprocessor. 18. An interface device as recited in claim 4 wherein force parameters are derived from said command parameters and stored in said local memory, each of said force parameters specifying a value for a particular direction in a degree of freedom of said user manipulatable object. 19. An interface device as recited in claim 11 wherein at least a portion of power used to operate said interface device is drawn from said Universal Serial Bus. 20. An interface device as recited in claim 19 wherein all power drawn to control said actuator is drawn from said Universal Serial Bus. 21. An interface device as recited in claim 5 wherein said magnitude parameter is represented as a percentage of the maximum force capability of the interface device. 22. An interface device as recited in claim 7 wherein a duration parameter value that is zero or negative is used as a flag to indicate that microprocessor should perform said force routine for an indefinite period of time until told to stop by a subsequent host command. 23. An interface device as recited in claim 4 wherein at least one of said command parameters define if a given force sensation should be output uni-directionally or bi-directionally in said degree of freedom. 24. An interface device as recited in claim 3 wherein said host commands provided in at least two groups of commands including background conditions and overlaid effects, wherein said conditions am associated with one class of force sensations generated by said interface device and said effects are associated with a different class of force sensations generated by said interface device. 25. An interface device as recited in claim 24 wherein background conditions dictate physical force characteristics of said interface device including stiffness and damping forces output when said user moves said user manipulatable object. 26. An interface device as recited in claim 25 wherein said overlaid effects dictate time varying sensations, said time varying sensations including vibrations. 27. An interface device as recited in claim 3 wherein said force routines are provided in at least two groups of force routines including background condition routines and overlaid effect routines, wherein said background condition routines control said actuator as a function of said locative signal and said effect routines control said actuator as a function of time. 28. An interface device as recited in claim 4 wherein at least one command parameter defines a stiffness of a simulated spring resistance felt by said user when said user manipulatable object is moved in a first direction along a specified degree of freedom and another command parameter defines the stiffness of a simulated spring resistance felt by said user when said user manipulatable object is moved in a second direction, opposite to said first direction, along said specified degree of freedom. 29. An interface device as recited in claim 4 wherein at least one command parameter defines a damping of a drag resistance output by said actuator when said user manipulatable object is moved with a positive velocity along a degree of freedom and another command parameter defines a damping of a drag resistance output by said actuator when said user manipulatable object is moved with a negative velocity along said degree of freedom. 30. An interface device as recited in claim 29 where said damping parameter is represented as a percentage of a maximum damping capability of said interface device. 31. An interface device as recited in claim 28 wherein said stiffness parameter is represented as a percentage of a maximum stiffness capability of said interface device. 32. An interface device as recited in claim 4 wherein a host command includes associated command parameters for positive damping, negative damping, positive stiffness, and negative stiffness. 33. An interface device as recited in claim 32 wherein said host command includes at least one associated command parameter defining a dead-band region. 34. An interface device as recited in claim 32 wherein said single host command includes at least one associated command parameter defining a saturation level for said host command. 35. An interface device as recited in claim 32 wherein said single host command includes at least one associated command parameter defining an offset for an origin location defined by said host command. 36. An interface device as recited in claim 8 wherein said actuator is a first actuator and further comprising a second actuator, each of said actuators providing force in a separate degree of freedom, and wherein said direction parameter represents an angle in a two dimensional plane defined by said two degrees of freedom. 37. An interface device as recited in claim 36 wherein said microprocessor distributes a commanded force among said two actuators based on said angle. 38. An interface device as recited in claim 14 wherein at least one command parameter defines a shape of said periodic signal. 39. An interface device as recited in claim 38 wherein said shape is selected from one of the following wave types: square wave, sine wave, and triangle wave. 40. An interface device as recited in claim 4 wherein said command protocol includes a host command for clearing parameters used by said microprocessor. 41. An interface device as recited in claim 3 wherein a sequence of command parameters is provided to said microprocessor, said command parameters collectively representing a digitized force profile, wherein each value in said sequence of command parameters represents a force level to be applied to said actuator for a given time interval. 42. An interface device as recited in claim 41 wherein at least one of said command parameters defines a sampling interval used to dictate an output rate of said force profile values. 43. An interface device as recited in claim 41 wherein said force profile is stored in said memory local to said microprocessor and applied to said actuator by said microprocessor in response to said state signal provided by said switch. 44. A method for interfacing a force feedback interface device manipulated by a user with a host computer system, the method comprising: providing a user manipulable object included in said force feedback interface device, said object having a degree of freedom; sensing positions of said user manipulable object along said degree of freedom with a sensor and producing electrical sensor signals therefrom; updating game or simulation software implemented by said host computer system in accordance with said position signals; utilizing a microprocessor local to said user manipulable object to communicate with said host computer system to provide said electrical sensor signals to said host computer system and to receive a host command from said host computer system, said host command including a button parameter instructing said microprocessor to read input from a designated button and generate a force in response to said designated button being activated by said user; creating a force on said object along said degree of freedom independently utilizing said microprocessor and said host command to control an actuator coupled to said user manipulable object, including: selecting a routine by said microprocessor in accordance with said best command; and outputting processor force commands from said microprocessor to said actuator utilizing said routine and said electrical sensor signals. 45. A method as recited in claim 44 wherein said command parameter is a magnitude parameter for controlling a magnitude of said force output by said actuator. 46. A method as recited in claim 45 wherein said command parameter is a duration parameter for controlling the time duration of said force applied to said user manipulable object. 47. A method as recited in claim 46 wherein said best command further includes a command parameter that is a deadband parameter for indicating the size of a deadband region about an origin position of said user object, wherein said force is not applies to said user object in said deadband region. 48. An interface device for use with a host computer displaying a graphical environment and updating said graphical environment in response to user manipulation of said interface device, said host computer commanding force feedback sensations in response to said manipulations and in coordination with events within said graphical environment, said interface device comprising: a user manipulatable object gasped by a user; a support mechanism which supports said user manipulatable object with respect to an origin while allowing a plurality of degrees of freedom in the motion of said user manipulatable object with respect to said origin; an actuator coupled to said user manipulatable object for providing a force on said user manipulatable physical object in at least one of said degrees of freedom with respect to said origin, said force generated in response to commands from said host computer and in coordination with interaction among displayed objects within said graphical environment; a sensor providing a locative signal responsive to and corresponding with manipulation of said user manipulatable object along said degree of freedom in which said force is provided; a user adjustable switch apparatus providing a state signal representing a state of said switch apparatus; a device microprocessor separate from said host computer, coupled to said host computer by a communication interface and coupled to said actuator, said sensor, and to said user adjustable switch, said device microprocessor executing a local process in parallel with host generation of said graphical environment, said local process involving the execution of a plurality of local routines, wherein said local process executed by said local microprocessor is stored in a local memory accessible by said local microprocessor, wherein said local process enables bi-directional communication between said interface device and said host computer using a force feedback command protocol, said force feedback command protocol including a plurality of discrete host commands, decodes commands sent by said host computer to said interface device over said communication interface, controls said actuator in response to at least one decoded command received from said host computer, wherein said control of said actuator is coordinated with an event occurring in the simultaneous host computer generation of said graphical environment, thereby locally creating a feel sensation that corresponds perpetually with a relevant displayed event within said graphical environment, monitors said locative signal, stores a representation of said locative signal within said local memory, and reports a representation of said locative signal to said host computer, wherein said host computer updates said parallel execution of said graphical environment in response to said representation of said locative signal, and monitors said state signal and reports a representation of said state signal to said host computer, wherein said host computer updates said parallel execution of graphical environment in response to said switch state. 49. A force feedback interface device as recited in claim 48 wherein said host command instructs said microprocessor to select a restoring force routine to provide restoring forces on said user object in a direction toward an origin position of said user object. 50. A force feedback interface device as recited in claim 49 wherein said restoring forces are constant in magnitude when said user object is positioned outside a region near an origin position of said user object, and wherein said restoring forces are near to zero within said region near said origin position. 51. A force feedback interface device as recited in claim 48 wherein said host command instructs said processor to select a vibration routine to provide vibration forces on said user object. 52. A force feedback interface device as recited in claim 51 wherein said host command includes at least one command parameter to control a frequency and a magnitude of said vibration forces. 53. A device as recited in claim 48 wherein each of said plurality of discrete host commands includes a command identifier, and wherein at least one of said discrete host commands includes at least one command parameter. 54. A device as recited in claim 53 wherein said local process includes a button reflex process wherein said device microprocessor controls said force output from said actuator in response to said user manually changing said state of said user adjustable switch as indicated by a change in said state signal. 55. A device as recited in claim 54 wherein said button reflex process causes said actuator to apply a force on said user object for an interval of time after said state of said switch is changed, said interval of time specified by at least one of said decoded host commands. 56. A device as recited in claim 55 wherein said force has a magnitude and direction and is constantly applied during said interval of time, said magnitude and direction being specified by at least one of said decoded host commands. 57. A device as recited in claim 55 wherein said force is a periodic force of a magnitude and period specified by at least one of said decoded host commands. 58. A device as recited in claim 55 wherein said force having a magnitude that varies with time, said force derived from a digitized force profile stored in memory accessible to said device microprocessor. 59. A device as recited in claim 54 wherein said button reflex process is established in response to a host command associated with said button reflex process, said host command including at least one command parameter indicating which of a plurality of buttons coupled to said interface device should be used to trigger said force associated with said button reflex process. 60. A device as recited in claim 54 wherein said graphical environment is a video game and wherein said change in said state of said switch causes said host computer to cause a simulated weapon within said video game to fire. 61. A device as recited in claim 60 wherein said force generated by said button reflex process is used to output a recoil force sensation associated with said firing of said weapon within said video game. 62. A device as recited in claim 54 further comprising at least one additional user adjustable switch, wherein said local process includes multiple button reflex processes such that said microprocessor controls force output from said actuator according to a first process in response to a user adjusting a first switch, and wherein said microprocessor controls force output from said actuator according to a different process in response to said user adjusting a second switch. 63. A device as recited in claim 62 wherein predetermined relationships between each of said switches and associated microprocessor control processes are derived from said host commands and stored in memory local to said microprocessor. 64. A device as recited in claim 59 wherein at least one of said host commands includes at least one command parameter indicating the interval of time said force is to be applied by said actuator. 65. A device as recited in claim 54 wherein when said switch is held in a particular state by said user for a specified time interval after outputting said force, said force is triggered again. 66. A device as recited in claim 65 wherein said time interval is an auto-fire rate intended to correlate with a firing rate of a simulated automatic weapon within a video game implemented by said host computer. 67. A device as recited in claim 48 wherein said local process computes position coordinates of said user manipulatable object from said locative signal, wherein said position coordinates are reported to said host computer over said communication interface. 68. A device as recited in claim 67 wherein said local process computes an orientation of said user object from said locative signal, wherein values representing said orientation are reported to said host computer over said communication interface. 69. A device as recited in claim 53 wherein said local process includes a groove process wherein actuators are controlled by said local microprocessor so that said user object is positioned within a simulated groove, said groove process causing said force output by said actuators to oppose user manipulations that cause said user object to move outside of boundaries of said groove. 70. A device as recited in claim 69 wherein said groove process is associated with a host command that includes a command parameter specifying a dimension of said simulated groove. 71. A device as recited in claim 69 wherein said groove process is associated with a host command that includes a command parameter for a snap-out distance, wherein said snap-out distance represents a distance of penetration into a boundary of said groove such that, when said snap-out distance is exceeded by said user object, said groove process causes said force output by said actuators to be reduced, thereby allowing said user object to move with less resistance past said boundary and creating a feel sensation for said user of moving out of said simulated groove. 72. A device as recited in claim 69 wherein said groove process is coordinated with host computer generation of said graphical environment, said graphical environment including a cursor interacting with a graphical environment, wherein a location of said cursor within said graphical environment is controlled by said user manipulation of said user manipulatable object, said coordination between said local groove process and said host graphical display being such that a restriction of motion of said user manipulatable object resulting from said groove process prevents user from freely moving said cursor outside of a displayed graphical region. 73. A device as recited in claim 72 wherein said displayed graphical region is a scroll-bar. 74. A device as recited in claim 53 wherein said local process includes a barrier process wherein said actuators are controlled by said device microprocessor to output a force opposing user manipulations of said user object that cause said user object to move past a defined location of said barrier. 75. A device as recited in claim 74 wherein said barrier process is associated with a host command that includes a command parameter specifying a magnitude of hardness of said barrier. 76. A device as recited in claim 74 wherein said barrier process is associated with a host command that includes a command parameter specifying a location of said barrier within said graphical environment. 77. A device as recited in claim 74 wherein said barrier process is associated with a host command that includes a command parameter specifying a penetration distance, wherein said penetration distance represents a distance past said location of said barrier, such that when said distance is exceeded by said user object, said barrier process reduces force output by said actuators, thereby allowing said user object to move past said barrier with less resistance and creating a feel sensation for said user of breaking through said simulated barrier. 78. A device as recited in claim 74 wherein said barrier process is coordinated with host computer generation of said graphical environment, said graphical environment including a cursor interacting with a graphical user interface, wherein the location of said cursor within said graphical user interface is controlled by said user manipulation of said user manipulatable object, said coordination between said barrier process and said host graphical display being such that restriction of motion of said user manipulatable object results from said barrier process and prevents said user from freely moving said cursor outside of a displayed graphical region. 79. A device as recited in claim 53 wherein said local process includes a texture process wherein said actuator is controlled by said local microprocessor to create a spatially varying feel sensation as said user manipulatable object is moved in space. 80. A device as recited in claim 79 wherein said texture process is associated with a host command that includes a command parameter specifying a magnitude of force output by said texture process. 81. A device as recited in claim 79 wherein said texture process is associated with a host command that includes a command parameter specifying a spatial frequency of forces output by said texture process. 82. A device as recited in claim 53 wherein said local process includes a repulsive field process wherein said actuator is controlled by said local microprocessor to output a force repelling motion of said user manipulatable object toward a designated field origin located in said graphical environment. 83. A device as recited in claim 82 wherein said repulsive field process is associated with a host command that includes a command parameter specifying a magnitude of said repelling force. 84. A device as recited in claim 82 wherein said repulsive field process is associated with a host command that includes a command parameter representing a location of said field origin. 85. A device as recited in claim 53 wherein said local process includes an attractive field process wherein said actuator is controlled by said local microprocessor to output a force attracting motion of said user manipulatable towards a designated field origin located in said graphical environment. 86. A device as recited in claim 85 wherein said attractive field process is associated with a host command that includes a command parameter specifying a magnitude of said field. 87. A device as recited in claim 85 wherein said attractive field process is associated with a host command that includes a command parameter representing a location of the field origin. 88. A device as recited in claim 53 wherein said local process includes a object collision process wherein said actuator is controlled by said local microprocessor to simulate a feel of a collision between an incident object and a compliant object having a location controlled by motion of said user manipulatable object. 89. A device as recited in claim 88 wherein said object collision process is associated with a host command that includes a command parameter representing a mass of said incident object. 90. A device as recited in claim 88 wherein said object collision process is associated with a host command that includes a command parameter representing an incident velocity of said incident object. 91. A device as recited in claim 88 wherein said collision process is a paddle process, said incident object is a ball object, and said compliant object is a flexible paddle object, wherein said actuator is controlled by said local microprocessor to simulate the feel of a dynamic interaction between said incident ball object and said user-controlled flexible paddle object. 92. A device as recited in claim 91 wherein said paddle process is associated with a host command that includes a command parameter representing a compliance of said flexible paddle object. 93. A device as recited in claim 91 wherein said paddle process is associated with a host command that includes a command parameter representing a mass of said ball object. 94. A device as recited in claim 88 wherein said local process updates said host computer during said collision process with intermediate values representing a location of said incident object during said collision. 95. A device as recited in claim 88 wherein, at completion of said collision process, said local process reports final values to said host computer representing a velocity of said incident object resulting from said collision. 96. A device as recited in claim 48 wherein said local memory includes non volatile memory, and wherein data is stored in said non volatile memory that identifies the model and capabilities of said interface device. 97. A device as recited in claim 96 wherein said data indicates a number of degrees of freedom in which said user object can be moved. 98. A device as recited in claim 96 wherein said data indicates a resolution of locative data reported by said device. 99. A device as recited in claim 96 wherein said data identifies a vendor of said interface device. 100. A device as recited in claim 48 wherein said communication interface is a bus shared by multiple devices and wherein data sent from said host to said local microprocessor across said bus is encrypted in data packets. 101. A device as recited in claim 100 wherein said interface device may request and receive a unique identifier from said host and store said identifier in said local memory, such that when a data packet is received from said host, said local process can check if said packet includes said identifier and thereby ensure that said data packet is intended for said device and not a different device sharing said bus. 102. An interface device as recited in claim 56 wherein said device further includes a dead-man safety switch that disconnects available power from said actuator when said user manipulatable object is not being manually engaged by said user, said safety disconnect being performed in hardware and not being dependent upon any execution of software by said local microprocessor. 103. An interface device for use with a host computer displaying a graphical simulation, said host computer updating said graphical simulation in response to user manipulation of said interface device and commanding force feedback sensations in response to said manipulations and in coordination with events within said graphical simulation, said interface device comprising: a user manipulatable object gasped by a user; a support mechanism which supports said user manipulatable object with respect to an origin while allowing a plurality of degrees of freedom in the motion of said user manipulatable object with respect to said origin; an actuator coupled to said user manipulatable object for providing resistance to motion of said user manipulatable physical object in at least one of said degrees of freedom with respect to said origin, said resistance to motion generated in response to host commands from said host computer and in coordination with displayed graphical simulation; a local microprocessor separate from said host computer, said local microprocessor executing a local process in parallel with host execution of said graphical simulation, said local process involving the execution of a plurality of local routines; a communication interface coupling said local microprocessor to said host computer, wherein a PC game port included as part of said communication interface between said host computer and said local microprocessor; a sensor apparatus coupled to said device microprocessor, said sensor apparatus providing said device microprocessor with a locative signal responsive to and corresponding with manipulation of said user manipulatable object in at least said degree of freedom in which said resistance is provided; and a user adjustable switch apparatus electrically coupled to said device microprocessor, said switch apparatus providing a state signal to said device microprocessor representing the state of said switch; wherein said local process is executed by said device microprocessor stored in local memory coupled to said local microprocessor, said local process for enabling communication between said interface device and said host computer, decoding host commands sent by said host computer to said interface device over said communication interface, controlling said actuator in response to at least one of said decoded commands received from said host computer, wherein said control of said actuator is coordinated with an event occurring in parallel host computer execution of said graphical simulation, reporting a representation of said locative signal to said host computer, and reporting a representation of said state signal to said host computer. 104. An interface device as recited in claim 103 further including a force feedback command protocol for transferring host commands to said local microprocessor, said force feedback command protocol being comprised of a plurality of discrete host commands, each of which includes a command identifier and at least one of which includes one or more command parameters. 105. An interface device as recited in claim 104 wherein said microprocessor implements one of a plurality of force routines selected in accordance with said command identifier and said command parameters associated with a received host command, wherein said microprocessor locally produces a force feedback sensation in accordance with said force routine by modulating said actuator, said local modulation of said actuator being inflated in response to said received host command and performed by said microprocessor independently of further interaction from said host computer during a period of time, thereby freeing said host to perform other tasks. 106. An interface device as recited in claim 103 wherein said interface communication interface includes a Universal Serial Bus interface. 107. Au interface device as recited in claim 106 wherein power used to operate said interface device is drawn from said Universal Serial Bus. 108. An interface device as recited in claim 104 wherein at least one of said command parameters defines a stiffness of a simulated spring resistance felt by said user when said user manipulatable object is moved with respect to an origin position of said user manipulatable object. 109. A device as recited in claim 103 wherein said local process includes a button reflex process wherein said microprocessor controls output force of said actuator in response to said user manually changing said state of said user adjustable switch. 110. A device as recited in claim 109 wherein said button reflex process causes said actuator to apply a force on said user object for an interval of time, said interval of time specified by one of said host commands. 111. A device as recited in claim 110 wherein said button reflex process is established in response to a host command associated with said button reflex process, said command including at least one command parameter indicating which of a plurality of buttons should be used to trigger said force associated with said button reflex process. 