One or more embodiments provide Common Industrial Protocol (CIP) based time synchronization systems and methods. The CIP Sync solution can be part of Ethernet/IP and can be based on standard UDP (User Datagram Protocol) and/or IEEE 1588 (Time Synchronization) Ethernet technology. According to an embodiment is a system that compensates for step changes in a master clock.
Claims What is claimed is: 1. A system that enables time synchronization, comprising: a timestamp component that captures timestamps and offsets from at least one network node; and a time synch component that identifies step changes to at least one master clock and synchronizes a local clock time of the at least one network node with the identified step change. 2. The system of claim 1, the timestamp component stores timestamps and offsets captured from at least one source node and at least one destination node. 3. The system of claim 1, utilizing at least one of American Inter Range Instrumentation Group (IRIG-B), Network Time Protocol (NTB), Telecommunications Working Group (TCWG), Global Positioning System (GPS), Precision Time Protocol (PTP) and Flooding Time Synchronization Protocol (FTSP). 4. The system of claim 1, each network node maintains a local time independent from other nodes and all nodes maintain a common understanding of system time. 5. The system of claim 4, the time synch component further determines whether to adjust local clocks to system time based on data from the timestamp component. 6. The system of claim 1, further comprising a database that stores at least one of the local clock times, the system time, at least one system event, at least one fault occurrence, a grandmaster clock identification, and a master clock identification. 7. The system of claim 1, the timestamp component stores the timestamps and offsets in a database utilizing a Common Industrial Protocol (CIP) Network. 8. The system of claim 7, the common industrial protocol is at least one of: DeviceNet, ControlNet, EtherNet/IP, EtherCAT, Profinet, SERCOS, CAN, Precision Time Protocol and Modbus. 9. The system of claim 1, the at least one master clock is at least one of a microprocessor, an embedded controller, a programmable logic controller, a programmable automation controllers, a switch, an I/O device, a standalone GPS, an integrated GPS, a NTP time keepers, machine clocks and computer clocks. 10. The system of claim 1, the at least one local clock is at least one of a microprocessor, an embedded controller, a programmable logic controller, a programmable automation controllers, a switch, an I/O device, a standalone GPS, an integrated GPS, a NTP time keepers, machine clocks and computer clocks. 11. The system of claim 1, a communication path between nodes is at least one of: internet, DeviceNet, ControlNet, CANopen, hard-wire networks, wireless, ARCNET, Token Ring, FDDI, local area network (LAN), wide area network (WAN), EthernetIP and Ethernet. 12. The system of claim 1, further comprising an interface switch that receives communications utilizing at least one of TCP/IP data packets, MSMQ, MQTT, MQ, JMS, RMI, inter-process communication and web services. 13. The system of claim 1, the time synch component can provide an indication of system time synchronization utilizing at least one of: a flashing light, a sound, an e-mail, a page and a voice message. 14. The system of claim 1, further comprising a group startup sequence that allows a group of devices to synchronize respective clocks to the master clock before staffing an application that depends on the system time. 15. A method for enabling node timestamp time synchronization with a master clock step change employing timestamps received at a single node, comprising: receiving a first timestamp associated with a first offset and a second timestamp associated with a second offset; calculating a compensated timestamp based in part of the first timestamp and associated offset and the second offset; determining if a step change has occurred; and selectively updating the second timestamp and associated second offset if a step change has occurred. 16. The method of claim 15, determining if a step change has occurred further comprising: comparing the second offset to the first offset; and determining a difference between the first offset and the second offset. 17. The method of claim 15, selectively updating the second timestamp and associated offset synchronizes the second timestamp and associated second offset with a master clock. 18. The method of claim 15, further comprising storing the first timestamp and associated first offset in a database. 19. The method of claim 18, the first timestamp and associated first offset are stored in a database based on at least one of a content, a data size, a data relevance, a data priority, a data cost, a future use, and a data utility. 20. A method for compensation of timestamps between a source node and a destination node, comprising: receiving at a destination node a source offset and an associated timestamp from a source node; comparing the source offset to an offset previously received at the destination node to determine a step change; and selectively adjusting the received timestamp and associated offset based on the determined step change. 