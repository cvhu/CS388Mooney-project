A method and apparatus for controlling a storage library through a network. A request originating from the network is received, wherein the request is in a protocol and includes a command for the storage library. A type for the request is identified. The request in the protocol is translated into a format used by the storage library to form a type specific request for the storage library in response to the type corresponding to a type for the storage library. The type specific request is sent to the storage library.
Claims What is claimed is: 1. A method for controlling a robotic storage library through a network, the method comprising: receiving a request originating from the network, wherein the request is in a protocol and includes a command for the robotic storage library; identifying a type for the request; responsive to the type corresponding to a storage library type for the robotic storage library, translating the request in the protocol into a format used by the robotic storage library to form a type specific request for the robotic storage library; and sending the type specific request to the robotic storage library. 2. The method of claim 1, wherein the robotic storage library is an automated cartridge system. 3. The method of claim 1, wherein the protocol is a markup language protocol. 4. The method of claim 3, wherein the markup language protocol is one of an extensible markup language protocol and a hypertext markup language protocol. 5. The method of claim 1, wherein the receiving, identifying, translating, and sending steps are performed in a server. 6. The method of claim 1, wherein the robotic storage library is a first robotic storage library and further comprising: responsive to the request corresponding to a storage library type for a second robotic storage library, translating the request into a format used by the second robotic storage library to form a type specific request for the second robotic storage library; and sending the type specific request for the second robotic storage library to the second robotic storage library. 7. The method of claim 1, wherein the request includes an identifier used to identify a particular robotic storage library for the request. 8. The method of claim 7, wherein the identifier is used to identify the type for the request. 9. The method of claim 6, wherein the first robotic storage library and the second robotic storage library are one of a same type and a different type. 10. The method of claim 1, wherein the translating step is performed in a servlet incorporating an application programming interface for the robotic storage library. 11. The method of claim 10, wherein the servlet is a Java servlet. 12. The method of claim 10, wherein the application programming interface is one of a proprietary storage library and a small computer system interface based storage library. 13. The method of claim 1, wherein the robotic storage library is an automated cartridge system and the command is one of a command to mount a tape, a command to dismount a tape, a command to move a tape into the robotic storage library, a command to move a tape out of the automated cartridge system, a command to identify contents in the library, and a command to list device states for devices in the automated cartridge system, and a command to change device states for devices in the automated cartridge system to make the devices selectively available to a client. 14. The method of claim 1, wherein the request is received in response to a user input to a graphical user interface on a client connected to the network. 15. The method of claim 14, wherein the graphical user interface is a Web browser. 16. A method in a data processing system for processing a request, the method comprising: receiving the request at an interface to a network, wherein the request is formatted using a protocol and includes a command; identifying a interface to a robotic storage library for the command in the request; and generating a call to the interface using the request. 17. The method of claim 16, wherein the interface is an application program interface for the robotic storage library. 18. The method of claim 16, wherein the request is in an extensible markup language format. 19. A distributed data processing system comprising: a network; a robotic storage library connected to the network; and a server connected to the network, wherein the server receives a request from the network in which the request is in a protocol for transport over the network and includes an identification, identifies a type using the identification, transforms the request into a specific format for the robotic storage library in response to the type being associated with the robotic storage library to form a type specific request, and sends the request to the robotic storage library. 20. The distributed data processing system of claim 19, wherein the network is an Internet. 21. The distributed data processing system of claim 19, wherein the network is at least one of a local area network, an intranet, and a wide area network. 22. The distributed data processing system of claim 19, wherein the robotic storage library is an automated cartridge system. 23. The distributed data processing system of claim 19, wherein the robotic storage library is connected to the network by the server. 24. The distributed data processing system of claim 19, wherein the robotic storage library is a robotic tape library. 25. The distributed data processing system of claim 19, wherein the robotic storage library is a first robotic storage library and further comprising: a second robotic storage library connected to the network. 26. The distributed data processing system of claim 19, wherein the protocol is a markup language protocol. 27. The distributed data processing system of claim 26, wherein the markup language protocol is one of an extensible markup language protocol and a hypertext markup language protocol. 28. The distributed data processing system of claim 19 further comprising: a client connected to the network, wherein the client originates the request. 29. The distributed data processing system of claim 27, wherein the client includes: a control process, wherein the control process generates the request in the type for the robotic storage library; and an interface process, wherein the interface process translates the request into a format for transfer on the network to the server. 30. A data processing system for controlling a robotic storage library through a network, the data processing system comprising: receiving means for receiving a request originating from the network, wherein the request is in a protocol and includes a command for the robotic storage library; identifying means for identifying a type for the request; translating means responsive to the type corresponding to a storage library type for the robotic storage library, for translating the request in the protocol into a format used by the robotic storage library to form a type specific request for the robotic storage library; and sending means for sending the type specific request to the robotic storage library. 31. The data processing system of claim 30, wherein the robotic storage library is an automated cartridge system. 32. The data processing system of claim 30, wherein the protocol is a markup language protocol. 33. The data processing system of claim 32, wherein the markup language protocol is one of an extensible markup language protocol and a hypertext markup language protocol. 34. The data processing system of claim 30, wherein the receiving means, identifying means, translating means, and sending means are implemented in a server. 35. The data processing system of claim 30, wherein the robotic storage library is a first robotic storage library, wherein the translating means is a first translating means, and wherein the sending means is a first sending means and further comprising: second translating means responsive to the request corresponding to a storage library type for a second robotic storage library, for translating the request into a format used by the second robotic storage library to form a type specific request for the second robotic storage library; and second sending means for sending the type specific request for the second robotic storage library to the second robotic storage library. 36. The data processing system of claim 30, wherein the request includes an identifier used to identify a particular robotic storage library for the request. 37. The data processing system of claim 36, wherein the identifier is used to identify the type for the request. 38. The data processing system of claim 35, wherein the first robotic storage library and the second robotic storage library are one of a same type and a different type. 39. The data processing system of claim 30, wherein the translating means is implemented in a servlet incorporating an application programming interface for the robotic storage library. 40. The data processing system of claim 39, wherein the servlet is a Java servlet. 41. The data processing system of claim 39, wherein the application programming interface is one of a proprietary storage library and a small computer system interface based storage library. 42. The data processing system of claim 30, wherein the robotic storage library is an automated cartridge system and the command is of a command to mount a tape, a command to dismount a tape, a command move a tape into the robotic storage library, a command to move a tape out of the automated cartridge system, a command to identify contents in the library, and a command to list device states for devices in the automated cartridge system, and a command to change device states for devices in the automated cartridge system to make the devices selectively available to a client. 43. The data processing system of claim 30, wherein the request is received in response to a user input to a graphical user interface on a client connected to the network. 44. The data processing system of claim 43, wherein the graphical user interface is a Web browser. 45. A data processing system for processing a request, the data processing system comprising: receiving means for receiving the request at an interface to a network, wherein the request is formatted using a protocol and includes a command; identifying means for identifying a interface to a robotic storage library for the command in the request; and generating means for generating a call to the interface using the request. 46. The data processing system of claim 45, wherein the interface is an application program interface for the robotic storage library. 47. The data processing system of claim 45, wherein the request is in an extensible markup language format. 48. A computer program product in a computer readable medium for controlling a robotic storage library through a network, the computer program product comprising: first instructions for receiving a request originating from the network, wherein the request is in a protocol and includes a command for the robotic storage library; second instructions for identifying a type for the request; third instructions, responsive to the type corresponding to a storage library type for the robotic storage library, for translating the request in the protocol into a format used by the robotic storage library to form a type specific request for the robotic storage library; and fourth instructions for sending the type specific request to the robotic storage library. 49. A computer program product in a computer readable medium for processing a request, the computer program product in a computer readable medium comprising: first instructions for receiving the request at an interface to a network, wherein the request is formatted using a protocol and includes a command; second instructions for identifying a interface to a robotic storage library for the command in the request; and third instructions for generating a call to the interface using the request. 