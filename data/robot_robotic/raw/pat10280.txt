A Real-time Robotic Controller and Simulator (RRCS) with an MIMD-SIMD parallel architecture for interfacing with an external host computer provides a high degree of parallelism in computation for robotics control and simulation. A host processor receives instructions from, and transmits answers to, the external host computer. A plurality of SIMD microprocessors, each SIMD processor being an SIMD parallel processor, is capable of exploiting fine-grain parallelism and is able to operate asynchronously to form an MIMD architecture. Each SIMD processor comprises an SIMD architecture capable of performing two matrix-vector operations in parallel while fully exploiting parallelism in each operation. A system bus connects the host processor to the plurality of SIMD microprocessors and a common clock provides a continuous sequence of clock pulses. A ring structure interconnects the plurality of SIMD microprocessors and is connected to the clock for providing clock pulses to the SIMD microprocessors and provides a path for the flow of data and instructions between the SIMD microprocessors. The host processor includes logic for controlling the RRCS by interpreting instructions sent by the external host computer, decomposing the instructions into a series of computations to be performed by the SIMD microprocessors, using the system bus to distribute associated data among the SIMD microprocessors, and initiating activity of the SIMD microprocessors to perform the computations on the data by procedure call.
Claims Wherefore, having thus described our invention, what is claimed is: 1. A Real-time Robotic Controller and Simulator (RRCS) for interfacing with an external host computer and providing a high degree of parallelism in computations for robotic control and simulation in response to instructions from the external host computer, said Real-time Robotic Controller and Simulator comprising: a) host processor means for receiving instructions from the external host computer and for transmitting answers to the external host computer: b) a plurality of parallel SIMD processors, said SIMD processors operable asynchronously in an MIMD architecture, each said SIMD processor comprising a SIMD architecture capable of performing two matrix-vector operations in parallel while fully exploiting parallelism in each operation: c) a system bus connecting said host processor means to said plurality of SIMD processors: d) a common clock providing a continuous sequence of clock pulses: and, e) ring structure means interconnecting said plurality of SIMD processors and connected to said clock for providing said clock pulses to said SIMD processors and for providing a path for the flow of data and instructions between said SIMD processors; and wherein, f) said host processor means further comprises means for controlling the RRCS by interpreting instructions sent by the external host computer, decomposing said instructions into a series of computations to be performed by said SIMD processors, using said system bus to distribute associated data among said SIMD processors, and initiating activity of said SIMD processors to perform said computations on said data; and wherein, g) each said SIMD processor further comprises, g1) a single control unit including a program counter, a program memory, pipeline registers, and control and timing logic, said pipeline registers including provisions to receive instruction portions corresponding to an address field, an instruction field, and a control field, respectively, of instructions to be executed, g2) a control bus, g3) an address bus, g4) a data bus, g5) an instruction bus, g6) a memory, g7) a plurality of processor elements, g8) host interface means for interfacing between said host processor means, said control unit, said control bus, said address bus, said data bus, said instruction bus, and said memory, g9) means for obtaining said sequence of clock pulses from said ring structure means and for connecting it to said control unit and each of said processor elements, and g10) neighbor interface means for allowing each said SIMD processor to communicate with next adjacent SIMD processors along said ring structure means. 2. The Real-time Robotic Controller and Simulator (RRCS) of claim 1 wherein there are six said processor elements and wherein additionally: said control and timing logic includes logic for causing said processor elements to alternatively perform six independent primitive operations in parallel or form two groups of three processor elements to perform two basic (matrix-vector) operations in parallel. 3. The Real-time Robotic Controller and Simulator (RRCS) of claim 1 wherein there are six said processor elements and wherein additionally: said control and timing logic includes logic for causing all six said processor elements to form a single groups to exploit parallelism in matrix multiplication. 4. The Real-time Robotic Controller and Simulator (RRCS) of claim 1 wherein there are six said processor elements and wherein: in computing vector addition or scalar-vector multiplication by a group of said processor elements said control and timing logic includes logic for causing parallelism in the operation to be exploited by performing an independent addition or multiplication by each of said processor elements while the operation of three processor elements within a same group are synchronized. 5. The Real-time Robotic Controller and Simulator (RRCS) of claim 1 wherein there are six said processor elements and wherein: in computing matrix-vector multiplication or vector-cross-product by a group of three said processor elements said control and timing logic includes logic for causing parallelism to be exploited by the performing of three independent vector-dot products wherein said group of said processor elements is distinguished by global synchronization and sharing of common data. 6. The Real-time Robotic Controller and Simulator (RRCS) of claim 1 wherein said SIMD architecture of each said SIMD processor comprises plural processing elements comprising means for performing plural operations simultaneously within said SIMD processor. 7. The Real-time Robotic Controller and Simulator (RRCS) of claim 6 wherein said SIMD architecture of each said SIMD processor further comprises means for causing said processor elements to perform plural independent primitive operations simultaneously by respective plural groups of said processing elements. 8. The Real-time Robotic Controller and Simulator (RRCS) of claim 6 wherein said plural groups comprise one of: (a) six groups of one processor element each for performing six primitive operations simultaneously, and (b) two groups of three processor elements each for performing two three-dimensional operations simultaneously. 9. The Real-time Robotic Controller and Simulator (RRCS) of claim 1 wherein a basic synchronization mechanism of the RRCS is data driven but wherein additionally: said host processor means further comprises means for causing clock based synchronization among said SIMD processors. 10. A Real-time Robotic Controller and Simulator (RRCS) for interfacing with an external host computer and providing a high degree of parallelism in computations for robotic control and simulation in response to instructions from the external host computer, said Real-time Robotic Controller and Simulator comprising: a) host processor means for receiving instructions from the external host computer and for transmitting answers to the external host computer; b) a plurality of parallel SIMD processors, said SIMD processors further being able to operate asynchronously to form a MIMD architecture, each said SIMD processor capable of performing two matrix-vector operations in parallel while fully exploiting parallelism in each operation; c) ring structure means interconnecting said plurality of SIMD processors and connected to a common clock for providing clock pulses to said SIMD processors and for providing a path for the flow of data and instructions between said SIMD processors; d) each said SIMD processor comprising, d1) a single control unit including a program counter, a program memory, pipeline registers, and control and timing logic, said pipeline registers including provisions to receive instruction portions corresponding to an address field, an instruction field, and a control field, respectively, of instructions to be executed, d2) a control bus, d3) an address bus, d4) a data bus, d5) an instruction bus, d6) a memory, d7) a plurality of processor elements, d8) host interface means for interfacing between said host processor means, said control unit, said control bus, said address bus, said data bus, said instruction bus, and said memory. d9) means for obtaining said sequence of clock pulses from said ring structure means and for connecting it to said control unit and each of said processor elements, and d10) neighbor interface means for allowing each said SIMD processor to communicate with next adjacent SIMD processors along said ring structure means; e) a system bus connecting said host processor means to said plurality of SIMD processors; and f) said host processor means further comprises means for controlling the RRCS by interpreting instructions sent by the external host computer, decomposing said instructions into a series of computations to be performed by said SIMD processors, using said system bus to distribute associated data among said SIMD processors, and initiating activity of said SIMD processors to perform said computations on said data. 11. The Real-time Robotic Controller and Simulator (RRCS) of claim 10 wherein there are six said processor elements and wherein additionally: said control and timing logic includes logic for causing said processor elements to alternatively perform six independent primitive operations in parallel or form two groups of three processor elements to perform two basic (matrix-vector) operations in parallel. 12. The Real-time Robotic Controller and Simulator (RRCS) of claim 10 wherein there are six said processor elements and wherein additionally: said control and timing logic includes logic for causing all six said processor elements to form a single group to exploit parallelism in matrix multiplication. 13. The Real-time Robotic Controller and Simulator (RRCS) of claim 10 wherein there are six said processor elements and wherein: in computing vector addition or scalar-vector multiplication by a group of said processor elements said control and timing logic includes logic for causing parallelism in the operation to be exploited by performing an independent addition or multiplication by each of said processor elements while the operation of three processor elements within a same group are synchronized. 14. The Real-time Robotic Controller and Simulator (RRCS) of claim 10 wherein there are six said processor elements and wherein: in computing matrix-vector multiplication or vector-cross-product by a group of three said processor elements said control and timing logic includes logic for causing parallelism to be exploited by the performing of three independent vector-dot products wherein said group of said processor elements is distinguished by global synchronization and sharing of common data. 