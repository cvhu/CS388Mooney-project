A method for enhancing operational efficiency of a remote vehicle using a diagnostic behavior. The method comprises inputting and analyzing data received from a plurality of sensors to determine the existence of deviations from normal operation of the remote vehicle, updating parameters in a reference mobility model based on deviations from normal operation, and revising strategies to achieve an operational goal of the remote vehicle to accommodate deviations from normal operation. An embedded simulation and training system for a remote vehicle. The system comprises a software architecture installed on the operator control unit and including software routines and drivers capable of carrying out mission simulations and training.
Claims What is claimed is: 1. A method for implementing a retrotraverse software routine for a remote vehicle configured to communicate with an operator control unit when a control signal from the operator control unit is not received, the method comprising: executing the retrotraverse software routine, using a processor, including or in communication with a waypoint routine that maintains a list of time-stamped waypoints stored in a memory to cause the remote vehicle to be navigated according to the retrotraverse software routine, the time-stamped waypoints separated by at least a minimum difference in time and distance, the waypoint routine or the retrotraverse software routine generating a return path interconnecting at least two previously-traversed waypoints in reverse order of timestamps, wherein the remote vehicle is navigated successively to a next previous time-stamped waypoint in the list until a control signal is received from the operator control unit. 2. The method of claim 1, wherein the executing the retrotraverse software routine comprises automatically executing the retrotraverse software routine when communication with the operator control unit is lost. 3. The method of claim 1, further comprising recording a list of start time and end time pairs for each retrotraverse period of time to obtain a list of previously-performed retrotraverses for at least one of the waypoint routine and the retrotraverse software routine. 4. The method of claim 3, further comprising excluding waypoints recorded during the previously-performed retrotraverses from the retrotraverse software routine. 5. The method of claim 4, wherein excluding waypoints recorded during the previously-performed retrotraverses comprises excluding waypoints recorded between the start time and the end time pairs for each of the previously-performed retrotraverses. 6. The method of claim 3, further comprising excluding waypoints traversed during the previously-performed retrotraverses from the retrotraverse software routine. 7. The method of claim 1, further comprising: determining a lookahead vector to allow smooth navigation of the remote vehicle along an intended path of travel, and utilizing a lookahead vector in the retrotraverse software routine. 8. The method of claim 7, wherein the utilizing a lookahead vector comprises only utilizing the lookahead vector in the retrotraverse software routine when the lookahead vector lies within a predetermined distance of each of the waypoints along the intended path of travel. 9. The method of claim 7, further comprising avoiding taking shortcuts that bypass waypoints in the retrotraverse software routine when the lookahead vector is utilized. 10. The method of claim 7, further comprising utilizing a radius of interception in the retrotraverse software routine to determine whether the remote vehicle has reached one of the waypoints when the lookahead vector is utilized. 11. The method of claim 7, further comprising utilizing a perpendicular plane in the retrotraverse software routine to determine whether the remote vehicle has passed one of the waypoints when the lookahead vector is utilized. 12. The method of claim 1, further comprising navigating the remote vehicle along the return path according to the retrotraverse software routine. 13. The method of claim 12, wherein the navigating the remote vehicle along the return path comprises selecting a forward or backward direction to navigate the remote vehicle along the return path based on a determination of which direction requires the least rotation. 14. The method of claim 1, further comprising determining a position of the remote vehicle using odometry. 15. The method of claim 14, wherein the determining a position of the remote vehicle comprises using a global positioning system, tying global positioning system data to odometry data, and using a Kalman filter to provide confidence in the position of the remote vehicle based on the odometry data and the global positioning system data. 16. The method of claim 1, further comprising determining a position of the remote vehicle by maintaining a global map and placing coordinates of the remote vehicle within the global map. 17. The method of claim 16, wherein the determining a position of the remote vehicle comprises maintaining a destination point within the global map and adjusting a heading of the remote vehicle to navigate the remote vehicle toward the destination point. 18. The method of claim 1, further comprising determining a position of the remote vehicle by using one or more of a global positioning system or navigation beacon points. 