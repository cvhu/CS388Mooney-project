Beginning with a successive commanded end-effector destination shift, the method of the invention, which includes a calculation corresponding to a special algorithm of inverse kinematics using the Jacobi Matrix in the control of a manipulator, effects an optimization of weighted criteria (energy criteria, acceleration criteria and reference-position criteria) in a real-time cycle while reliably maintaining all path limitations and resulting in an optimized acceleration behavior. The method of the invention can be used in interactive path guidance of a manipulator and/or as a modular component of a superordinate task, such as for force-control objectives.
Claims What is claimed is: 1. A method of controlling a robot, in an environment of robotic physical motion limits, to move a point on the robot from a current first position vector q.sub.l to a second position vector q.sub.i+1 ; wherein the robot has n.sub.dof robotic joint articulations or degrees of freedom and the method employs a kinematic equation based on use of a Jacobi Matrix J(q) having n.sub.dof columns; the method comprising: providing a calculating unit coupled to the robot: inputting a control command to the calculating unit, the command further comprising a desired end-effect destination shift .DELTA.x.sub.d, and calculating the second position vector q.sub.i+1 from the inputted destination shift .DELTA.x.sub.d and the first position vector q.sub.i ; wherein the step of calculating the second position vector q.sub.t+1 further comprises: (a) calculating a scalar energy criterion wherein .DELTA..sub.j are first non-negative weighting values and j=1, . . . n.sub.dof ; calculating a scalar reference-position deflection criterion wherein .beta..sub.j are second non-negative weighting values and j=1, . . . n.sub.dof and q.sub.ref is an articulation reference position value that is predetermined such that a sequence of the position vectors q.sub.i runs near this reference position value; calculating a scalar acceleration criterion wherein .gamma..sub.j are third non-negative weighting values and j=1, . . . n.sub.dof ; calculating an additional criterion further comprising the negative of a scalar parameter p satisfying a kinematic equation and an inequality 0.ltoreq.p.ltoreq.1, whereby p is an attained fraction of the commanded end-effect destination shift .DELTA.x.sub.d ; and (b) summing the energy criterion, the reference-position criterion, the acceleration criterion, and the additional criterion to obtain a scalar quality function f(q); (c) determining secondary conditions comprising the kinematic equation, the inequality 0.ltoreq.p.ltoreq.1, physical path limitations q.sub.min and q.sub.max, a maximum articulation speed q.sub.max, and a maximum articulation acceleration q.sub.max ; (d) starting from the first position vector q.sub.i, iteratively repeating optimization steps to obtain a series of intermediate position vectors, the optimization steps further comprising: (d1) determining the active and inactive secondary conditions in the intermediate position vector; (d2) taking a gradient of the quality function j(q) to obtain an optimization vector oriented in a descent direction of the quality function f(q); (d3) projecting the optimization vector in a tangent space of active secondary conditions, whereby the optimization vector is orthogonal to a set of gradients of active secondary constraint conditions; (d4) scaling a magnitude of the optimization vector according to a set of inactive secondary constraint conditions to obtain a scaled optimization vector; (d5) obtaining a sum vector by adding the scaled optimization vector to the intermediate position vector; and (d6) evaluating the sum vector to determine if the sum vector lies generally at a minimum of the quality function; and (d7) if the sum vector does not lie generally at the minimum, then repeating the optimization steps starting from a new intermediate vector equal to the sum vector plus the preceding intermediate vector; and (e) if the sum vector lies generally at the minimum, then moving the point on the robot to the second position vector q.sub.i+1. 2. The method according to claim I wherein, starting from a commanded end-effector destination shift .DELTA.x.sub.c :=(.DELTA.x.sub.t,.DELTA.x.sub.r) at a time T.sub.i, wherein and .DELTA.x.sub.t.epsilon.{character pullout} .sup.3 and .DELTA.x.sub.r.epsilon.{character pullout} .sup.3 each represent, respectively translational and rotational components of the commanded end-effector destination shift; .DELTA.x.sub.l.sup.max and .DELTA.x.sub.r.sup.max, respectively each define a maximum scalar-value Cartesian position offset of the end effector per sample time .DELTA.T, a desired Cartesian translational or rotational end-effector destination shift .DELTA.x.sub.l.sup.d is given by: ##EQU27## wherein quantity .vertline.x.vertline. of a vector x is determined by a Euclidian norm ##EQU28## and whereby the desired end-effector destination shift is given by .DELTA.x.sub.d : =(.DELTA.x.sub.l.sup.d,.DELTA.x.sub.r.sup.d); and wherein the criteria, energy criteria, reference-position criteria, and acceleration criteria, are weighted according to prevalent problem-specific requirements by allocating three predetermined numerical values .alpha..sub.j, .beta..sub.j, .gamma..sub.j , to each axis j, the value .alpha..sub.j serving in the weighting of an energy criterion that evaluates a difference between two adjacent, calculated articulation positions of axis j; and the value .beta..sub.j serving in weighting of a criterion that evaluates deflection of the predetermined articulation position q.sub.j from a reference value q.sub.ref,j, and the value .gamma..sub.j serving in the weighting of a criterion which evaluates acceleration behavior in form of an articulation speed offset of the articulation axis q.sub.j, which is predetermined by the operator as are the physical articulation stops q.sub.min, q.sub.max of the manipulator, which relate to path limitations, and the articulation speed limitations q.sub.max and the articulation acceleration limitations q.sub.max, and wherein, upon an attainment of output value; an allowable optimum articulation position offset .DELTA.q.sup.i is calculated for a desired end-effector destination shift .DELTA.x.sub.d.sup.i at the time T.sub.i-1 during the time interval .DELTA.T, via an algorithm of inverse kinematics progressing during an initialization phase and a subsequent optimization phase, whereby a desired value is provided to articulation regulators from q.sub.soll.sup.i+1 :=q.sub.soll.sup.i +.DELTA.q.sup.i and the articulation regulators are correspondingly shifted with q.sub.soll.sup.i during the time interval .DELTA.T, and wherein an allowable articulation position offset comprises the articulation position value being updated with .DELTA.q to satisfy the physical articulation stops q.sub.min, q.sub.max corresponding to q.sub.min.ltoreq.q.sub.soll +.DELTA.q.ltoreq.q.sub.max and wherein .DELTA.q satisfies the articulation speed limitations q.sub.max corresponding to .vertline..DELTA.q.sup.i.vertline..ltoreq.q.sub.max.DELTA.T; and wherein the limitations of the articulation accelerations during an approach of articulation positions to the physical articulation stops are maintained reliably, and the type of optimum quality of .DELTA.q.sup.i os determined by an operator through the quality-criterion weighting .alpha., .beta., .gamma.; and wherein the sampling time .DELTA.T corresponding to .DELTA.T.gtoreq.max (.DELTA.t.sub.q, .DELTA.t.sub.r) is dimensioned such that the computation time .DELTA.t.sub.q for calculating an optimum allowable articulation position offset .DELTA.q and the adjustment time .DELTA.t.sub.r, which the regulators require for adapting the axial positions to the desired values q.sub.soll lies within the time span .DELTA.T. 3. The method according to claim 2, wherein the end-effector destination shift is Cartesian and is commanded at a time T.sub.i by an operator or a superordinate task in the form of a 6-dimensional increment vector. 4. The method according to claim 3, wherein the superordinate task comprises force control objectives. 5. The method according to claim 2, wherein the increment vector of the end-effector destination shift .delta.x.sub.c is Cartesian and is commanded at a time T.sub.i determined by an operator or a superordinate task by evaluating the difference of absolute end effector coordinates. 6. The method according to claim 5, wherein the superordinate task comprises force control objectives. 7. The method according to claim 1, wherein an unknown obstacle comprises an inactive secondary constraint condition, and including a step of adding the inactive secondary constraint condition to the set of active secondary constraint conditions when the robot encounters the obstacle. 8. The method according to claim 1, wherein the active secondary conditions are those secondary conditions which are attained and the inactive secondary conditions are those secondary conditions which are not attained. 9. The method according to claim 1, including displaying the value of p to the operator, whereby the operator is warned of path limitations and singularities when the p value decreases. 10. The method according to claim 1, wherein the iteratively-repeated optimization steps include applying a method of Lagrange multipliers. 11. The method according to claim 1, wherein the current first position vector q.sub.i and a second position vector q.sub.i+1 are joint position vectors. 12. The method according to claim 1, wherein the end-effect destination shifts .DELTA.x.sub.d are input to the calculating unit from at least one of a manual control device, a program, and a superordinate task. 13. The method according to claim 1, comprising use as a modular component of a superordinate task and wherein the end-effector destination shifts are commanded by the superordinate task. 14. The method according to claim 13, wherein the superordinate task comprises force control objectives. 15. An apparatus for controlling a robot, in an environment of robotic physical motion limits, to move a point on the robot from a current first position vector q.sub.i to a second position vector q.sub.i+1 ; wherein the robot has n.sub.dof robotic joint articulations or degrees of freedom; the apparatus comprising: a computer including software and being coupled to the robot and to an input device for inputting a control command to the computer, the command further comprising a desired end-effect destination shift .DELTA.x.sub.d, and wherein the software solves a kinematic equation based on use of a Jacobi Matrix J(q) having n.sub.dof columns to perform a calculation the second position vector q.sub.i+1 from the inputted destination shift .DELTA.x.sub.d and the first position vector q.sub.i ; the calculation further comprising: (a) calculating a scalar energy criterion wherein .alpha..sub.j are first non-negative weighting values and j=1, . . . , n.sub.dof ; calculating a scalar reference-position deflection criterion wherein .beta..sub.j are second non-negative weighting values and j=1, . . . , n.sub.dof and q.sub.ref is an articulation reference position value that is predetermined such that a sequence of the position vectors q.sub.i runs near this reference position value; calculating a scalar acceleration criterion (q-2q.sub.i +q.sub.1-1).sup.T diag(.gamma..sub.j)(q-2q.sub.i +q.sub.i-1) wherein .gamma..sub.j are third non-negative weighting values and j=1, . . . n.sub.dof ; calculating an additional criterion further comprising the negative of a scalar parameter p satisfying a kinematic equation and an inequality 0.ltoreq.p.ltoreq.1, whereby p is an attained fraction of the commanded end- effect destination shift .DELTA.x.sub.d ; and (b) summing the energy criterion, the reference-position criterion, the acceleration criterion, and the additional criterion to obtain a scalar quality function f(q); (c) determining secondary conditions comprising the kinematic equation, the inequality 0.ltoreq.p.ltoreq.1, physical path limitations q.sub.min and q.sub.max, a maximum articulation speed q.sub.max, and a maximum articulation acceleration q.sub.max ; (d) starting from the first position vector q.sub.i, iteratively repeating optimization steps to obtain a series of intermediate position vectors, the optimization steps further comprising: (d1) determining the active and inactive secondary conditions in the intermediate position vector; (d2) taking a gradient of the quality function f(q) to obtain an optimization vector oriented in a descent direction of the quality function f(q); (d3) projecting the optimization vector in a tangent space of active secondary conditions, whereby the optimization vector is orthogonal to a set of gradients of active secondary constraint conditions; (d4) scaling a magnitude of the optimization vector according to a set of inactive secondary constraint conditions to obtain a scaled optimization vector; (d5) obtaining a sum vector by adding the scaled optimization vector to the intermediate position vector; and (d6) evaluating the sum vector to determine if the sum vector lies generally at a minimum of the quality function; and (d7) if the sum vector does not lie generally at the minimum, then repeating the optimization steps starting from a new intermediate vector equal to the sum vector plus the preceding intermediate vector; and (e) if the sum vector lies generally at the minimum, then outputting to the robot the second position vector q.sub.i+1. 16. In a method of command control, by a programmer, for interactive path guidance of a kinematically-redundant manipulator based on end-effector destination shifts from the programmer, in connection with a calculation of articulated-position values according to an algorithm of inverse kinematics, the method including steps of: providing a manual control device; calculating a new articulation position (q.sub.i+i) from an end-effector destination shift command from the control device and a current articulation position actual value (q.sub.i) of the manipulator; the calculating step including as calculating factors a quality function (f(q)), which is parametrized by non-negative weighting values (.alpha..sub.j, .beta..sub.j) and path limitations through physical articulation stops (q.sub.min, q.sub.max), a maximum articulation speed (q.sub.max), and a kinematic equation represented by the Jacobi Matrix; calculating an energy criterion from (q-q.sub.i).sup.t diag(.alpha..sub.j)(q-q.sub.i); calculating a reference-position criterion from (q.sub.ref).sup.t diag(.beta..sub.i).multidot.(q-q.sub.ref); predetermining by the new articulation position new values for an articulation regulator, with the quality function being a sum of the energy criterion and the reference-position criterion; determining a value q.sub.ref as a predetermined articulation-position value such that a sequence of calculated articulation-position values (q.sub.i) runs near a value of the reference-position criterion; determining an allowable optimization vector, beginning with one of the articulation-position values q.sub.i as a starting point, on the basis of the quality function with respect to all active secondary conditions that indicate which path limitations have been attained; scaling the allowable optinization vector according to inactive secondary conditions that indicate which path limitations have not been attained; adding the scaled optimization vector to the articulation-position value calculated in the previous step of the iteration; and evaluating an optimum quality of the articulation-position values based on the quality function and the secondary conditions activated in the newly-calculated articulation position; the improvement wherein: the non-negative weighting values include a weighting value .gamma..sub.j ; the calculating factors include a maximum articulation acceleration (q.sub.max); the calculating step includes calculating an acceleration criterion from (-2q.sub.i -q.sub.i-1).sup.t diag(.gamma..sub.i).multidot.(q-2q.sub.i -q.sub.i-1); and calculating an additional criterion further comprising the negative of a scalar parameter p satisfying a kinematic equation and an inequality 0.ltoreq.p.ltoreq.1, whereby p is an attained fraction of a commanded end-effector destination shift .DELTA.x.sub.d. 