A method and an apparatus for an ultrasound system provide compression of ultrasound signal samples after analog to digital conversion and before beamforming. The analog ultrasound signals received from an array of ultrasound transducer elements are digitally sampled by a plurality of analog to digital converters (ADCs) to produce a plurality of sequences of signal samples. Each sequence of signal samples is compressed to form a corresponding sequence of compressed samples. The resulting sequences of compressed samples are transferred via a digital interface to an ultrasound signal processor. At the ultrasound signal processor, the received sequences of compressed samples are decompressed. The typical processing operations, such as beamforming, downconversion and detection, are applied to decompressed samples. This abstract does not limit the scope of the invention as described in the claims.
Claims We claim: 1. In an ultrasound imaging system including an array of ultrasound transducer elements that outputs a plurality of analog ultrasound signals during a sampling window, a method comprising: digitally sampling the plurality of analog ultrasound signals using analog to digital converters to produce a plurality of sequences of signal samples, each sequence of signal samples representing the analog ultrasound signal output by a corresponding transducer element during the sampling window; compressing the plurality of sequences of signal samples to form a plurality of corresponding sequences of compressed samples, including compressing a particular sequence of signal samples in the plurality of sequences of signal samples independently from signal samples representing analog ultrasound signals output from other transducer elements during said sampling window to form a corresponding sequence of compressed samples, wherein the corresponding sequence includes fewer bits than the particular sequence; and transferring the plurality of corresponding sequences of compressed samples across a data transfer interface to a signal processor. 2. The method of claim 1, further comprising: decompressing at least a portion of the compressed samples received from the data transfer interface to form decompressed samples, wherein the signal processor applies beamforming operations to the decompressed samples. 3. The method of claim 1, further comprising: decompressing at least a portion of the compressed samples received from the data transfer interface to form decompressed samples, wherein the signal processor downconverts the decompressed samples. 4. The method of claim 1, further comprising after the step of transferring: storing the compressed samples in a memory; and decompressing at least a portion of the compressed samples retrieved from the memory to form decompressed samples for processing by the signal processor. 5. The method of claim 1, wherein the signal processor applies beamforming operations on subsets of signal samples, the method further comprising: storing the compressed samples in a memory; retrieving a subset of compressed samples from the memory in response to a request from the signal processor for a desired subset of signal samples; decompressing the subset of compressed samples to form a subset of decompressed samples corresponding to the desired subset of signal samples; and providing the subset of decompressed samples for the beamforming operations. 6. The method of claim 1, wherein a number of analog to digital converters (ADCs) is N to produce N sequences of signal samples, wherein the step of compressing produces N sequences of compressed samples, the method further comprising: multiplexing the N sequences of compressed samples to form M sequences of multiplexed compressed samples where M is less than N, wherein the step of transferring transfers the M sequences of multiplexed compressed samples over M data ports to the data transfer interface. 7. The method of claim 6, further comprising: receiving the M sequences of multiplexed compressed samples at the signal processor; and demultiplexing the M sequences of multiplexed compressed samples to reconstruct the N sequences of compressed samples. 8. The method of claim 1, wherein the step of compressing further comprises applying block floating point encoding to the particular sequence of signal samples to form the corresponding sequence of compressed samples. 9. The method of claim 8, further comprising: decompressing at least a portion of the compressed samples received from the data transfer interface by applying block floating point decoding to at least a portion of the corresponding sequence of compressed samples to form decompressed samples for processing by the signal processor. 10. The method of claim 1, wherein the step of compressing further comprises: calculating differences between consecutive signal samples in the particular sequence of signal samples to form a corresponding sequence of difference samples, wherein the differences are first order or higher order differences; and encoding the corresponding sequence of difference samples to form the corresponding sequence of compressed samples. 11. The method of claim 10, further comprising decompressing at least a portion of the compressed samples received from the data transfer interface, the decompressing further comprising: decoding at least a portion of the corresponding sequence of compressed samples to reconstruct the difference samples; and integrating the reconstructed difference samples to form decompressed samples, wherein the integrating calculates first order or higher order integrations to invert the first order or higher order differences of the step of calculating differences. 12. The method of claim 1, wherein the step of compressing further comprises: calculating differences between the signal samples in pairs of signal samples separated by a predetermined number of sample intervals in the particular sequence of signal samples to form a corresponding sequence of difference samples; and encoding the corresponding sequence of difference samples to form the corresponding sequence of compressed samples. 13. The method of claim 12, further comprising: selectively inverting one of the signal samples in each pair of signal samples separated by the predetermined number of sample intervals in accordance with an inversion control parameter prior to the step of calculating differences. 14. The method of claim 1, wherein the step of compressing further comprises: defining groups of consecutive signal samples, each group having a predetermined number of signal samples; determining an exponent value for the signal sample having a maximum magnitude in the group; encoding the exponent value for the group to form an exponent token; forming a mantissa having a reduced number of bits to represent each signal sample in the group, wherein the reduced number of bits is based on the exponent value; and representing the compressed samples for the group using the exponent token and a predetermined number of mantissas to form a group of compressed samples. 15. The method of claim 14, wherein the step of forming a mantissa further comprises: removing a number of least significant bits (LSBs) from each signal sample in the group by truncating or rounding the signal sample to form a reduced mantissa, wherein the number of LSBs removed is based on the exponent value, wherein the step of representing the compressed samples uses the exponent token and the predetermined number of reduced mantissas to form the group of compressed samples. 16. The method of claim 15, further comprising decompressing at least a portion of the compressed samples received from the data transfer interface, the decompressing further comprising: decoding the exponent token for the group of compressed samples to reconstruct the exponent value; determining a number of bits per sample and a number of LSBs per sample based on the exponent value for the group of compressed samples; appending the number of LSBs per sample to each reduced mantissa with bit values selected from zeros or dithered values to form a corresponding expanded mantissa; and mapping each expanded mantissa of the group of compressed samples to a corresponding decompressed sample having the number of bits per sample and the number of LSBs per sample, to form a group of decompressed samples. 17. The method of claim 14, further comprising decompressing at least a portion of the compressed samples received from the data transfer interface, the decompressing further comprising: decoding the exponent token for the group of compressed samples to reconstruct the exponent value; determining a number of bits per sample based on the exponent value for the group of compressed samples; and mapping each mantissa of the group of compressed samples to a corresponding decompressed sample having the number of bits per sample, to form a group of decompressed samples. 18. The method of claim 1, further comprising downconverting the sequences of signal samples to an intermediate frequency or to a baseband prior to the step of compressing. 19. The method of claim 1, wherein the step of compressing produces the plurality of corresponding sequences of compressed samples in real time. 20. In an ultrasound imaging system including an array of ultrasound transducer elements that outputs a plurality of analog ultrasound signals during a sampling window, an apparatus comprising: an integrated circuit device having a plurality of analog inputs for receiving the plurality of analog ultrasound signals and a plurality of data ports at a digital interface, the integrated circuit device comprising: a plurality of analog to digital converters (ADCs) coupled to digitally sample the plurality of analog ultrasound signals received at the analog inputs to produce a plurality of sequences of signal samples during the sampling window, each ADC sampling a corresponding analog ultrasound signal output by a corresponding transducer element to form a corresponding sequence of signal samples; and a compressor having multiple inputs coupled to receive the plurality of sequences of signal samples and producing a plurality of sequences of compressed samples, the compressor including a plurality of compression units, wherein a corresponding compression unit compresses the corresponding sequence of signal samples independently from signal samples representing analog ultrasound signals output from other transducer elements during said sampling window to form a corresponding sequence of compressed samples, wherein the corresponding sequence includes fewer bits than the particular sequence, wherein the plurality of sequences of compressed samples are provided to the plurality of data ports for transfer over the digital interface to a signal processor. 21. The apparatus of claim 20, further comprising: a decompressor coupled to receive the plurality of sequences of compressed samples from the digital interface and providing decompressed samples to the signal processor. 22. The apparatus of claim 21, wherein the signal processor applies beamforming operations to the decompressed samples. 23. The apparatus of claim 21, wherein the signal processor downconverts the decompressed samples to a baseband or to an intermediate frequency prior to applying beamforming operations. 24. The apparatus of claim 21, wherein the decompressor further comprises: a block floating point decoder applied to at least a portion of the compressed samples to produce the decompressed samples. 25. The apparatus of claim 21, wherein the decompressor further comprises: a decoder applied to at least a portion of the sequence of compressed samples to produce a sequence of decoded samples; and an integrator for calculating first or higher order integrals of the sequence of decoded samples to produce the decompressed samples. 26. The apparatus of claim 21, wherein the decompressor is implemented in a field programmable gate array (FPGA). 27. The apparatus of claim 21, wherein the signal processor is implemented in a FPGA, the FPGA further including: a decompression core implementing the decompressor; data channels for receiving the plurality of sequences of compressed samples from the digital interface to provide the compressed samples to the decompression core; and data channels for providing the decompressed samples to the signal processor. 28. The apparatus of claim 21, wherein the decompressor is implemented at least partially in a graphics processing unit (GPU). 29. The apparatus of claim 28, wherein the signal processor is implemented at least partially in the GPU. 30. The apparatus of claim 20, further comprising: a memory coupled to store the compressed samples received from the digital interface; and a decompressor coupled to the memory to retrieve the stored compressed samples and providing decompressed samples to the signal processor. 31. The apparatus of claim 20, wherein the signal processor performs beamforming operations on subsets of signal samples, the apparatus further comprising: a memory coupled to store the compressed samples received from the digital interface; and a decompressor coupled to the memory to retrieve a subset of the compressed samples from the memory in response to a request from the signal processor for a desired subset of signal samples, wherein the decompressor decompresses the subset of the compressed samples to provide decompressed samples corresponding to the desired subset to the signal processor for the beamforming operations. 32. The apparatus of claim 20, wherein the plurality of ADCs comprises N ADCs to provide N sequences of signal samples to the compressor, wherein the compressor produces N sequences of compressed samples, the integrated circuit device further comprising: a multiplexer for arranging the N sequences of compressed samples to form M sequences of multiplexed compressed samples where M is less than N, wherein the M sequences of multiplexed compressed samples are provided to M data ports of the plurality of data ports. 33. The apparatus of claim 32, further comprising: a demultiplexer coupled to receive the M sequences of multiplexed compressed samples from the digital interface, the demultiplexer reconstructing the N sequences of compressed samples provided to a decompressor. 34. The apparatus of claim 20, wherein each compression unit further comprises: a block floating point encoder applied to the corresponding sequence of signal samples to produce the corresponding sequence of compressed samples. 35. The apparatus of claim 20, wherein each compression unit further comprises: a difference operator to calculate first or higher order differences between consecutive signal samples in the corresponding sequence of signal samples to produce a sequence of difference samples; and an encoder to encode the sequence of difference samples to produce the corresponding sequence of compressed samples. 36. The apparatus of claim 20, wherein each compression unit further comprises: a difference operator to calculate differences between the signal samples in pairs of signal samples in the corresponding sequence of signal samples, wherein the signal samples of each pair are separated by a predetermined number of sample intervals to form a sequence of difference samples; and an encoder to encode the sequence of difference samples to form the corresponding sequence of compressed samples. 37. The apparatus of claim 36, wherein each compression unit further comprises: an inverter that selectively inverts one of the signal samples in each pair of signal samples separated by a predetermined number of sample intervals in accordance with an inversion control parameter to produce the pairs of signal samples for the difference operator. 38. The apparatus of claim 20, further comprising: a plurality of downconverters coupled between the plurality of ADCs and the compressor, each downconverter receiving the sequence of signal samples from a corresponding ADC and converting the sequence of signal samples to an intermediate frequency or to a baseband to form a sequence of downconverted signal samples provided to the corresponding compression unit. 39. The apparatus of claim 20, wherein the compressor produces the plurality of sequences of compressed samples in real time. 