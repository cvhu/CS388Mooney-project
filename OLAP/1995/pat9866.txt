A method for determining an optimal trajectory and velocity for an open loop stepper motor driven robot (1) is disclosed, as is an open loop robotic system suitable for use in, by example, a rapid prototyping system (10). The method utilizes a deflection angle calculation of a maximal velocity for each vertex of a set of vertices that define a desired trajectory, a heap sort for globally ensuring that none of the vertices have an excessive velocity, and a vertex adding technique that ensures that the robot is performing straight line moves as rapidly as is possible.
Claims Having thus described my invention, what I claim as new, and desire to secure by Letters Patent is: 1. A method for reducing a time required for an object to be driven by a plurality of motors over a predetermined trajectory through an n-dimensional space wherein n is equal to or greater than two, the trajectory being defined by a list of vertices each having coordinates that defined a location within the n-dimensional space, each vertex being separated from at least one other vertex by a line segment, comprising the steps (a) determining a maximum velocity that can be maintained for each vertex as the object changes direction when being driven from one line segment to the next; (b) sorting the vertices by ascending maximum velocity; (c) examining a pair of vertices consisting of a slowest vertex and a subsequent vertex in the trajectory; (d) if the determined maximum velocity at the subsequent vertex is found to be exactly achieved by accelerating as fast as possible from the slowest vertex, (d1) marking the determined maximum velocity at the subsequent vertex as correct; (e) if the determined maximum velocity at the subsequent vertex is found to be greater than the determined maximum velocity, (e1) reducing the maximum velocity for the subsequent vertex to the value achieved by accelerating as fast as possible from the slowest vertex; and (e2) marking the reduced maximum velocity at the subsequent vertex as correct; (f) if the determined maximum velocity at the subsequent vertex is found to be less than the determined maximum velocity, (f1) marking the subsequent vertex for a subsequent addition of at least one intermediate vertex; (g) examining a pair of vertices consisting of a slowest vertex and a previous vertex in the trajectory; (h) if the determined maximum velocity at the slowest vertex is found to be exactly achieved by decelerating as fast as possible from the previous vertex to the slowest vertex, (h1) marking the maximum velocity at the previous vertex as correct; (i) if the determined maximum velocity at the previous vertex is found to be greater than the determined maximum velocity, (i1) reducing the maximum velocity for the previous vertex to the value achieved by decelerating as fast as possible from the previous vertex to the slowest vertex; and (i2) marking the reduced maximum velocity of the previous vertex as correct; (j) if the determined maximum velocity at the subsequent vertex is found to be less than the determined maximum velocity, (j1) marking the previous vertex for a subsequent addition of at least one intermediate vertex; (k) removing the vertex having the lowest maximum velocity from the vertex list; (l) determining if all vertex pairs have been examined; (m) if all vertex pairs have not been examined, repeating the steps (b) through (l); (n) all vertex pairs have been examined, adding at least one intermediate vertex between each vertex pair previously marked for vertex addition; and (n) determining from a resulting vertex list a sequence of motor control signals so as to cause the object to be driven over the trajectory so as to achieve the indicated velocities at each vertex of the resulting vertex list. 2. A method as set forth in claim 1, wherein the motors are stepper motors, and wherein the step (q) adds a single vertex if a full acceleration from the first of the pair of vertices, and a full deceleration to the second of the pair of vertices, results in a position, along the line segment connecting the pair of vertices, where the accelerating and decelerating velocities are the same, and which is an integer number of stepper motor steps from both vertices, and where the velocity at the intersection is less than a maximum allowable velocity. 3. A method as set forth in claim 1, wherein if a full acceleration, followed by full deceleration, along the line segment between the pair of vertices will cause the velocity to reach a maximum allowable velocity, the step (n) adds a first vertex at a point on the line segment where the velocity first reaches the maximum allowable value, and a second vertex at a point on the line segment whereat a full acceleration will result in the second vertex being reached at the determined maximum velocity. 4. A method as set forth in claim 3, wherein the motors are stepper motors, and wherein if a full acceleration ramp and a full deceleration ramp intersect at a non-integer number of stepper motor steps, the step (n) adds two vertices along the line segment that are separated by one stepper motor step that results in neither an acceleration or a deceleration. 5. A method as set forth in claim 1, wherein the step (b) is accomplished with a heap sort. 6. A method as set forth in claim 1, wherein the motors are stepper motors, wherein translating the object through a point in the trajectory from a vertex i-1 to i to i+1 results in a deflection of angle .theta..sub.i, and wherein step (a) employs a value of cos.theta..sub.i to determine the maximum velocity for the vertex i where i is a positive integer greater than zero. 