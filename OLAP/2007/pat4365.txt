Methods and apparatus that provide a hardware abstraction layer (HAL) for a robot are disclosed. A HAL can reside as a software layer or as a firmware layer residing between robot control software and underlying robot hardware and/or an operating system for the hardware. The HAL provides a relatively uniform abstract for aggregates of underlying hardware such that the underlying robotic hardware is transparent to perception and control software, i.e., robot control software. This advantageously permits robot control software to be written in a robot-independent manner. Developers of robot control software are then freed from tedious lower level tasks. Portability is another advantage. For example, the HAL efficiently permits robot control software developed for one robot to be ported to another. In one example, the HAL permits the same navigation algorithm to be ported from a wheeled robot and used on a humanoid legged robot.
Claims What is claimed is: 1. A hardware abstraction layer (HAL) in an apparatus with a software architecture, the HAL comprising: software interfaces to higher-level software, wherein the software interfaces are configured to communicate with higher-level software with real-world measurements relating to interaction of the apparatus with an environment; a resource configuration that provides an indication of available resources of the higher-level software; a plurality of resource drivers, wherein at least a portion of the resource drivers correspond to the available resources in the resource configuration, wherein at least two of the resource drivers overlap in functionality, where only one of the at least two resource drivers has a corresponding resource available, where a resource driver for an available resource is configured to translate between real-world measurements for the apparatus and device-level measurements for a device; and an interface to lower-level device drivers, wherein the lower-level device drivers communicate with corresponding hardware at a device level, and where the interface to lower-level device drivers communicates to the higher-level software via a resource driver. 2. The HAL as defined in claim 1, wherein the resource configuration further comprises an indication of where a device is structurally coupled to the apparatus. 3. The HAL as defined in claim 1, wherein the higher-level software includes at least one selected from the group consisting of a planner, an application, a behavior, and a task. 4. The HAL as defined in claim 1, wherein the higher-level software comprises at least one of a planner, an application, a behavior, or a task. 5. The HAL as defined in claim 1, wherein a device driver corresponds to a motor driver and wherein a corresponding resource driver uses a wheel diameter and a gear ratio to compute speed given a motor angular velocity such that the resource driver translates between motor angular velocity for the motor driver and linear velocity for the high-level software. 6. The HAL as defined in claim 1, where the resource drivers reside in an application program interface (API) layer between the higher level software and the lower-level device drivers. 7. A hardware abstraction layer (HAL) in an apparatus for apparatus control software, the HAL comprising: means for providing a plurality of resource drivers for the apparatus, where the plurality of resource drivers comprises resource drivers for which no corresponding hardware is present on the apparatus; means for detecting a hardware configuration for the apparatus; means for automatically detecting resources that are available on the apparatus based on the detected hardware configuration; means for receiving a request from the apparatus control software to use a type of resource; means for automatically selecting a resource from the available resources that corresponds to the type of resource requested by the apparatus control software; means for exchanging a first information with the apparatus control software, where the first information is related to use of the selected resource and is provided in a unit of measure that is related to the apparatus; means for exchanging a second information with a low-level device driver corresponding to the resource, where the second information is related to the use requested by the apparatus control software, where the second information is provided in a unit of measure that is related to a corresponding device, and where the second information is different than the first information; and means for converting between the first information and the second information based on the detected configuration of the apparatus. 8. A hardware abstraction layer (HAL) in an apparatus with a software architecture, the architecture comprising higher-level software for interacting with a plurality of resources; the HAL comprising: a set of one or more resource drivers, the set comprising at least a first resource driver adapted to communicate with a first resource from the plurality of resources, wherein the first resource driver is adapted to support a plurality of functions associated with the first resource; a set of two or more resource interfaces, each resource interface adapted to communicate with the higher-level software and with the first resource driver, the set of two or more resource interface comprising: a) a first resource interface for invoking a first set of one or more functions of the plurality of functions supported by the first resource driver; and b) a second resource interface for invoking a second set of one or more functions of the plurality of functions supported by the first resource driver, wherein the first set of functions is different than the second set of functions; wherein the higher-level software communicates with the first resource via one or more selected interfaces of the plurality of resource interfaces, and the first resource communicates with the higher-level software via the first resource driver. 9. The HAL as defined in claim 8, further comprising a resource container for regulating access to each of the plurality of resource interfaces. 10. The HAL as defined in claim 8, further comprising a driver table comprising a reference to each of the one or more resource drivers. 11. The HAL as defined in claim 10, wherein the first resource interface and the second resource interface are invoked with a method associated with the first resource driver. 12. The HAL as defined in claim 8, wherein the HAL is further adapted to select from the plurality of resource interfaces based on a type of resource requested by the higher-level software and the functions associated with each of the plurality of resource interfaces. 13. The HAL as defined in claim 8, wherein the resource comprises a sensor, the first set of one or more functions comprises imaging, and the second set of one or more functions comprises range sensing. 14. The HAL as defined in claim 8, wherein the resource is selected from the group consisting of: a hardware resource, a software resource, and an operating system resource. 15. The HAL as defined in claim 8, wherein the first resource interface and the second resource interface are configurable to be active at the same time. 16. The HAL as defined in claim 8, wherein the apparatus is a robot. 17. The HAL as defined in claim 16, wherein the robot comprises the plurality of resources. 18. The HAL as defined in claim 17, wherein the higher-level software is remotely located from the plurality of resources. 19. The HAL as defined in claim 16, wherein the at least one of the two or more resource interfaces is an abstraction of two or more of the plurality of resources. 20. The HAL as defined in claim 19, wherein the higher-level software is remotely located from the at least one of the two or more resource interfaces. 