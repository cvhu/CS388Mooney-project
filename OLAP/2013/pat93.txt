A method for optimizing performance of a robot. At least one experiment is designed including at least two tests. Each test differs from at least one other test in the experiment regarding the location of the task in relation to the robot. The boundaries that are allowable for location of a task are calculated/determined. The effect on optimality for at least one test in the experiment is calculated/determined. The experimental data is fit to an algorithm. The optimal location of the task is calculated/determined.
Claims The invention claimed is: 1. A method for optimizing the location of a task to be performed relative to a robot, the method comprising: defining a number of tests to be simulated; defining the plurality of tests, the tests differing from each other regarding a location of the task in relation to the robot; determining boundaries for the location of the task to be performed, wherein the robot can perform the task within the boundaries; adjusting the locations of the task in the tests so that the locations are inside the boundaries; performing simulations, on a processor, of the defined tests with regarding to one aspect of optimality; determining a mathematical function describing a relationship between the one aspect of optimality and the location of the task to be performed relative the robot based on a result of the simulations and the locations of the task in each of the respective tests; calculating an extreme point of the determined mathematical function; and calculating an optimal location of the task to be performed relative to the robot based on the calculated extreme point of the determined mathematical function. 2. The method according to claim 1, wherein optimizing the performance of the task comprises optimizing at least one of position and orientation of the task. 3. The method according to claim 1, wherein said mathematical function comprises a polynomial function. 4. The method according to claim 1, wherein said mathematical function comprises a spline function. 5. The method according to claim 1, wherein said mathematical function comprises a Fourier series function. 6. The method according to claim 1, wherein the effect on optimality is calculated by performing a simulation of the path at the location of the task in the tests. 7. The method according to claim 5, wherein the simulation is performed using a virtual controller. 8. The method according to claim 1, wherein the effect on optimality is determined by running the task on at least one robot. 9. The method according to claim 1, wherein the effect on optimality is calculated using a process model. 10. The method according to claim 1, further comprising: increasing an accuracy of the optimal position of the task by repeating in a smaller area around the optimal position at least one of defining a plurality of tests, determining boundaries for the location of the task, adjusting the locations of the task in the tests so that the locations are inside the boundaries, determining effects on optimality for the locations of the task in the tests, fitting the determined effects on optimality to a mathematical function, calculating an extreme point of the function, and calculating an optimal location of the task. 11. The method according to claim 1, further comprising: optimizing at least one of the position and orientation of the task relative to several robots. 12. The method according to claim 11, further comprising: determining a region of operability of a specific robot performing a specific task using a three-dimensional bisection algorithm. 13. The method according to claim 1, further comprising: calculating cycle time by performing the task when the task is located on the boundaries of an operability region of the robot. 14. A system for optimizing the location of a task to be performed relative to a robot, the system comprising a processor configured to: determine boundaries for the location of the task to be performed, wherein the robot can perform the task within the boundaries; adjust the location of a defined task in a predefined number of tests so that the locations are inside the boundaries, wherein the tests differ from each other regarding a location of the task in relation to the robot; perform simulations of the defined tests with regarding to one aspect of optimality; determine a mathematical function describing a relationship between the one aspect of optimality and the location of the task to be performed relative the robot based on a result of the simulations and the locations of the task in each of the respective tests; calculate an extreme point of the determined mathematical function; and calculate an optimal location of the task to be performed relative to the robot based on the calculated extreme point of the mathematical function. 15. The system according to claim 14, wherein optimizing the performance of the task comprises optimizing at least one of position and orientation of the task. 16. A computer program product, comprising: a computer readable medium; and computer program code instructions recorded on the computer readable medium and executable by a processor for carrying out a method for optimizing performance of a task relative to a robot, the method comprising: defining a predefined number of tests, the tests differing from each other regarding a location of the task in relation to the robot; determining boundaries for the location of the task to be performed, wherein the robot can perform the task within the boundaries; adjusting the locations of the task in the tests so that the locations are inside the boundaries; performing simulations of the defined tests with regarding to one aspect of optimality; determining a mathematical function describing a relationship between the one aspect of optimality and the location of the task to be performed relative the robot based on a result of the simulations and the locations of the task in each of the respective tests; calculating an extreme point of the determined mathematical function; and calculating an optimal location of the task to be performed relative to the robot based on the calculated extreme point of the determined mathematical function. 17. A method in accordance with claim 1, wherein the mathematical function is determined by fitting the location of the task in each test and the corresponding result of the simulation of each task to a defined mathematical function. 18. A system in accordance with claim 14, wherein the mathematical function is determined by fitting the location of the task in each test and the corresponding result of the simulation of each task to a defined mathematical function. 19. A computer program product in accordance with claim 16, wherein the mathematical function is determined by fitting the location of the task in each test and the corresponding result of the simulation of each task to a defined mathematical function. 