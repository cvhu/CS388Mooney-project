A development tool for use in specifying at least a sub-set of information required to generate control tools for an industrial process wherien the process is performed by mechanical resources, the control tools include execution logic, simulation facilitating tools, diagnostic tools, HMI tools and schematic diagrams, the development tool including a plurality of control assembles (CA), a separate CA for each mechanical resource type, which can be instantiated by selection and parameterization via an editor to specify the required information, after instantiation, the CAs compiled to generate the tools.
Claims We claim: 1. A development tool for use with a processor which runs execution code for controlling control mechanism sets which in turn control resources which perform an industrial process, the processor controlling by providing resource requests, the development tool for specifying characteristics of at least a subset of control tools for the industrial process, control tools including execution, simulation, diagnostic and human-machine interface (HMI) logic and also including schematics, the development tool comprising: for each mechanism set: a control assembly (CA) encapsulating at least: a first control specification corresponding to one of the control tools in the sub-set; and a second control specification corresponding to another of the control tools in the sub-set wherein, each of an execution logic, a simulation, a diagnostic, an HMI and a schematic specification are control specifications; whereby CA instances can be instantiated such that the combined instantiated CAs specify characteristics of the control tools in the sub-set for the industrial process. 2. The development tool of claim 1 wherein each mechanism set is controllable and monitorable via I/O signals and has states corresponding to specific I/O combinations and the first control specification is an execution logic specification which specifies logic for the execution code, to this end, the execution logic specification specifying mechanisms within the corresponding mechanism set, mechanism sub-mechanisms, mechanism I/O, request I/O combinations and I/O combinations corresponding to completed requests. 3. The development tool of claim 2 wherein the execution logic specification also specifies interesting normal and failure conditions. 4. The development tool of claim 2 wherein the execution logic also specifies I/O combinations corresponding to intermediate states. 5. The development tool of claim 2 also for use with a display linked to the processor wherein the second control specification is a diagnostics specification which specifies expected control mechanism responses for each request, the expected responses displayable via the display. 6. The development tool of claim 2 also for use with a display linked to the processor wherein the second control specification is a diagnostics specification which specifies at least one abnormal condition and a corresponding message, when the abnormal condition occurs, the corresponding message displayable via the display. 7. The development tool of claim 2 also for use with a display linked to the processor wherein the second control specification is an HMI interface specification which specifies conditions and tools for controlling at least a subset of the requests corresponding to the mechanism set which are displayable via the interface. 8. The development tool of claim 1 wherein each mechanism set is representable via a schematic diagram and wherein the first control specification is a schematic specification, each schematic specification including symbols for each control mechanism in a corresponding mechanism set. 9. The development tool of claim 8 wherein each schematic specification also specifies connections between mechanisms in the CA. 10. The development tool of claim 8 wherein each schematic specification includes electrical, pneumatic and hydraulic representations corresponding to associated mechanism sets. 11. The development tool of claim 1 wherein CAs of a first type include some invariable characteristics and at least one parameterizable characteristic which is modifiable so as to accommodate distinctions between similar mechanism sets. 12. The development tool of claim 1 wherein each CA includes an execution logic, a simulation, a diagnostic, an HMI and a schematic specification. 13. A development tool used with an editor wherein the editor is employed to specify characteristics of at least a subset of control tools for an industrial process performed by process resources including control mechanisms which have mechanism specific characteristics, at least a sub-group of mechanisms having a first characteristic which is representable via schematics and at least a sub-group of mechanisms having a second characteristic which is representable via execution logic, the control tools including execution logic and schematics, the development tool for specifying at least a sub-set of mechanism characteristics and comprising: a plurality of control devices (CDs), one CD for each control mechanism, each CD which corresponds to a mechanism having the first characteristic including a schematic section and each CD which corresponds to a mechanism having the second characteristic including an execution logic section. 14. The development tool of claim 13 wherein at least a sub-set of the control mechanisms are controllable and monitorable via I/O signals having normal states corresponding to specific I/O combinations and wherein the logic sections corresponding to the I/O controllable/monitorable CDs specify I/O and normal I/O combinations. 15. The development tool of claim 13 wherein each schematic section also specifies part information and mechanism properties. 16. The development tool of claim 13 wherein each schematic section also specifies schematic connection points for the schematic. 17. The development tool of claim 13 wherein the control process is dividable into different operations corresponding to different resources, each resource including a control mechanism set and therefore corresponding to a collection of CDs, wherein, the development tool further comprises, for each mechanism set: a control assembly (CA) including a combination of CD information corresponding to each mechanism. 18. A method for use with a processor which runs execution code to control mechanism sets which in turn control resources which perform an industrial process, the processor controlling by providing requests, the method for specifying characteristics of at least a subset of control tools for the industrial process, control tools including execution, simulation, diagnostic and human-machine interface (HMI) logic and also including schematics, the method comprising the steps of: for each mechanism set: encapsulating in a control assembly (CA) at least: a first control specification corresponding to one of the control tools in the sub-set; and a second control specification corresponding to another of the control tools in the sub-set wherein, each of an execution logic, a simulation, a diagnostic, an HMI and a schematic specification are control specifications; instantiating CA instances such that the combined instantiated CAs specify characteristics of the control tools in the sub-set for the industrial process. 19. The method of claim 18 further including the step of compiling the CA instances to provide the control tool sub-set. 20. The method of claim 19 wherein the step of compiling includes compiling CA instances of the same type. 21. The method of claim 19 wherein each mechanism set is controllable and monitorable via I/O signals and has states corresponding to specific I/O combinations and the step of encapsulating the first control specification includes encapsulating an execution logic specification which specifies logic for the execution code, to this end, the execution logic specification specifying mechanisms within the corresponding mechanism set, mechanism sub-mechanisms, mechanism I/O, request I/O combinations and I/O combinations corresponding to completed requests. 22. The method of claim 21 wherein the step of compiling includes gleaning information from the logic specifications and generating execution code based on the gleaned information for controlling the industrial process. 23. The method of claim 21 wherein the step of encapsulating the execution logic specification also includes the step of specifying interesting normal and failure conditions. 24. The method of claim 21 wherein the step of encapsulating the execution logic specification also includes specifying I/O combinations corresponding to intermediate states. 25. The method of claim 21 wherein some logic specification features are parameterizable and the step of instantiating includes setting parameterizable features. 26. The method of claim 21 wherein some logic specification features are parameterizable, at least one mechanism associated with a CA is optional, the step of instantiating features includes indicating one of inclusion and exclusion of the optional mechanism and wherein the step of compiling includes eliminating excluded control mechanisms. 27. The method of claim 18 also for use with a display linked to the processor wherein the step of encapsulating includes encapsulating a diagnostics specification which specifies expected control mechanism responses for each request, the expected responses displayable via the display. 28. The method of claim 27 wherein some diagnostics specification features are parameterizable and the step of instantiating includes setting parameterizable features. 29. The method of claim 18 also for use with a display linked to the processor wherein the step of encapsulating includes encapsulating an HMI interface specification which specifies conditions corresponding to I/O combinations which are to be displayable via the interface. 30. The method of claim 29 wherein some HMI interface specification features are parameterizable and the step of instantiating includes setting parameterizable features. 31. The method of claim 18 wherein each mechanism set is representable via a schematic diagram and wherein the step of encapsulating includes the step of encapsulating a schematic specification, each schematic specification including symbols for each control mechanism in a corresponding mechanism set. 32. The method of claim 18 wherein CAs of a first type include some invariable characteristics and at least one parameterizable characteristic which is modifiable so as to accommodate distinctions between similar mechanism sets and wherein the step of instantiating includes setting the parameters in the first CA type. 33. The method of claim 18 wherein the step of encapsulating includes encapsulating each of an execution logic, a simulation, a diagnostic, an HMI and a schematic specification. 