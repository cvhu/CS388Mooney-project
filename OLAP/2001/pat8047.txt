A compliant controller implements a biological model of a primate muscle so as to provide simultaneous position and force control with nonlinear damping for an actuator. The compliant controller uses one or more position sensors but does not require the use of a force sensor to provide force control. The compliant controller implements a force determining algorithm that is a function of an initial actuator position, a subsequently sensed actuator position, a desired actuator position and a position calculated from a nonlinear damping function. The algorithm updates or resets the initial actuator position or the calculated position depending upon the amount of actuator movement sensed. The compliant controller in accordance with the force determining algorithm and resetting of the various position values allows a desired position to be quickly attained while allowing the controller to compliantly respond to the presence or removal of an unknown or unexpected disturbing force.
Claims What is claimed and desired to be secured by Letters Patent is: 1. A compliant controller for an actuator that does not require the use of a force sensor comprising: a position sensor for sensing the position of the actuator to generate signals representing actuator position; a processor responsive to sensed actuator position and operating in accordance with a force determining algorithm that is a function of an initial actuator position, a subsequently sensed actuator position and a position calculated from a nonlinear damping function to determine an actuating force, the actuating force being nonzero in the presence of a disturbing force, the processor comparing the difference between an initial actuator position and a subsequently sensed actuator position to a value representing a predetermined amount of movement, the processor resetting the calculated position to a predetermined value if the difference is less than the predetermined amount of movement to reduce the actuating force in the presence of a disturbing force and the processor setting the initial actuator position to the subsequently sensed actuator position if the difference is greater than the predetermined amount of movement. 2. A compliant controller as recited in claim 1 wherein said force determining algorithm simulates a primate muscle. 3. A compliant controller as recited in claim 1 wherein said processor calculates a position by integrating v.sup.n where n is an odd number representing an order of nonlinearity; v=r.sup.mus /(B.sub.p *(.vertline.x.sub.p.vertline.-x.sub.po)); r.sup.mus =K.sub.r * (X.sup.mus -x.sub.p); x.sup.mus is the difference between the initial actuator position and a subsequently sensed actuator position; K.sub.r is a stiffness constant; B.sub.p is a damping coefficient; x.sub.po is a nonzero constant and x.sub.p is the calculated position having an initialization value of zero. 4. A compliant controller as recited in claim 1 wherein said processor includes a teaching mode that uses the force determining algorithm to determine an actuating force that allows the actuator to be manually moved to follow a desired path, the processor storing as command actuator positions the actuator positions sensed as the actuator is manually moved so that in a control mode the processor can control the actuator to move along the path represented by the actuator positions stored in the teaching mode. 5. A compliant controller for an actuator that does not require the use of a force sensor comprising: a position sensor for sensing the position of the actuator to generate signals representing actuator position; a processor responsive to sensed actuator position and operating in accordance with a force determining algorithm to determine an actuating force where the algorithm is a function of an initial actuator position, a subsequently sensed actuator position, a desired actuator position and a position calculated from a nonlinear damping function, the processor comparing the difference between an initial actuator position and a subsequently sensed actuator position to a value representing a predetermined amount of movement and the processor resetting the calculated position to a predetermined value if the difference is less than the predetermined amount of movement to adapt the actuating force to a disturbing force. 6. A compliant controller as recited in claim 5 wherein the processor resets the calculated position to a predetermined value of zero if the difference is less than the predetermined amount of movement. 7. A compliant controller as recited in claim 5 wherein the processor adapts the actuating force to the disturbing force by reducing the actuating force to stop movement of the actuator in the presence of a disturbing force. 8. A compliant controller as recited in claim 5 wherein the processor sets the initial actuator position to the subsequently sensed actuator position if the difference is greater than the predetermined amount of movement to generate an actuating force to rapidly move the actuator in response to removal of the disturbing force. 9. A compliant controller as recited in claim 5 wherein said processor determines a nonzero actuating force in the presence of a disturbing force to cause the actuator to automatically move upon removal of the disturbing force. 10. A compliant controller as recited in claim 5 wherein said force determining algorithm simulates a primate muscle. 11. A compliant controller as recited in claim 5 wherein said processor calculates a position by integrating v.sup.n where n is an odd number representing an order of nonlinearity; v=r.sup.mus /(B.sub.p *(.vertline.x.sub.p.vertline.-x.sub.po)); r.sup.mus =K.sub.r * (x.sup.mus -x.sub.p); x.sup.mus is the difference between the initial actuator position and a subsequently sensed actuator position; K.sub.r is a stiffness constant; B.sub.p is a damping coefficient; x.sub.po is a nonzero constant and x.sub.p is the calculated position having an initialization value of zero. 12. A compliant controller as recited in claim 5 wherein the force determining algorithm is a function of a stiffness constant to provide position control. 13. A compliant controller as recited in claim 5 wherein said processor includes a teaching mode that uses the force determining algorithm to determine an actuating force that allows the actuator to be manually moved to follow a desired path, the processor storing as command actuator positions the actuator positions sensed as the actuator is manually moved so that in a control mode the processor can control the actuator to move along the path represented by the actuator positions stored in the teaching mode. 14. A method for determining an actuator force for a compliant controller that controls an actuator without requiring a force sensor comprising: sensing the position of an actuator; calculating an actuating force in accordance with a force determining algorithm that is a function of an initial actuator position, a subsequently sensed actuator position, a desired position and a position calculated from a nonlinear damping function; determining a difference between an initial actuator position and a subsequently sensed actuator position; and resetting the calculated position to a predetermined value if the difference is less than the predetermined amount of movement to adapt the actuating force to a disturbing force. 15. A method for determining an actuator force as recited in claim 14 wherein said predetermined value to which said calculated position is reset is zero. 16. A method for determining an actuator force as recited in claim 14 wherein the calculated actuator force is nonzero in the presence of a disturbing force to cause the actuator to automatically move upon removal of the disturbing force. 17. A method for determining an actuator force as recited in claim 14 including the steps of: determining whether the controller is in a teaching mode or a control mode; and storing in the teaching mode the sensed actuator positions as the actuator is manually moved to follow a desired path with the determined actuator force aiding in the movement of the actuator. 18. A method for determining an actuator force as recited in claim 14 including the step of setting the initial actuator position to the subsequently sensed actuator position if the difference is greater than the predetermined amount of movement. 19. A compliant controller as recited in claim 14 wherein said force determining algorithm simulates a primate muscle. 20. A compliant controller as recited in claim 14 wherein said processor calculates a position by integrating v.sup.n where n is an odd number representing an order of nonlinearity; v=r.sup.mus /(B.sub.p *(.vertline.x.sub.p.vertline.-x.sub.po)); r.sup.mus =K.sub.r * (x.sup.mus -x.sub.p); x.sup.mus is the difference between the initial actuator position and a subsequently sensed actuator position; K.sub.r is a stiffness constant; B.sub.p is a damping coefficient; x.sub.po is a nonzero constant and x.sub.p is the calculated position having an initialization value of zero. 