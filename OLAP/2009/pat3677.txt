A system, method and computer program for developing artificial intelligence through the generational evolution of one or more genomes. Each genome includes a set of functions. The method includes creating one or more cortices, operating the one or more cortices to perform one or more specified tasks, calculating a fitness score for each cortex based on its ability to perform the specified tasks, and selecting one or more of the cortices based on the respective fitness scores. Each cortex includes a plurality of cortical units. Each cortical unit includes a set of functions. Each cortical unit is created from the one or more genomes.
Claims What is claimed is: 1. A computer implemented method for developing artificial intelligence though the generational evolution of one or more genomes, wherein each genome comprises a set of functions, the method comprising: creating one or more cortices, wherein each cortex comprises a plurality of cortical units, each cortical unit is created from one or more genomes, and wherein the one or more genomes provide the method for creating each cortical unit; operating the one or more cortices to perform one or more specified tasks; calculating a fitness score for each cortex based on its ability to perform the specified tasks; and selecting one or more of the cortices based on the respective fitness scores. 2. The computer implemented method of claim 1, wherein each of the plurality of cortical units in the cortex is created from the same genome. 3. The computer implemented method of claim 2, further comprising: reproducing one or more of the genomes based on the fitness score of the corresponding cortex; and mutating one or more of the functions of the one or more genomes. 4. The computer implemented method of claim 1, further comprising providing positive and negative reinforcement to one or more cortical units based on the performance of the cortex. 5. The computer implemented method of claim 4, wherein the selected cortices are those with the highest accumulated ratio of positive to negative reinforcement. 6. The computer implemented method of claim 3, wherein mutating one or more of the functions results in altering the cortical processing dynamics of one or more of the cortices. 7. The computer implemented method of claim 1, wherein the functions of the cortical units are represented by neural processing elements. 8. The computer implemented method of claim 1, wherein the functions of the cortical units are represented by parse trees. 9. The computer implemented method of claim 1, wherein the functions of the cortical units are represented by mathematical expression frees, each mathematical expression tree having internal nodes and leaf nodes, the internal nodes representing a set of mathematical operators, and the leaf nodes representing a set of terminal inputs to the respect mathematical expression tree. 10. The computer implemented method of claim 1, wherein the functions of the cortical units are represented by strings of computer code. 11. The computer implemented method of claim 1, wherein the functions of the cortical units comprise nested parenthetical expressions of terminals and operators, and wherein the operators perform calculations on the terminals and the results of other calculations. 12. The computer implemented method of claim 2, wherein data is provided to the cortical units through neural connections. 13. The computer implemented method of claim 2, wherein data is provided to the cortical units by designating input variables upon which the functions may operate. 14. The computer implemented method of claim 2, wherein the cortical units are arranged as an array with each cortical unit having a plurality of neighboring cortical units. 15. The computer implemented method of claim 14, wherein each cortical unit includes data that is available to one or more of the functions, the method further comprising exchanging the data from one or more of the cortical units with one or more of the neighboring cortical units. 16. The computer implemented method of claim 15, wherein the data from one or more of the cortical units is continuously processed and exchanged with the one or more neighboring cortical units in all directions. 17. The computer implemented method of claim 15, wherein the data is exchanged through neural connections. 18. The computer implemented method of claim 15, wherein the data is exchanged by allowing one or more neighboring cortical units direct access to the internal data. 19. The computer implemented method of claim 14, wherein each cortical unit is associated with eight neighboring cortical units. 20. The computer implemented method of claim 14, wherein the array comprises a multi-dimensional array. 21. The computer implemented method of claim 20, wherein the array comprises a two-dimensional array. 22. The computer implemented method of claim 2l wherein one or both pairs of opposing edges of the array connect to form a tube or torus shaped network. 23. The computer implemented method of claim 15, wherein the data of one or more of the cortical units is distinctive from the data of other cortical units. 24. The computer implemented method of claim 15, wherein the data for each of the cortical units comprises a first plurality of return values from the one or more functions. 25. The computer implemented method of claim 24, wherein the data for each of the cortical units further comprises a second plurality of return values from one or more of the functions of the one or more neighboring cortical units. 26. The computer implemented method of claim 25, wherein the first and second plurality of returned values are provided as input parameters to the one or more functions. 27. The computer implemented method of claim 4, wherein each of the functions of the cortical units operate based on positive and negative reinforcement as input parameters to the functions. 28. The computer implemented method of claim 3, wherein mutating one or more of the functions is further based on a mutation probability rate. 29. The computer implemented method of claim 3, wherein mutating one or more of the functions comprises at least one of a function crossover mutation, a function swap mutation, and a genome crossover mutation. 30. The computer implemented method of claim 29, wherein the function crossover mutation is based on a first mutation probability rate, the function swap mutation is based on a second mutation probability rate, and the genome crossover mutation is based on a third mutation probability rate. 31. The computer implemented method of claim 30, further comprising mutating at least one of the first, second and third mutation probability rates. 32. A computer program embodied on a computer readable medium for developing artificial intelligence through the generational evolution of one or more genomes, wherein each genome comprises a set of functions, the computer program comprising: a first computer code for creating one or more cortices, wherein each cortex comprises a plurality of cortical units, each cortical unit is created from one or more genomes, and wherein the one or more genomes provide the method for creating each cortical unit; a second computer code for operating the one or more cortices to perform one or more specified tasks; a third computer code for calculating a fitness score for each cortex based on its ability to perform the specified tasks; and a forth computer code for selecting one or more of the cortices based on the respective fitness scores. 33. The computer program of claim 32, wherein each of the plurality of cortical units in the cortex is created from the same genome. 34. The computer program of claim 33, further comprising: a fifth computer code for reproducing one or more of the genomes based on the fitness score of the corresponding cortex; and a sixth computer code for mutating one or more of the functions of the one or more genomes. 35. A computer system for developing artificial intelligence through the generational evolution of one or more genomes, wherein each genome comprises a set of functions, the computer system comprising: one or more processors; and a computer readable medium connected to the processors, the computer readable medium including processor instructions configured to be read by the processors and thereby cause the processors to: create one or more cortices, wherein each cortex comprises a plurality of cortical units, each cortical unit is created from one or more genomes, and wherein the one or more genomes provide the method for creating each cortical unit; operate the one or more cortices to perform one or more specified tasks; calculate a fitness score for each cortex based on its ability to perform the specified tasks; and select one or more of the cortices based on the respective fitness scores. 36. The computer system of claim 35, wherein each of the plurality of cortical units in the cortex is created from the same genome. 37. The computer system of claim 36, wherein the computer readable medium further includes processor instructions configured to be read by the processors and thereby further cause the processors to: reproduce one or more of the genomes based on the fitness score of the corresponding cortex; and mutate one or more of the functions of the one or more genomes. 38. A computer implemented method for developing artificial intelligence through the generational evolution of one or more sets of functions, comprising: creating one or more first objects, wherein each first object comprises a plurality of second objects, each second object is created from one or more genomes. and wherein the one or more genomes provide the method for creating each second object; operating the first objects to perform one or more specified tasks, wherein a fitness score is calculated for each first object based on its ability to perform the specified tasks; reproducing one or more of the genomes, wherein each genome is reproduced based on the fitness scores of the corresponding first objects that have second objects created by that genome; and mutating one or more functions of the one or more genomes. 39. The method of claim 38, wherein mutating one or more of the functions results in altering the processing dynamics of one or more of the first objects. 40. A computer implemented method for developing artificial intelligence through the generational evolution of one or more genomes, wherein each genome comprises a set of functions, the method comprising: creating one or more cortices, wherein each cortex comprises a plurality of cortical units, each cortical unit is created from one or more genomes, and wherein the one or more genomes provide the method for creating each cortical unit; operating the one or more cortices to perform one or more specified tasks; calculating a fitness score for each cortex based on its ability to perform the specified tasks; selecting one or more of the cortices based on the respective fitness scores; reproducing one or more of the genomes based on the fitness score of the corresponding cortex; and mutating one or more of the functions of the one or more genomes. 