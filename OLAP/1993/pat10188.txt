An interface for enabling an application program to control the movement of objects within a robotics workstation, the workstation including a plurality of objects, the plurality of objects being members of a group of objects, the interface including a module for representing a model of the workstation, the model including a representation of the locations of objects within the workstation; a module for processing a command from the application program, the command identifying a first object of interest, a second object of interest and a desired movement, the first and second objects of interest being selected from among the plurality of objects, the processing module including a module for identifying a robot that connects the first and second objects of interest within the model; and a module for sending a motion command to the identified robot.
Claims What is claimed is: 1. An interface for enabling an application program to control the movement of objects within a robotics workstation, said workstation including a plurality of objects, said plurality of objects being members of a group of objects, said interface comprising: means for representing a model of the workstation, said model including a representation of the locations of objects within the workstation; means for processing a command from the application program, said command identifying a first object of interest, a second object of interest and a desired movement, the first and second objects of interest being selected from among said plurality of objects, said processing means comprising: means for identifying a robot that connects said first and second objects of interest within said model; and means for sending a motion command to the identified robot. 2. The interface of claim 1 wherein said model specifies relative locations of objects with respect to other objects within the workstation. 3. The interface of claim 1 wherein said workstation includes a plurality of robots each of which is made up of a corresponding set of motion axes and wherein said identifying means comprises: a registry of all of said plurality of robots, said registry specifying for each of said plurality of robots a corresponding set of motion axes; means for searching said model to identify a set of robots that connect said first and second objects of interest to each other within said workstation; means for identifying a set of motion axes corresponding to said set of robots; and means for searching said registry to identify a single robot that corresponds to the identified set of motion axes, said single robot being said identified robot. 4. The interface of claim 1 wherein each of said objects is represented in said model by a corresponding data structure and wherein said model comprises one or more linked lists of data structures for said objects. 5. The interface of claim 4 wherein said locating means includes means for identifying, among said one or more linked lists, linked lists that contain the data structures corresponding to the first and second objects of interest and wherein said identifying means includes means for searching through the identified linked lists to identify said set of robots that connect said first and second objects of interest to each other within said workstation. 6. The interface of claim 5 wherein said locating means further includes means for identifying a single robot that corresponds to said identified set of robots, said single robot being said identified robot. 7. The interface of claim 1 further comprising means for computing a tool center point from at least one of said first and second objects of interest to said identified robot, and wherein said sending means also supplies the computed tool center point to said identified robot. 8. A method for enabling an application program to control the movement of objects within a robotics workstation, said workstation including a plurality of objects, said plurality of objects being members of a group of objects, said method comprising: generating a model of the workstation, said model including a representation of the locations of objects within the workstation; issuing a command from the application program, said command identifying a first object of interest, a second object of interest and a desired movement, the first and second objects of interest being selected from among said plurality of objects; in response to receiving the identity of the first and second objects of interest, automatically identifying a robot that connects said first and second objects of interest within said model; and sending a motion command to the identified robot. 9. The method of claim 8 wherein said model specifies relative locations of objects with respect to other objects within the workstation. 10. The method of claim 8 wherein said workstation includes a plurality of robots each of which is made up of a corresponding set of motion axes and wherein said identifying step comprises: searching said model to identify a set of robots that connect said first and second objects of interest to each other within said workstation; identifying a set of motion axes corresponding to said set of robots; and searching a registry of all of said plurality of robots to identify a single robot that corresponds to the identified set of motion axes, said registry specifying for each of said plurality of robots a corresponding set of motion axes, said single robot being said identified robot. 11. The method of claim 8 wherein each of said objects is represented in said model by a corresponding data structure and wherein said model comprises one or more linked lists of data structures for said objects. 12. The method of claim 11 wherein said locating step comprises identifying, among said one or more linked lists, linked lists that contain the data structures corresponding to the first and second objects of interest and wherein said robot identifying step comprises searching through the identified linked lists to identify said set of robots that connect said first and second objects of interest to each other within said workstation. 13. The method of claim 12 wherein said locating step further includes identifying a single robot that corresponds to said identified set of robots, said single robot being said identified robot. 14. The method of claim 8 further comprising computing a tool center point from at least one of said first and second objects of interest to said identified robot, and wherein said sending step also supplies the computed tool center point to said identified robot. 