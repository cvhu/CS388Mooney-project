A method and apparatus for handling deadlocks in a multichamber semiconductor wafer processing system known as a cluster tool. A plurality of software routines execute upon a sequencer of a cluster tool to perform deadlock avoidance, deadlock detection and deadlock resolution towards achieving optimal wafer throughput for a cluster tool.
Claims What is claimed is: 1. A method for handling deadlocks in a semiconductor wafer processing system having multiple process chambers comprising the steps of: (a) receiving a request to allocate a chamber to facilitate a move of a wafer from a requesting chamber to a knot chamber, wherein the knot chamber is a chamber that is used at least twice within a processing loop that contains a plurality of chambers; (b) determining a number of wafers being processed within the processing loop; (c) comparing the number of wafers being processed within the processing loop to a maximum number of wafers that can be processed within the processing loop; (d) if the number of wafers being processed within the processing loop is less than the maximum number of wafers that can be processed within the processing loop, then allocating the knot chamber to the requesting chamber; (e) otherwise, if the number of wafers being processed within the processing loop is at least the maximum number of wafers that can be processed within the processing loop, then denying the request. 2. The method of claim 1 further comprising the steps of: if said request is denied, waiting a predefined period of time, then repeating steps (b), (c), (d), and (e). 3. The method of claim 1 further comprising the steps of: identifying the requesting chamber as being a chamber within a processing loop or outside the processing loop; and prioritizing wafer movement to the knot chamber depending upon whether the requesting chamber is outside the processing loop or inside the processing loop. 4. A method for detecting a deadlock condition within a semiconductor wafer processing system having a plurality of process chambers comprising the steps of: (a) determining a first chamber having completed processing; (b) determining if a processing loop exists for a wafer in said first chamber; and (c) determining if a circular wait exists in said processing loop and, if a circular wait is found, indicating that a deadlock condition exists. 5. The method of claim 4 wherein steps (b) and (c) further comprise the steps of: (b1) searching a schedule for a wafer in said chamber for an available successor chamber to fulfill a next processing step in the schedule; (b2) if an available successor chamber is found, indicating that no deadlock exists; (b3) if no available successor chamber is found, determining if a successor chamber that is unavailable is the first chamber, then indicating that a deadlock exists; (b4) otherwise, if the successor chamber that is unavailable is other than the first chamber, then incrementing a successor chamber identifier by one, where the successor chamber is the first chamber and repeating steps (b1), (b2), (b3), and (b4) until all the chambers in a schedule for the wafer in the first chamber of step (a) have been processed to identify a circular wait. 6. The method of claim 5 wherein step (b3) further comprises the steps of: (b3')returning to a scheduling routine a list of all wafers involved in the circular wait and a list of all chambers containing wafers in the circular wait that have completed processing. 7. The method of claim 6 further comprising the step of: (d) removing a victim wafer from a chamber that is identified in step (b3') as having completed processing; and (e) placing the victim wafer in a temporary storage location to resolve the deadlock. 8. The method of claim 7 wherein step (d) removes a plurality of victim wafers. 9. The method of claim 7 wherein step (d) further comprises the steps of: (d1) prioritizing the wafers that are identified as being in the processing loop; and (d2) removing wafers from the processing loop as victim wafers in accordance with the prioritization of each wafer. 10. The method of claim 4 further comprising the step of (d) identifying a knot chamber within a processing loop having a deadlock, where the knot chamber is a chamber that is used at least twice within a processing loop that contains the plurality of process chambers. 11. The method of claim 10 wherein step (d) further comprises the steps of: (d1) removing a victim wafer from the knot chamber; and (d2) placing the victim wafer in a temporary storage location to resolve the deadlock. 12. The method of claim 11 wherein step (d1) removes a plurality of victim wafers. 13. The met hod of claim 11 wherein step (d1) further comprises the steps of: (d1')prioritizing the wafers that are identified as being in the processing loop; and (d2') removing wafers from the processing loop as victim wafers in accordance with the prioritization of each wafer. 14. The method of claim 13 wherein the wafers are prioritized in accordance with gamma-tolerant prioritization. 15. The method of claim 14 wherein gamma-tolerant prioritization comprises the steps of: identifying a wafer in the knot chamber, where moving the wafer into the knot chamber is designated a primary move; computing a latest time instant (t.sub.1p) a robot can be positioned at a highest priority chamber and be able to complete a wafer movement from the highest priority chamber without the highest priority chamber waiting for service for more than a predefined period; computing a meanwhile time period within which the robot can perform another move, a meanwhile move, prior to the latest time instant; and if the meanwhile time period does not exceed the latest time instant, performing the meanwhile move; otherwise, performing the primary move. 16. The method of claim 15 wherein the primary move is any wafer move that involves the knot chamber, and a meanwhile move is any wafer move that does not involve the knot chamber. 17. The method of claim 16 wherein the wafers involved in a primary move are prioritized, and wafers involved in a meanwhile move are prioritized, wherein the wafers are moved in a sequence according to the wafer prioritization. 18. The method of claim 17 wherein the primary move is any wafer move that involves the knot chamber, and a meanwhile move is any wafer move that does not involve the knot chamber. 19. The method of claim 14 wherein gamma-tolerant prioritization comprises the steps of: identifying a wafer in the knot chamber, where moving the wafer in the knot chamber is designated a primary move; determining a time to complete (.DELTA..sub.pr) processing for the knot chamber; computing a time to perform (.DELTA..sub.mw) a wafer move for at least one other chamber; dividing (.DELTA..sub.mw) by (.DELTA..sub.pr) to produce a quotient; comparing the quotient to a threshold value; if the quotient is less than the threshold value, then performing the primary move; and if the quotient is greater than the threshold value, then performing the meanwhile move. 20. In a system for controlling the process sequence of wafers through a cluster tool containing a plurality of chambers, a general purpose computer system that operates as a special purporse controller when executing a program stored in a computer readable medium to perform a process comprising the steps of: (a) receiving a request to allocate a chamber to facilitate a move of a wafer from a requesting chamber to a knot chamber, where the knot chamber is a chamber that is used at least twice within a processing loop that contains a plurality of chambers; (b) determining a number of wafers being processed within the processing loop; (c) comparing the number of wafers being processed within the processing loop is less than the maximum number of wafers that can be processed within the processing loop, then allocating the knot chamber to the requesting chamber; (d) otherwise, if the number of wafers being processed within the processing loop is at least the maximum number of wafers that can be processed within the processing loop, then denying the request. 21. The process of claim 20 further comprising the steps of: if said request is denied, waiting a predefined period of time, then repeating steps (b), (c), (d), and (e). 22. The process of claim 20 further comprising the steps of: identifying the requesting chamber as being a chamber within a processing loop or outside the processing loop; and prioritizing wafer movement to the knot chamber depending upon whether the requesting chamber is outside the processing loop or inside the processing loop. 23. In a system for controlling the process sequence of wafers through a cluster tool containing a plurality of chambers, a general purpose computer system that operates as a special purpose controller when executing a program stored in a computer readable medium to perform a process comprising the steps of: (a) determining a first chamber having completed processing; (b) determining if a processing loop exists for a wafer in said first chamber; and (c) determining if a circular wait exists in said processing loop and, if a circular wait is found, indicating that a deadlock condition exists. 24. The process of claim 23 wherein steps (b) and (c) further comprise the steps of: (b1) searching a schedule for a wafer in said chamber for an available successor chamber to fulfill a next processing step in the schedule; (b2) if an available successor chamber is found, indicating that no deadlock exists; (b3) if no available successor chamber is found, determining if a successor chamber that is unavailable is the first chamber, then indicating that a deadlock exists; (b4) otherwise, if the successor chamber that is unavailable is other than the first chamber, then incrementing a successor chamber identifier by one, where the successor chamber is the first chamber and repeating steps (b1), (b2), (b3), and (b4) until all the chambers in a schedule for the wafer in the first chamber of step (a) have been processed to identify a circular wait. 25. The process of claim 24 wherein step (b3) further comprises the steps of: (b3') returning to a scheduling routine a list of all wafers involved in the circular wait and a list of all chambers containing wafers in the circular wait that have completed processing. 26. The process of claim 25 further comprising the step of: (d) removing a victim wafer from a chamber that is identified in step (b3') as having completed processing; and (e) placing the victim wafer in a temporary storage location to resolve the deadlock. 27. The process of claim 26 wherein step (d) removes a plurality of victim wafers. 28. The process of claim 26 wherein step (d) further comprises the steps of: (d1) prioritizing the wafers that are identified as being in the processing loop; and (d2) removing wafers from the processing loop as victim wafers in accordance with the prioritization of each wafer. move is any wafer move that does not involve the knot chamber. 29. The process of claim 25 further comprising the step of (d) identifying a knot chamber within a processing loop having a deadlock, where the knot chamber is a chamber that is used at least twice within a processing loop that contains the plurality of process chambers. 30. The process of claim 29 wherein step (d) further comprises the steps of: (d1) removing a victim wafer from the knot chamber; and (d2) placing the victim wafer in a temporary storage location to resolve the deadlock. 31. The process of claim 30 wherein step (d1) removes a plurality of victim wafers. 32. The process of claim 30 wherein step (d1) further comprises the steps of: (d1') prioritizing the wafers that are identified as being in the processing loop; and (d2') removing wafers from the processing loop as victim wafers in accordance with the prioritization of each wafer. 33. The process of claim 32 wherein the wafers are prioritized in accordance with gamma-tolerant prioritization. 34. The process of claim 33 wherein gamma-tolerant prioritization comprises the steps of: identifying a wafer in the knot chamber, where moving the wafer in the knot chamber is designated a primary move; computing a latest time instant (t.sub.1p) a robot can be positioned at a highest priority chamber and be able to complete a wafer movement from the highest priority chamber without the highest priority chamber waiting for service for more than a predefined period; computing a meanwhile time period within which the robot can perform another move, a meanwhile move, prior to the latest time instant; and if the meanwhile time period does not exceed the latest time instant, performing the meanwhile move; otherwise, performing the primary move. 35. The process of claim 34 wherein the primary move is any wafer move that involves the knot chamber, and a meanwhile move is any wafer move that does not involve the knot chamber. 36. The process of claim 34 wherein the wafers involved in a primary move are prioritized, and wafers involved in a meanwhile move are prioritized, where the wafers are moved in a sequence according to the wafer prioritization. 37. The process of claim 33 wherein gamma-tolerant prioritization comprises the steps of: identifying a wafer in the knot chamber, where moving the wafer in the knot chamber is designated a primary move; determining a time to complete (.DELTA..sub.pr) processing for the knot chamber; computing a time to perform (.DELTA..sub.mw) a wafer move for at least one other chamber; dividing (.DELTA..sub.mw) by (.DELTA..sub.pr) to produce a quotient; comparing the quotient to a threshold value; if the quotient is less than the threshold value, then performing the primary move; and if the quotient is greater than the threshold value, then performing the meanwhile move. 38. The process of claim 37 wherein the primary move is any wafer move that involves the knot chamber, and a meanwhile move is any wafer move that does not involve the knot chamber. 39. The process of claim 38 wherein the wafers involved in a primary move are prioritized, and wafers involved in a meanwhile move are prioritized, where the wafers are moved in a sequence according to the wafer prioritization. 