A robot assembly system which uses a set of related databases to separately describe (1) what task is to be performed by the system, (2) details about how to perform the task (e.g., specifying the strategy routine to be used to insert a part into an assembly), and (3) data describing the workcell and object locations. The system includes software routines which control how each robotic operation is performed, but those aspects of each robotic operation which vary from part to part or from operation to operation are determined by the data in the databases. By keeping the what, how and where aspects of each assembly task separate, the present invention makes it possible to change them independently. Furthermore, the task to be performed by the system is typically defined by a Sequence database, which enables new tasks to be defined by simple, task level programming instructions, such as TRANSFER PART sn7400 TO u20.
Claims What is claimed is: 1. A robotic assembly system, comprising: a moveable member for moving specified objects from specified source locations to specified destinations within a specified workcell; and a controller, coupled to said moveable member, for controlling the movement of said moveable member, including: a set of primitive routines for controlling the operation of said moveable member while performing predefined tasks in accordance with specified parameters; a set of separate, interrelated data structures for storing data defining a robotic assembly sequence by separately denoting the tasks to be performed, data defining the relative positions of the set of locations which define said workcell, and data defining how each said task is to be performed, said data structures including: at least one location database for defining the locations to be used in said assembly sequence, including means for storing parameter values, for each of at least a multiplicity of said locations, which govern how said moveable member moves when moving to each said location; at least one part database for defining the objects to be moved by said system, including means for storing data defining for each said object at least one potential source location, and at least one parameter which specifies one of said primitive routines for use when moving said object; and at least one sequence database for specifying the sequence of tasks to be performed in said assembly sequence, including a multiplicity of records, each record storing data specifiying an object in said part database, and a location in said location database to which said object is to be moved; and movement directing means, coupled to said primitive routines and said interrelated data structures, for reading the data stored in said location, part and sequence databases and for executing said primitive routines in a sequence and using parameters specified in corresponding ones of said databases; whereby the data in said databases collectively specify the operation of said moveable member. 2. The system of claim 1, wherein said data structures include a specified sequence database with a multiplicity or records; and said robotic assembly sequence is specified by a set of tasks level statements, each task level statement specifying a set of robotic operations which together comprise a predefined type of robotic task; each said task level statement being represented by a separate record in said specified sequence database, each said record including means for referencing parameter values, stored in other ones of said data structures, to be used when performing each of said robotic operations. 3. The system of claim 1, wherein said location databases include an assembly database for defining a multiplicity of destination locations for said assembly sequence, including means for defining movement parameters for each said destination location to control how said moveable member moves when approaching said destination location; said primitive routines include at least one movement routine which controls how said moveable member moves in accordance with said movement parameters. 4. The system of claim 3, wherein said movement parameters include a speed parameter which corresponds to the speed at which said moveable member is to move when approaching said destination location. 5. The system of claim 3, wherein said assembly database includes means for defining an approach location for each said destination location, said approach location comprising a position which said moveable member is to move through when approaching said destination location. 6. The system of claim 1, wherein said system includes a plurality of part feeders for supply parts to be moved by said robotic system, each said feeder including means for generating an ready signal indicating that said feeder is ready to supply a part; and a feeder database for defining the characteristics of said feeders, including means for denoting for each said feeder the location of said feeder and the identity of said feeder's ready signal; said part database including means for denoting for each said object, a pointer to the information in said feeder database for at least one corresponding part feeder. 7. The system of claim 1, wherein said objects are classified into a plurality of part types; said part database includes parttype denoting means for denoting for each said object, the part type corresponding to said part; said system includes a part type database for denoting for each said part type which ones of said primitive routines are to be used when moving parts denoted in said part database as being of said part type. 8. A method of programming a robotic assembly system to perform an assembly sequence, said robotic assembly system having a moveable member for moving specified objects from specified source locations to specified destinations within a specified workcell, the steps of the method comprising: providing a set of primitive routines for controlling the operation of said moveable member while performing predefined tasks in accordance with specified parameters; providing a set of separate, interrelated data structures for storing data defining a robotic assembly sequence by separately denoting the tasks to be performed, data defining the relative positions of the set of locations which define said workcell, and data defining how each said task is to be performed, said data structures including: at least one location database for defining the locations to be used in said assembly sequence, including means for storing parameter values, for each of at least a multiplicity of said locations, which govern how said moveable member moves when moving to each said location; at least one part database for defining the objects to be moved by said system, including means for storing data defining for each said object at least one potential source location, and at least one parameter which specifies one of said primitive routines for use when moving said object; and at least one sequence database for specifying the sequence of tasks to be performed in said assembly sequence, including a multiplicity of records, each record storing data specifying an object in said part database, and a location in said location database to which said object is to be moved; and executing said primitive routines in a sequence and using parameters specified in corresponding ones of said databases; whereby the data in said databases collectively specify the operation of said moveable member. 9. The method of claim 8, wherein said data structures include a specified sequence database with a multiplicity or records; and said assembly sequence is specified by a set of tasks level statements, each task level statement specifying a set of robotic operations which together comprise a predefined type of robotic task; each said task level statement being represented by a separate record in said specified sequence database, each said record including means for referencing parameter values, stored in other ones of said data structures to be used when performing each of said robotic operations. 10. The method of claim 8, wherein said location databases include an assembly database for defining a multiplicity of destination locations for said assembly sequence, including means for defining movement parameters for each said destination location to control how said moveable member moves when approaching said destination location; said primitive routines include at least one movement routine which controls how said moveable member moves in accordance with said movement parameters. 11. The method of claim 10, wherein said movement parameters include a speed parameter which corresponds to the speed at which said moveable member is to move when approaching said destination location. 12. The method of claim 10, wherein said assembly database includes means for defining an approach location for each said destination location, said approach location comprising a position which said moveable member is to move through when approaching said destination location. 13. The method of claim 8, further including the step of modifying a specified aspect of a specified assembly sequence to be performed by said robotic assembly system by modifying and/or adding the data stored in corresponding ones of said interrelated data structures; whereby an assembly sequence can be specified and modified by storing corresponding data values in said interrelated data bases; the same said set of primitive routines being usable for a wide variety of specified assembly sequences. 14. The method of claim 8, wherein an assembly task can be partially specified by storing in said interrelated data structures only a portion of the data required to completely specify the assembly task; said method further including the step of interactively training said robotic assembly system to perform a specified assembly sequence, said interactive training step including the steps of: executing said primitive routines in the sequence specified in a selected sequence database; stopping the execution of said primitive routines when the execution of a primitive routine requires a data value which has not been stored in said interrelated data structures; prompting the operator of said robotic assembly system to enter the data values required to continue performing said specified assembly sequence; resuming the performance of said specified assembly sequence when said required data values have been entered and stored in said interrelated data structures. 15. The system of claim 1, further including editing means for modifying selected aspects of a specified assembly sequence, including means for modifying and adding to the data stored in said interrelated data structures; whereby an assembly sequence can be specified and modified by storing corresponding data values in said interrelated data bases; the same said set of primitive routines being usable for a wide variety of specified assembly sequences. 16. The system of claim 1, wherein an assembly task can be partially specified by storing in said interrelated data structures only a portion of the data required to completely specify the assembly task; said system including walk through training means for interactively training said robotic assembly system to perform a specified assembly sequence, said walk through training means including means for: executing said primitive routines in the sequence specified in a selected sequence database; stopping the execution of said primitive routines when the execution of a primitive routine requires a data value which has not been stored in said interrelated data structures; prompting the operator of said robotic assembly system to enter the data values required to continue performing said specified assembly sequence; and resuming the performance of said specified assembly sequence when said required data values have been entered and stored in said interrelated data structures. 17. A robotic assembly system, comprising: a moveable member for moving specified objects from specified source locations to specified destinations within a specified workcell; a set of predefined primitive routines for controlling the operation of said moveable member in accordance with specified parameters; a set of interrelated databases for storing data defining a robotic assembly sequence, distinct ones of said databases separately storing data denoting a sequence of tasks to be performed by said moveable member, and parameter values for said primitive routines defining how each said task is to be performed; movement directing means, coupled to said primitive routines and said interrelated databases, for reading the data stored in said interrelated databases and for executing said primitive routines in a sequence and using parameters specified in corresponding ones of said databases; whereby the data in said databases collectively specify the operation of said moveable member. 18. The system of claim 17, wherein an assembly task can be partially specified by storing in said interrelated databases only a portion of the data required to completely specify the assembly task; said system including walk through training means for interactively training said robotic assembly system to perform a specified assembly sequence, said walk through training means including means for: executing said primitive routines in a sequence corresponding to a sequence of tasks denoted by the data stored in said interrelated databases; stopping the execution of said primitive routines when the execution of a primitive routine requires a data value which has not been stored in said interrelated databases; prompting the operator of said robotic assembly system to enter the data values required to continue performing said specified assembly sequence; and resuming the performance of said specified assembly sequence when said required data values have been stored in said interrelated databases. 19. The system of claim 17, wherein said data structures include a specified sequence database with a multiplicity or records; and said robotic assembly sequence is specified by a set of tasks level statements, each task level statement specifying a set of robotic operations which together comprise a predefined type of robotic task; each said task level statement being represented by a separate record in said specified sequence database, each said record including means for referencing parameter values, stored in other ones of said data structures, to be used when performing each of said robotic operations. 20. A method of defining a robotic assembly sequence to be performed by a robotic assembly system having a moveable member for moving specified objects from specified source locations to specified destinations within a specified workcell, the steps of the method comprising: providing a predefined set of primitive routines for controlling the operation of said moveable member in accordance with specified parameters; storing in a set of separate, interrelated databases, data denoting a sequence of assembly tasks and parameter values defining how each said task is to be performed; and providing assembly execution means for executing said primitive routines in a sequence and using parameters specified by the data stored in corresponding ones of said databases; whereby the data in said databases collectively specify the operation of said moveable member. 21. The method of claim 20, wherein an assembly task can be partially specified by storing in said interrelated databases only a portion of the data required to completely specify the assembly task; said method further including the step of interactively training said robotic assembly system to perform a specified assembly sequence, said interactive training step including the steps of: executing said primitive routines in a sequence corresponding to a sequence of tasks denoted by the data stored in said interrelated databases; stopping the execution of said primitive routines when the execution of a primitive routine requires a data value which has not been stored in said interrelated databases; prompting the operator of said robotic assembly system to enter the data values required to continue performing said specified assembly sequence; resuming the performance of said specified assembly sequence when said required data values have been stored in said interrelated databases. 