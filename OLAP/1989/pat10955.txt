An improved machine programming and control system includes the utilization of a continuous, multiple-block, flow chart or charts, all or a portion of which is displayed. Each entered flow chart is executed without conversion to other languages, such that machines are controlled in accordance with the flow charts that are displayed. Multiple flow charts may be entered each to separately control different machines or different parts of the same machine. The flow charts are displayed in a multiple-block presentation and a block numbering system permits rapid on-screen generation of flow charts, editing of the flow charts, and debugging of the flow charts through the utilization of an interrupt. A uniquely improved debugging system, active on an execution interrupt, permits rapid value changing for selected displayed flow chart blocks and permits a single-scan program rerun for verification. Upon run-time interruption, either the number of the flow chart block being executed at the time of interruption is automatically displayed or the block is highlighted so that a flow chart or charts may be edited and corrected on-the-fly. A new formatting system, inserts a block number format entry in the object program which is the output of the compiler, which entry is skipped by an Executive program during run-time execution, but which is retrievable upon a debugging cycle.
Claims We claim: 1. A machine programming and control system including means for generating, editing, and displaying a continuous multi-block flow chart representing a program for controlling the operations of a machine, continuous and contiguous portions of said flow chart containing more than one flow chart block being displayed; means for directly compiling said programs from said flow chart; and, means for executing the compiled program represented by said flow chart such that said machine is controlled in accordance with a displayed flow chart, whereby generation and editing of said flow chart is facilitated by the display of multiple, continuous, and contiguous flow chart blocks. 2. The system of claim 1 and further including means during a run-time execution of said program for interrupting said execution and for displaying that portion of said flow chart which corresponds to the section of the program which was execution at the time of said interruption, thereby to permit easy alteration or debugging of the program represented by said flow chart. 3. The system of claim 2 and further including means for numbering the flow chart blocks, and wherein said interrupting means includes mea s for displaying the number of the flow chart block which corresponds to the section of the program executing at the time of said interruption. 4. In a machine programming and control system having a program for controlling a machine, which program is defined by a multi-block flow chart displayed on a monitor and which program is executed during a run-time execution, an improved debugging system including means active on a run-time execution interrupt for permiting changing of at least one block of said flowchart, said means including means for displaying at least a portion of said flow chart which includes the block of said flow chart which corresponds to the section of the program which is executing at the time of the execution interrupt. 5. The system of claim 4 and further including means for rerunning a program which has been altered by changing of a flow chart block, said rerunning means including a single-scan means to rerun the altered program without recompiling. 6. The system of claim 4 wherein the display means comprises means for highlighting the flow chart block corresponding to the section of the program which is executing at the time of interruption. 7. The system of claim 4 and further including means for highlighting the flow path of flow chart blocks leading to the flow chart block corresponding to the section of the program which is executing at the time of said interruption. 8. A formatting system for use in the execution of a flow chart, including means for displaying a format block and corresponding numbers; means for compiling and executing the program represented by said flow chart; means coupled to said display means for inserting and displaying a flow chart block number before all other format blocks; and means for both ignoring said block number during run-time execution, and for calling up and displaying said block number upon interruption of run-time execution, thereby to identify the particular flow chart block which corresponds to the section of the program which is executing at the time of interrupt. 