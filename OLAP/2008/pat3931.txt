A method of stabilizing a haptic interface and a haptic system using the same, are provided. The method comprises detecting a value of a physical parameter related to a motion generated by a human operator's action in an actual element included in the haptic device at each predetermined time interval, calculating a force to respond to the human operator reversely through the haptic device in the virtual environment in response to the value of the physical parameter, calculating a bounding parameter that satisfies first stabilization conditions in which energy generated during sampling and holding is to be dissipated by the haptic device and second stabilization conditions in which energy generated by the control system is to be passive, from the calculated force and the calculated value of the physical parameter, if the calculated bounding parameter is out of a predetermined bounding range, adjusting the calculated bounding parameter in the predetermined bounding range, adjusting a force to be applied to the actual element included in the haptic device using the adjusted bounding parameter; applying the adjusted force to the actual element included in the haptic device, and repeatedly performing the detecting of the value of the physical parameter through the applying of the adjusted force at each predetermined time interval. According to the method and system, lowering of a realistic degree which a haptic system pursues is prevented and the haptic system can be stabilized.
Claims What is claimed is: 1. A method of stabilizing a haptic interface of a haptic system in which an interaction between a control system including a virtual environment and a haptic device is supported, the method comprising: detecting a value of a physical parameter related to a motion generated by a human operator's action in an actual element included in the haptic device at each predetermined time interval; calculating a force to respond to the human operator reversely through the haptic device in the virtual environment in response to the value of the physical parameter; calculating a bounding parameter that satisfies first stabilization conditions in which energy generated during sampling and holding is to be dissipated by the haptic device and second stabilization conditions in which energy generated by the control system is to be passive, from the calculated force and the calculated value of the physical parameter; if the calculated bounding parameter is out of a predetermined bounding range, adjusting the calculated bounding parameter in the predetermined bounding range; adjusting a force to be applied to the actual element included in the haptic device using the adjusted bounding parameter; applying the adjusted force to the actual element included in the haptic device; and repeatedly performing the detecting of the value of the physical parameter through the applying of the adjusted force at each predetermined time interval, wherein the bounding parameter .beta.(k) is calculated by .beta..function..function..function..times..times..times..times..beta..fu- nction..times..function..function. ##EQU00036## where T is the predetermined time interval, F.sub.e(k) is a force to respond to the human operator in the virtual environment in response to the physical parameter detected at a k-th time interval, F.sub.d(k-1) is a force applied to an actual element of the haptic device 41 at a (k-1)-th time interval, and V.sub.d,k and X.sub.d,k is velocity or position detected by the haptic device by human operator's manipulation. 2. The method of claim 1, wherein in the adjusting of the calculated bounding parameter, if the bounding parameter .beta.(k) is greater than a predetermined maximum value .beta.max, the bounding parameter .beta.(k) is adjusted to the maximum value .beta.max, if the bounding parameter .beta.(k) is smaller than a predetermined minimum value .beta.min, the bounding parameter .beta.(k) is adjusted to the minimum value .beta.min, and if the bounding parameter .beta.(k) is between the maximum value .beta.max and the minimum value .beta.min, the bounding parameter .beta.(k) is used without changes. 3. A haptic system in which an interaction between a control system including a virtual environment and a haptic device is supported, the haptic system comprising: a sensor detecting a physical parameter related to a motion generated by the haptic device by a human operator's action; and an energy bounding processor installed in the control system, calculating a bounding parameter that satisfies first stabilization conditions in which energy generated during sampling and holding is to be dissipated by the haptic device and second stabilization conditions in which energy generated by the control system is to be passive, from a force to respond to the human operator reversely through the haptic device in the virtual environment in response to the physical parameter detected by the sensor at each predetermined time interval and the physical parameter, if the calculated bounding parameter is out of a predetermined bounding range, adjusting the calculated bounding parameter in the predetermined bounding range, calculating a force to be applied to the actual element included in the haptic device using the bounding parameter determined by adjustment, and applying the adjusted force to the actual element included in the haptic device, wherein the bounding parameter .beta.(k) is calculated by .beta..function..function..function..times..times..times..times..beta..fu- nction..times..function..function. ##EQU00037## where T is the predetermined time interval, F.sub.e(k) is a force to respond to the human operator 30 in the virtual environment in response to the physical parameter detected by the sensor at a k-th time interval, F.sub.d(k-1) is a force applied to an actual element of the haptic device 41 at a (k-1)-th time interval, and V.sub.d,k and X.sub.d,k is velocity or position detected by the haptic device by human operator's manipulation. 4. The system of claim 3, wherein the energy bounding processor adjusts the calculated bounding parameter .beta.(k) to the maximum value .beta.max if the bounding parameter .beta.(k) is greater than a predetermined maximum value .beta.max, adjusts the bounding parameter .beta.(k) to the minimum value .beta.min if the bounding parameter .beta.(k) is smaller than a predetermined minimum value .beta.min, and adjusts the bounding parameter .beta.(k) to be used without change if the bounding parameter .beta.(k) is between the maximum value .beta.max and the minimum value .beta.min. 