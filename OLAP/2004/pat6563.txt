A method of avoiding collisions between a robot and at least one other object such as another robot is provided in which the user does not need to make any provisions in a robot program for avoiding collisions and defining common work-areas. Furthermore, the method allows for automatic configuration of the workcell from a collision avoidance standpoint. It determines automatically which components have potential collisions with which other components. Since the inventive method is based on predicting the configurations of the moving components over a period of time sufficient enough to allow the machines to stop safely and checks for interference, a priori knowledge of trajectories is not required. If a collision is predicted the machines are commanded to a stop on or off their paths. In this way the inventive collision avoidance method can also be used as a safeguard with other explicit methods.
Claims What is claimed is: 1. A method of avoiding collisions between components of a multi-axial industrial robot and at least one other object, said method comprising repeatedly: determining a stopping time for an automatically or manually controlled robot movement of the multi-axial industrial robot on the basis of actual and past joint positions of the multi-axial industrial robot and velocities of each robot joint; forecasting a configuration of a trajectory of the components of the multi-axial industrial robot at said stopping times; checking the predicted configuration through distance/interference algorithms for interference of the multi-axial industrial robot components with components of the at least at least one other obiect; and stopping the robot and/or said other objects in case a collision is imminent. 2. A method according to claim 1, wherein the robot is stopped on the trajectory. 3. A method according to claim 1, wherein the robot is stopped off the trajectory. 4. A method according to claim 1 or 2 or 3, wherein interference checking involves determining distances between geometric approximations of components of the robot and the at least at least one other object. 5. A method according to claim 4, wherein said geometric approximations have different levels of accuracy which are checked according to a desired accuracy in distance checking. 6. A method according to claim 1, wherein forecasting the trajectory of a joint involves application of a relationship: where .theta..sub.i is a predicted position of joint i, where .theta..sub.i,0 and .theta..sub.i,0 are a position and a velocity of a joint i at a current time t, respectively, where t.sub.i,s is the stopping time of joint i, and where .gamma..sub.i is an estimated current joint acceleration. 7. A method according to claim 6, wherein a velocity of a joint i is estimated from the joint position at a current time and at earlier times using: ##EQU4## where .theta..sub.i,-k =.theta..sub.i (t.sub.-k), t.sub.-k =t-k.multidot..DELTA.t, and c.sub.f =1/(12 .DELTA.t), c.sub.0 =25, c.sub.1 =-48, c.sub.2 =36, c.sub.3 =-16, c.sub.4 =3. 8. A method according to claim 7, wherein the acceleration of a joint i is estimated from the joint velocity at a current time and at earlier times, using: ##EQU5## 9. A method according to claim 8, wherein configuration forecasting and interference checking involves: determining a stopping distance of a joint i from ##EQU6## where .gamma..sub.i,max, is a maximum negative acceleration of the joint; adding the stopping distance to the actual position of the joint to obtain a configuration over the stopping time; and determining a distance between robot components and the at least one other obiect at said configuration. 10. A method according to claim 1, wherein a filter is applied to a joint position and velocity data used for position prediction. 11. A method according to claim 10, wherein said filter is applied in the time domain. 12. A method according to claim 11, wherein said filter is a running average. 13. A method according of claim 1, wherein configuration forecasting and interference checking involves using at least one neural network to estimate stopping times of the robot axes. 14. A method according to claim 13, wherein one neural network is used for each robot joint. 15. A method according to claim 14, wherein input to said neural networks includes one or more element (s) from a group comprising joint velocities, joint angles, joint positions, robot base positions, robot base velocities and tool or load masses. 16. A method according claim 1, wherein all acquired information concerning collisions is stored in a workcell description file for communication to a real-time operating system responsible for controlling the robot movement. 17. A method according to claim 16, wherein the workcell description file contains pointers to geometric approximation files needed to describe all objects present in the workcell. 18. A method according to claim 17, wherein a copy of the workcell description file is maintained and updated on each cooperative control mechanism present in the workcell. 19. A method according to claim 18, wherein the workcell description file is updated at least when a geometric change happens in the workcell. 20. A method according to claim 19, wherein the workcell description file including a description of the geometric change is updated in the real-time operating system. 21. A method according to claim 1, wherein prior to an allowed contact between the robot and an object, a link is established causing the robot not to stop during a subsequent collision. 22. A method according to claim 21, wherein the link is broken after the allowed contact operation is terminated. 23. A control device for avoiding collisions between components of a multi-axial industrial robot and at least one other object, the control device comprising: means for repeatedly determining a stopping time for an automatically or manually controlled robot movement on the basis of actual and past joint positions and velocities of each robot joint of the multi-axial industrial robot; means for repeatedly forecasting a configuration of a trajectory of the robot at said stopping times; means for repeatedly checking the predicted configuration through distance/interference algorithms for interference of the robot components with components of the at least at least one other object; and means for stopping the multi-axial industrial robot and/or the at least one other object in case a collision is imminent. 24. A control device according to claim 23, comprising processor means for running two operating systems in parallel, one of which being a standard PC operating system, the other one being a real-time operating system for controlling a robot motion. 25. A control device according to claim 24, wherein said processor means in connection with the realtime operating system provides for communication with real-time operating systems of other corresponding control devices present in the same workcell. 26. A control device according to claim 25, wherein said processor means run an interpretation program for communication between the PC and the real-time operating systems. 27. A control device according to claim 24 or 25 or 26, wherein said processor means run respective parts of a program implementing a collision avoidance method. 28. A control device according to claim 24 or 25 or 26, comprising memory units in conjunction with both operating systems for storing workcell related geometry data. 29. A control device according to claim 28, further comprising an input device for inputting workcell related geometric data. 30. A control device according to claim 29, wherein the input device is a disk drive or a network connection device. 