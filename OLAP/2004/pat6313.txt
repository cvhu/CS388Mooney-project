The invention consists of a learning system (108) based on the Dynamical System Architecture (DSA). Every implementation of the DSA is composed of a dynamic system (112) and a static system (116). The dynamic system (112) generates an intermediate output (114), which together with an external input (100) is fed into the static system (116), which produces a generated output (106). Every time the dynamic system (112) is reset it produces the same trajectory: an intermediate output (114) that does not cross over itself during the temporal span of each of the events generated by a reference system (102) whose behavior has to be duplicated. The static system (116) can be anything that behaves like a trainable universal function approximator. Training uses the intermediate output (114), the external input (100), the observed output (104) produced by the reference system (102) whose behavior is going to be mimicked, and a self-organizing procedure that only modifies the parameters of the static system (116). Training of the dynamic system (112) is not necessary.
Claims I claim: 1. A method for designing a learning system comprising: obtaining a plurality of samples from a plurality of time bounded events generated by a reference system, where said samples characterize the amount of time passed since corresponding said time bounded event started and corresponding said sample was taken, characterize a corresponding external input going into said reference system when corresponding said sample is taken, and characterize a corresponding observed output coming from said reference system when corresponding said sample is taken; implementing a dynamic system such that after it is reset it always produces a same intermediate output, where said intermediate output does not repeat itself within the temporal span of the events produced by said reference system; implementing a static system, whose inputs comprise said intermediate output and said external input, whose output is a generated output; and modifying the parameters of said static system using said samples and a training procedure, such that said generated output converges to said observed output produced by said reference system; whereby said learning system is able to produce said generated output arbitrarily close to said observed output when both said learning system and said reference system use the same said external input as input. 2. The dynamic system of claim 1 wherein it is implemented using a computer and an appropriate computer program that produces a monotonic trajectory. 3. The dynamic system of claim 1 wherein it is implemented using a computer and an appropriate computer program that simulates a recurrent neural network. 4. The dynamic system of claim 1 wherein it is implemented in digital hardware. 5. The dynamic system of claim 1 wherein it is implemented in analog hardware. 6. The dynamic system of claim 1 wherein it is implemented using a physical system. 7. The static system of claim 1 wherein it is implemented using a multilayer perceptron architecture. 8. The static system of claim 1 wherein it is implemented using a radial basis function architecture. 9. The static system of claim 1 wherein it is implemented using a support vector machine. 10. A system for designing a learning system comprising: means for obtaining a plurality of samples from a plurality of time bounded events generated by a reference system, where said samples characterize the amount of time passed since corresponding said time bounded event started and corresponding said sample was taken, characterize a corresponding external input going into said reference system when corresponding said sample is taken, and characterize a corresponding observed output coming from said reference system when corresponding said sample is taken; means for implementing a dynamic system such that after it is reset it always produces a same intermediate output, where said intermediate output does not repeat itself within the temporal span of the events produced by said reference system; means for implementing a static system, whose inputs comprise said intermediate output and said external input, whose output is a generated output; and means for modifying the parameters of said static system using said samples and a training procedure, such that said generated output converges to said observed output produced by said reference system; whereby said learning system is able to produce said generated output arbitrarily close to said observed output when both said learning system and said reference system use the same said external input as input. 11. The means for implementing a dynamic system of claim 10 wherein they include a computer and an appropriate computer program that produces a monotonic trajectory. 12. The means for implementing a dynamic system of claim 10 wherein they include a computer and an appropriate computer program that simulates a recurrent neural network. 13. The means for implementing a dynamic system of claim 10 wherein they include digital hardware. 14. The means for implementing a dynamic system of claim 10 wherein they include analog hardware. 15. The means for implementing a dynamic system of claim 10 wherein they include a physical system. 16. The means for implementing a static system of claim 10 wherein they include a multilayer perceptron architecture. 17. The means for implementing a static system of claim 10 wherein they include a radial basis function architecture. 18. The means for implementing a static system of claim 10 wherein they include a support vector machine. 