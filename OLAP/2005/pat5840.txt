Methods and apparatus that provide a hardware abstraction layer (HAL) for a robot are disclosed. A HAL can reside as a software layer or as a firmware layer residing between robot control software and underlying robot hardware and/or an operating system for the hardware. The HAL provides a relatively uniform abstract for aggregates of underlying hardware such that the underlying robotic hardware is transparent to perception and control software, i.e., robot control software. This advantageously permits robot control software to be written in a robot-independent manner. Developers of robot control software are then freed from tedious lower level tasks. Portability is another advantage. For example, the HAL efficiently permits robot control software developed for one robot to be ported to another. In one example, the HAL permits the same navigation algorithm to be ported from a wheeled robot and used on a humanoid legged robot.
Claims What is claimed is: 1. A method in a robot of providing hardware abstraction for robot control software, the method comprising: providing a plurality of resource drivers for the robot, where the plurality of resource drivers includes resource drivers for which no corresponding hardware is present on the robot; detecting a hardware configuration for the robot; automatically detecting resources that are available on the robot based on the detected hardware configuration; receiving a request from the robot control software to use a type of resource; automatically selecting a resource from the available resources that corresponds to the type of resource requested by the robot control software; exchanging a first information with the robot control software, where the first information is related to use of the selected resource and is provided in a unit of measure that is related to a robot; exchanging a second information with a low-level device driver corresponding to the resource, where the second information is related to the use requested by the robot control software, where the second information is provided in a unit of measure that is related to a corresponding device, and where the second information is different than the first information; and converting between the first information and the second information based on the detected configuration of the robot. 2. The method as defined in claim 1, where the first information is linear velocity and the second information is angular velocity. 3. The method as defined in claim 1, wherein the method is embodied in an application program interface (API). 4. The method as defined in claim 1, wherein the type of resource comprises a distance sense, and wherein the resource that is selected correspondS to a device selected from the group consisting of a bump sensor, a laser range finder, an ultrasonic sensor, and an infrared sensor. 5. The method as defined in claim 1, wherein the robot initially includes a bump sensor, and wherein the hardware configuration for the robot specifies the bump sensor, further comprising: changing the bump sensor to an infrared sensor; changing the hardware configuration for the robot; and automatically converting between the first information and the second information based on the new detected configuration of the robot such that the robot control software can be used without modification. 6. The method as defined in claim 1, further comprising: including a security parameter with a method call; verifying a security ticket when access is requested to a resource; and controlling access to the resource based on the security ticket. 7. The method as defined in claim 1, further comprising: maintaining a reservation count parameter that is updated based on access to a resource; and controlling access to the resource based on the count. 8. A computer-readable medium having computer-executable instructions for performing a method comprising: providing a plurality of resource drivers for the robot, where the plurality of resource drivers includes resource drivers for which no corresponding hardware is present on the robot; detecting a hardware configuration for the robot; automatically detecting resources that are available on the robot based on the detected hardware configuration; receiving a request from the robot control software to use a type of resource; automatically selecting a resource from the available resources that corresponds to the type of resource requested by the robot control software; exchanging a first information with the robot control software, where the first information is related to use of the selected resource and is provided in a unit of measure that is related to a robot; exchanging a second information with a low-level device driver corresponding to the resource, where the second information is related to the use requested by the robot control software, where the second information is provided in a unit of measure that is related to a corresponding device, and where the second information is different than the first information; and converting between the first information and the second information based on the detected configuration of the robot. 