A device, system, and method for solving a plurality of sub-problems representing a main problem pertaining to an environment. An abstract graph corresponding to each of the sub-problems may be constructed in a computing system for each of the sub-problems. At least a first abstract graph of the abstract graphs may be resolved, for example, by decomposing one or more nodes of the first abstract graph. At least one of the one or more nodes of the first abstract graph may be associated with one or more nodes of others of the abstract graphs. At least one of the abstract graphs may be resolved using information obtained by the association. Other embodiments are described and claimed.
Claims The invention claimed is: 1. A computer-readable storage medium comprising a set of instructions that when executed by a processor in a computing apparatus cause the processor to: construct in a computing system for each of a plurality of independent sub-problems an abstract graph corresponding thereto, wherein the plurality of independent sub-problems represent a main problem, wherein each abstract graph comprises an ordered set of nodes, wherein a first node of a first abstract graph of the abstract graphs is associated with a second node of a second abstract graph of the abstract graphs; at the first node, determine if available data can be used to solve the first abstract graph to resolve the sub-problem corresponding thereto; and if the available data cannot be used to resolve the sub-problem corresponding to the first abstract graph, switch to the second node for resolving the sub-problem corresponding to the second abstract graph. 2. The computer-readable storage medium of claim 1, wherein at least one of the abstract graphs has a type that differs from another one of the abstract graphs. 3. The computer-readable storage medium of claim 1, wherein the executed instructions cause the processor to apply information pertaining to a current partial solution of the abstract graphs to the environment. 4. The computer-readable storage medium of claim 1, wherein the association is made according to association rules. 5. The computer-readable storage medium of claim 4, wherein the association rules are predetermined by an expert. 6. The computer-readable storage medium of claim 1, wherein the resolving of the abstract graphs comprises at least partially resolving the abstract graphs. 7. The computer-readable storage medium of claim 1, wherein the executed instructions cause the processor to display on a user interface a solution to the main problem. 8. A method comprising: constructing in a computing system for each of a plurality of independent sub-problems an abstract graph corresponding thereto, wherein the plurality of independent sub-problems represent a main problem, wherein each abstract graph comprises an ordered set of nodes, wherein a first node of a first abstract graph of the abstract graphs is associated with a second node of a second abstract graph of the abstract graphs; at the first node, determining if available data can be used to solve the first abstract graph to resolve the sub-problem corresponding thereto; and if the available data cannot be used to resolve the sub-problem corresponding to the first abstract graph, switching to the second node for resolving the sub-problem corresponding to the second abstract graph. 9. The method of claim 8, comprising: for each of the abstract graphs, for each of the nodes thereof, iteratively attempting to retrieve available data at each node, and if the available data cannot be used to solve the sub-problem corresponding to the abstract graph, switching to iteratively attempting to retrieve available data for a node of a different abstract graph of the abstract graphs. 10. The method of claim 8, comprising applying a current partial solution of one or more abstract graphs to the environment. 11. The method of claim 8, comprising displaying on a user interface a solution to the main problem. 12. A method for solving a main problem, the method comprising: constructing a plurality of abstract graphs each comprising nodes, wherein each abstract graph represents one of a plurality of sub-problems, wherein the plurality of sub-problems taken together represent the main problem pertaining to an environment; decomposing at least one node of an abstract graph into at least two nodes; associating a subset of the nodes, the associating comprising: (i) selecting a first node of a first one of the abstract graphs representing a first one of the sub-problems; (ii) selecting one or more second nodes of other abstract graphs representing a second one of the sub-problems; and (iii) creating an association between the first and second nodes in which information pertaining to the first node of the first abstract graph is associated to the one or more nodes of the other abstract graphs; further decomposing one or more of the other abstract graphs using the associated information and resolving least one of the other abstract graphs; and iterating the steps of associating nodes for different nodes and further decomposing to obtain a solution for the main problem. 13. The method of claim 12, comprising applying a current partial solution of one or more of the abstract graphs to the environment. 14. The method of claim 12, wherein at least one of the abstract graphs has a type that differs from another one of the abstract graphs. 15. The method of claim 12, wherein the first node is selected to be associated when information necessary for solving the first one of the abstract graphs is missing. 16. The method of claim 12, wherein the one or more second nodes is selected according to association rules. 17. The method of claim 16, wherein said association rules are provided by an expert, wherein the expert is selected from the group comprising: intelligent software and a human expert. 18. The method of claim 12, comprising displaying on a user interface a solution to the main problem. 19. A computer-readable storage medium comprising a set of instructions that when executed by a processor in a computing apparatus cause the processor to: construct a plurality of abstract graphs each comprising nodes, wherein each abstract graph represents one of a plurality of sub-problems, wherein the plurality of sub-problems taken together represent the main problem pertaining to an environment; decompose at least one node of an abstract graph into at least two nodes; associate a subset of the nodes, the associating comprising: (i) selecting a first node of a first one of the abstract graphs representing a first one of the sub-problems; (ii) selecting one or more second nodes of other abstract graphs representing a second one of the sub-problems; and (iii) creating an association between the first and second nodes in which information pertaining to the first node of the first abstract graph is associated to the one or more nodes of the other abstract graphs; further decompose one or more of the other abstract graphs using the associated information and resolving least one of the other abstract graphs; and iterate the steps of associating nodes for different nodes and further decomposing to obtain a solution for the main problem. 20. A computing system, comprising: a memory to store a plurality of sub-problems representing a main problem; and a processor operatively connected to the memory for retrieving from the memory the plurality of sub-problems, wherein the processor is to: construct in a computing system for each of a plurality of independent sub-problems an abstract graph corresponding thereto, wherein the plurality of independent sub-problems represent a main problem, wherein each abstract graph comprises an ordered set of nodes, wherein a first node of a first abstract graph of the abstract graphs is associated with a second node of a second abstract graph of the abstract graphs; at the first node, determine if available data can be used to solve the first abstract graph to resolve the sub-problem corresponding thereto; and if the available data cannot be used to resolve the sub-problem corresponding to the first abstract graph, switch to the second node for resolving the sub-problem corresponding to the second abstract graph. 21. The computing system of claim 20, wherein at least one of the abstract graphs has a type that differs from another one of the abstract graphs. 22. The computing system of claim 20, wherein the processor is further to apply information pertaining to a current partial solution of the abstract graphs to the environment. 23. The computing system of claim 20, further comprising a display for displaying on a user interface a solution to the main problem. 