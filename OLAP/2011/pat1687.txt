Masters request access to a shared resource, such as a shared bus. Usage of the shared bus by each of the masters is monitored, a request to use the shared bus by one of the masters is received, and usage of the shared bus by the master is compared with a corresponding bandwidth threshold. The request is arbitrated if the usage of the shared bus by the master is below the bandwidth threshold, and the request to use the shared bus is granted to the master based on the arbitration.
Claims What is claimed is: 1. A method comprising: monitoring usage of a shared bus by each of a plurality of masters; receiving requests to use the shared bus by the masters; comparing usage of the shared bus by the masters with corresponding bandwidth thresholds; using a first arbiter to arbitrate the requests from masters whose usages of the shared bus are below corresponding bandwidth thresholds; using a second arbiter to arbitrate the requests from masters whose wait times are above corresponding latency thresholds; and using a merge unit to merge the requests granted by the first and second arbiters, in which different priorities are given to the requests granted by the first and second arbiters. 2. The method of claim 1, further comprising using the shared bus to access at least one of a memory device or a peripheral device. 3. The method of claim 1, further comprising continuously monitoring the usage of the shared bus by the masters, and at each arbitration cycle, receiving zero or more requests for usage of the shared bus from zero or more of the masters, determining the usage of the shared bus by the masters sending the requests, and arbitrating the requests whose corresponding masters have usages below corresponding bandwidth thresholds. 4. The method of claim 1 in which the time window comprises a moving time window having a fixed length of time. 5. The method of claim 1, comprising, for each sub-window periods within the time window and for each master, storing in memory a grant sub-count representing a number of clock cycles the corresponding master is granted access to the shared bus during the corresponding sub-window period, each sub-window period comprising two or more clock cycles. 6. The method of claim 1, further comprising arbitrating requests from all masters regardless of the usages of the shared bus separately from arbitrating requests from masters whose usage of the shared bus are below corresponding bandwidth thresholds; and granting one of the masters to use the shared bus based on both arbitrations. 7. The method of claim 1, further comprising assigning requests from masters whose usage of the shared bus are below corresponding bandwidth thresholds to have a higher priority than masters whose usage of the shared bus are above or equal to corresponding bandwidth thresholds. 8. The method of claim 1 in which at least two masters have different bandwidth thresholds. 9. The method of claim 1 in which the masters have a same bandwidth threshold. 10. The method of claim 1 in which each bandwidth threshold represents a percentage of the bus bandwidth that is allocated to a corresponding master. 11. The method of claim 1, comprising selecting one of a plurality of sub-arbiters within the first arbiter to arbitrate the request, each sub-arbiter corresponding to a range of bus bandwidth usage levels such that requests from masters having bus bandwidth usage levels within a same range are arbitrated by a same sub-arbiter, and requests from masters having different ranges of bus bandwidth usage levels are arbitrated by different sub-arbiters. 12. The method of claim 11, comprising assigning a higher priority to a first request granted by a first sub-arbiter than a second request granted by a second sub-arbiter, in which the first sub-arbiter corresponds to a lower range of bus bandwidth usage levels than the second sub-arbiter. 13. The method of claim 1 in which the usage of the shared bus by each master is monitored based on a number of clock cycles the master is granted access to the shared bus within a time window. 14. The method of claim 13, comprising determining an average grant value representing the percentage of clock cycles each master is granted access to the shared bus within the time window. 15. The method of claim 14 in which determining the average grant value comprises determining a difference between a first grant value indicating whether the master is granted access to the shared bus at a most recent clock cycle, and a second grant value indicating whether the master is granted access to the shared bus in an earliest clock cycle within the time window. 16. The method of claim 14 in which the average grant value is determined based on a grant value indicating whether the master is granted access to the shared bus at a most recent clock cycle, and a previous average grant value representing the percentage of clock cycles the master is granted access to the shared bus within the time window prior to the most recent clock cycle. 17. The method of claim 14 in which the average grant value is determined based on a grant sub-count representing the number of clock cycles the master is granted access to the shared bus within a most recent sub-window period, and a previous average grant value representing the percentage of clock cycles the master is granted access to the shared bus within the time window prior to the most recent sub-window period, each sub-window period comprising two or more clock cycles. 18. The method of claim 13, comprising, for each clock cycle within the time window and for each master, storing in memory a grant value indicating whether the corresponding master is granted access to the shared bus at the corresponding clock cycle. 19. A method comprising: monitoring usage of a shared bus by each of a plurality of masters; receiving requests to use the shared bus from at least some of the masters; assigning normal weights to requests to use the shared bus from masters whose usage of the shared bus are below corresponding bandwidth thresholds; assigning low weights to requests to use the shared bus from masters whose usage of the shared bus are above or equal to corresponding bandwidth thresholds; using a first arbiter to arbitrate the requests to use the shared bus based on an arbitration policy, taking into account the weights of the requests; using a second arbiter to arbitrate the requests from masters whose wait times are above corresponding latency thresholds; and using a merge unit to merge the requests granted by the first and second arbiters, in which different priorities are given to the request granted by the first and second arbiters. 20. The method of claim 19 in which assigning normal weights comprises assigning a plurality of normal weights according to an inverse relationship to the bus usage bandwidth by the masters, in which higher normal weights are given to requests from masters having a lower bus usage bandwidth. 21. The method of claim 19, comprising providing an option for disabling the assignment of low weights to requests from masters whose usage of the shared bus are above or equal to corresponding bandwidth thresholds so that the requests from masters whose usages of the shared bus are above or equal to corresponding bandwidth thresholds are not eligible for arbitration. 22. The method of claim 19 in which the usage of the shared bus by each master is determined based on a number of clock cycles the master is granted access to the shared bus within a time window, and the usage of the shared bus by a master is determined to be below the corresponding bandwidth threshold if the number of clock cycles the master is granted access to the shared bus within the time window is smaller than a certain value, or if a value derived from the number of clock cycles the master is granted access to the shared bus within the time window is smaller than a certain value. 23. A method comprising: arbitrating requests from a plurality of masters for use of a shared bus; and using a first arbiter to control bandwidth of usage of the shared bus by the masters based on feedback information indicating usage of the shared bus by each master in which requests from masters whose usages of the shared bus are above or equal to corresponding thresholds are filtered out prior to arbitration; using a second arbiter to control latency for usage of the shared bus by arbitrating requests from masters whose wait times are above corresponding latency thresholds; and using a merge unit to merge the requests granted by the first and second arbiters, in which different priorities are given to the requests granted by the first and second arbiters. 24. The method of claim 23, further comprising improving latency for usage of the shared bus by using a plurality of arbiters to arbitrate requests from masters whose usages of the shared bus are below corresponding thresholds, each arbiter corresponding to a range of bus bandwidth usage levels such that requests from masters having a same range of bus bandwidth usage levels are arbitrated by a same arbiter, and requests from masters having different ranges of bus bandwidth usage levels are arbitrated by different arbiters. 25. The method of claim 23, further comprising increasing usage of the shared bus by separately arbitrating requests from all masters regardless of usages of the shared bus, and merging grants from the two arbitrations. 26. The method of claim 23 in which the usage of the shared bus by each master is determined based on a number of clock cycles the master is granted access to the shared bus within a time window, and the usage of the shared bus by a master is determined to be above or equal to the corresponding bandwidth threshold if the number of clock cycles the master is granted access to the shared bus within the time window is above or equal to a certain value, or if a value derived from the number of clock cycles the master is granted access to the shared bus within the time window is above or equal to a certain value. 27. The apparatus of claim 23 in which the filter comprises a moving average filter that filters the requests from the masters based on a number of times that each master is granted access to the shared bus within a moving time window. 28. The apparatus of claim 23 in which the usage of the shared bus by a master is determined to be below the corresponding bandwidth threshold if the number of clock cycles the master is granted access to the shared bus within the moving time window is below a certain value, or if a value derived from the number of clock cycles the master is granted access to the shared bus within the moving time window is below a certain value. 29. An apparatus comprising: a first filter to filter requests from masters requesting access to a shared bus, the first filter assigning normal weights to requests from masters whose usages of the shared bus are below corresponding bandwidth thresholds; a second filter to filter requests from the masters requesting access to the shared bus, the second filter assigning low weights to requests from masters whose usages of the shared bus are above or equal to corresponding bandwidth thresholds; and a first arbiter to arbitrate the requests filtered by the first and second filters using an arbitration policy, taking into account the weights of the requests; a second arbiter to arbitrate requests from masters whose wait times are above corresponding latency thresholds; and a merge unit to merge the requests granted by the first and second arbiters, in which different priorities are given to the requests granted by the first and second arbiters. 30. The apparatus of claim 29 in which the first filter assigns a plurality of normal weights according to an inverse relationship to the bus usage bandwidth by the masters, in which higher normal weights are given to requests from masters having a lower bus usage bandwidth. 31. The apparatus of claim 29, further comprising a switch to disable the second filter so that the requests from masters whose usages of the shared bus are above or equal to corresponding bandwidth thresholds are not eligible for arbitration. 32. The apparatus of claim 29 in which the usage of the shared bus by each master is determined based on a number of clock cycles the master is granted access to the shared bus within a time window, and the usage of the shared bus by a master is determined to be below the corresponding bandwidth threshold if the number of clock cycles the master is granted access to the shared bus within the time window is smaller than a certain value, or if a value derived from the number of clock cycles the master is granted access to the shared bus within the time window is smaller than a certain value. 33. An apparatus comprising: a filter to filter requests from masters requesting access to a shared bus, the filter passing requests from masters whose usages of the shared bus are below corresponding bandwidth thresholds; a first arbiter to arbitrate requests that pass the filter; a second arbiter to arbitrate requests from masters whose wait times are above corresponding latency thresholds; and a merge unit to merge the requests granted by the first and second arbiters, in which different priorities are given to the requests granted by the first and second arbiters. 34. The apparatus of claim 33 in which a higher priority is given to the request granted by the second arbiter than the request granted by the first arbiter. 35. The apparatus of claim 33, further comprising a memory device that can be accessed by the masters through the shared bus. 36. The apparatus of claim 33, further comprising the masters. 37. The apparatus of claim 36 in which each of the masters comprises a software application or a hardware device. 38. The apparatus of claim 33, further comprising a memory to store, for each master and for each clock cycle, a grant value indicating whether the corresponding master is granted access to the shared bus during the corresponding clock cycle. 39. The apparatus of claim 38 in which, at each clock cycle and for each master, the moving average filter determines a difference between the grant value for the most recent clock cycle, and the grant value for the earliest clock cycle stored in the memory. 40. The apparatus of claim 33, further comprising a memory to store, for each master and for each sub-window within the time window, a grant sub-count indicating a number of times the corresponding master is granted access to the shared bus for the corresponding sub-window, each sub-window comprising two or more clock cycles. 41. The apparatus of claim 40 in which, at each clock cycle and for each master, the moving average filter determines a difference between the grant sub-count for the most recent sub-window and the grant sub-count for the earliest sub-window stored in the memory. 42. The apparatus of claim 33 in which the filter determines, for each master, an average grant value representing the average number of times the master is granted access to the shared bus per clock cycle within the time window. 43. The apparatus of claim 42 in which the filter determines the average grant value based on a grant value indicating whether the master is granted access to the shared bus at a most recent clock cycle and a previous average grant value representing the average number of times the master is granted access to the shared bus per clock cycle within the time window prior to the most recent clock cycle. 44. The apparatus of claim 33 in which the filter comprises a first storage storing a grant sub-count indicating a number of times the master is granted access to the shared bus during a most recent sub-window period, and a second storage storing a previous average grant value indicating an average number of times the master is granted access to the shared bus per clock cycle within the time window prior to the most recent sub-window period, each sub-window period comprising two or more clock cycles, and the filter determines the average grant value based on the grant sub-count and the previous average grant value. 45. The apparatus of claim 33, in which a higher priority is given to the request granted by the second arbiter than the request granted by the first arbiter. 46. The apparatus of claim 33, further comprising a third arbiter to arbitrate requests from all of the masters regardless of the usages of the shared bus. 47. The apparatus of claim 46, in which the merge unit merges the requests granted by the first, second, and third arbiters, in which a higher priority is given to the request granted by the first arbiter than the request granted by the second arbiter and the third arbiter. 48. The apparatus of claim 33 in which the first arbiter comprises a plurality of sub-arbiters, each sub-arbiter corresponding to a range of bus usage levels, each sub-arbiter arbitrating requests from masters whose bus usage levels fall within the range of bus usage levels corresponding to the sub-arbiter. 49. The apparatus of claim 48 in which requests granted by a first sub-arbiter is given a higher priority than requests granted by a second sub-arbiter, in which the first sub-arbiter corresponds to a lower range of bus bandwidth usage levels than the second sub-arbiter. 50. The apparatus of claim 33 in which the filter monitors, for each master, a number of times or an average number of times the master is granted access to the shared bus. 51. The apparatus of claim 33 in which the first arbiter comprises a plurality of sub-arbiters, each sub-arbiter corresponding to a range of bus usage levels, each sub-arbiter arbitrating requests from masters whose bus usage levels fall within the range of bus usage levels corresponding to the sub-arbiter, requests granted by a sub-arbiter corresponding to a lower range of bus bandwidth usage levels is given a higher priority than requests granted by another sub-arbiter corresponding to a higher range of bus bandwidth usage levels. 52. The apparatus of claim 33 in which each of the masters comprises a software application or a hardware device. 53. The apparatus of claim 33 in which the usage of the shared bus by each master is determined based on a number of clock cycles the master is granted access to the shared bus within a time window, and the usage of the shared bus by a master is determined to be below the corresponding bandwidth threshold if the number of clock cycles the master is granted access to the shared bus within the time window is smaller than a certain value, or if a value derived from the number of clock cycles the master is granted access to the shared bus within the time window is smaller than a certain value. 54. An apparatus comprising: a filter to filter requests from masters requesting access to a shared bus, the filter passing requests from masters whose usages of the shared bus are below corresponding bandwidth thresholds; a first arbiter to arbitrate requests that pass the filter; a second arbiter to arbitrate requests from masters whose wait times are above corresponding latency thresholds; a third arbiter to arbitrate requests from all of the masters regardless of the usages of the shared bus; and a merge unit to merge the requests granted by the first, second, and third arbiters, in which different priorities are given to the request granted by the first, second, and third arbiters. 55. The apparatus of claim 54 in which a higher priority is given to the request granted by the second arbiter than the request granted by the first and third arbiters, and a higher priority is given to the request granted by the first arbiter than the request granted by the third arbiter. 56. The apparatus of claim 54 in which the first arbiter comprises two or more weighted sub-arbitration units, and the arbitration is distributed amongst the weighted sub-arbitration units. 57. The apparatus of claim 56 in which weighing of requests by the two or more weighted sub-arbitration units is inversely proportional to current bandwidths used by the corresponding masters. 58. The apparatus of claim 54 in which the third arbiter comprises two or more weighted sub-arbitration units, and the arbitration is distributed amongst the weighted sub-arbitration units. 59. The apparatus of claim 58 in which weighing of requests by the two or more weighted sub-arbitration units is inversely proportional to current bandwidths used by the corresponding masters. 60. The apparatus of claim 54 in which the third arbiter uses a round-robin arbitration scheme to arbitrate requests from the masters. 61. The apparatus of claim 54 in which each of the masters comprises a software application or a hardware device. 