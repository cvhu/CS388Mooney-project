A system and methods are presented for the generation of hybridized efficient genetic algorithms (EGAS) applied to bi-objective optimization problems. Applications are made to engineering systems involving collective behaviors, including network computing, robotics and evolvable hardware.
Claims I claim: 1. A system for generating efficient genetic algorithms (EGAs) to solve optimization problems, comprising: a computer hardware system; a computer operating system; a computer database management system (dbms); wherein genetic algorithms are produced by the computer operating system on the computer hardware system by accessing the dbms to retrieve data to intentionally crossover individuals at specific phases in the breeding process; wherein the crossover of individuals into successive generations occurs in a narrow specified band; wherein the crossover of individuals occurs by accelerating specific phases; wherein the crossover of individuals occurs by limiting the range of random mutations; wherein the mutation ranges are adjusted every generation; wherein the vectors of the randomness range of mutations are periodically narrowed; wherein the historical record of past generations is accessed in the dbms and the most likely mutation vector introduced to guide subsequent generations; wherein the probabilistic ranges of mutations are periodically modulated each generation; wherein the individual genes are activated on demand; and when the EGAs use a combination of techniques, they efficiently solve the optimization problems. 2. A system of claim 1, wherein: wherein the computer operating system constructs computer models using the hardware; wherein models are generated using EGAs by accessing data sets in the dbms; wherein the models are used to construct scenarios to match the fitness to a specific phase of the environment; wherein interaction occurs between the models and the genetic evolution process of generating EGAs in matching the evolving environment; wherein the changing environment provides feedback to the evolving EGAs; wherein the system produces co-evolutionary behaviors of transforming the models with evolving EGAs and transforming the environment with behaviors applied from the models in real time; wherein the reaction to the environment by the EGAs creates an experimentation component of the modeling process which constantly re-calibrates the models; wherein the database is constantly updated with successful solutions to environmental problems identified in the fitness matching process; wherein the database is used by the EGAs to access data of past successful environmental problem solving; and wherein the modeling system presents solutions to solve the optimization problem. 3. A system of claim 1, wherein: as the environment constantly changes, the fitness testing process is active; the modeling system constantly probes the environment to assess for fitness matching; access to information about prior fitness assessments, available by accessing the database, allows the EGA sequences to update mutation vector pathways; and the use of past fitness matches allows subsequent matching of environmental constraints. 4. A system of claim 1, wherein: As the environment configuration changes, EGAs generate different criteria for selection; The evolving environmental criteria require the EGA sequences to adapt; There is a window of opportunity in matching a transforming environment; Feedback from the environment provides for fitness testing; Genes are pulled in the EGA process in order to adapt to the environmental constraints; The database is accessed to assess the use of past mutations used in EGAs to fit past environmental constraints; The model applies the EGA sequences that were successful to satisfy past constraints to the new environmental problem; The model prunes out unsuccessful matches by narrowing the crossover selection criteria and mutation vectors of the EGA sequences; and The model matches the evolving EGA to the evolving environment to solve the optimization problem. 5. A system of claim 1, wherein: the model seeks to satisfy the constraints of an evolutionary environment; the model identifies a range of options for the satisfaction of constraints; the model accesses the database to assess past matches that are no longer valid in the current environment yet may be useful in matching future situations; the system resolves temporal lags in the EGA sequences by matching subsequent populations to the environment to create short-term solutions; and the model solves an optimization problem by matching the EGA to a specific phase of the evolution of the environment. 6. A system of claim 1, wherein: the model co-evolves without equilibrium to the indeterminate evolutionary environment; the model identifies brief windows of constraint satisfaction in which optimal ranges are reached between the EGA evolutionary process and the changing environment; a synchronization process occurs linking the EGA process and the evolutionary environment in which inputs to one affect the other; during the inflexion points of changed EGA and environment processes, mutation and crossover variability increase; the model constructs EGA to adapt to the changing environment and maintain a stable equilibrium; and the model solves an optimization problem by matching the fitness of the EGA with a phase of the environment. 7. A system of claim 1, wherein: EGAs are used to solve network computing optimization problems; the network adapts as instructions are received by EGAs to perform a function; the network performs plasticity functions by continuously reorganizing using EGA sequences; and the distributed computer network self-regulates its functioning by stimulating changes in its configuration using EGA sequences at specific thresholds as it receives inputs. 8. A system of claim 7, wherein: the distributed computer network is a communications system; the communications functions of the separate nodes are modulated by using EGA sequences to solve optimization problems; and the topological configuration of the communications network is continuously rerouted. 9. A system of claim 7, wherein: the distributed computer network is a collective robotic network; the evolving relative spatial configurations of the individual robots are calculated using the EGAs; collective robotic optimization problems are solved within computational constraints; the robotic collective uses global information from the distributed database to solve local search optimization problems; the system creates models that generate cellular automata simulations using EGA sequences to modulate with the changing environment; the system adapts the robotic collective to the constraints of the evolving environment to perform a specific goal. 10. A system of claim 7, wherein: the system is applied to a field programmable gate array (FPGA) as it evolves its physical structure to configure to adapt to an indeterministic environment; the system uses EGA sequences as a limiter to restrict the guidance of the range of operations in a continuously programmable FPGA to closely mirror the present environment; the system solves optimization problems in real time. 11. A system of claim 7, wherein: the distributed computer network is a collective nano-robotic network; the evolving relative spatial configurations of the individual nano-robots are calculated using the EGAs; collective nano-robotic optimization problems are solved within computational constraints; the nano-robotic collective uses global information from the distributed database to solve local search optimization problems; the nano-robotic collective aggregates its collective configuration into a specific shape; and the nano-robotic collective reaggregates its collective configuration into another shape in reaction to receiving instructions from the model that is informed by the EGA sequences and that interacts with an indeterminate evolving environment. 12. A system of claim 7, wherein: the distributed computer network employ intelligent mobile software agents (IMSAs); the IMSAs use software code that uses EGAs to solve optimization problems; and the IMSAs are used to configure a computer model that uses game theory to create competitive behaviors to accelerate optimization problem solving. 