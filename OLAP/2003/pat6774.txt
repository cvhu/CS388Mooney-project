A method used with a simulator and a controller, the controller running execution code to provide output signals which, when linked to resources, cause the resources to cycle through requested activities, the simulator receiving controller output signals and, in response thereto, generating motion pictures of resources as the resources cycle through requested activities, the simulator using data structures which model the resources to determine which motion pictures to generate, the method for generating execution code and data structures for use by the controller and the simulator, respectively, and comprising the steps of, for each resource, encapsulating resource information including resource logic in a control assembly (CA), instantiating at least one instance of at least one CA, compiling instantiated CA instance resource logic to generate execution code, gleaning simulation information from the instantiated CA instances and using the gleaned simulation information to generate a simulation data structure for the resources corresponding to the instantiated CA instances.
Claims What is claimed is: 1. A method to be used with a simulator and a controller, the controller for running execution code to provide output signals which, when linked to manufacturing tools, cause the manufacturing tools to cycle through requested activities, the simulator for receiving controller output signals and, in response thereto, generating motion pictures of manufacturing tools as the manufacturing tools cycle through requested activities, the simulator using data structures which model the manufacturing tools to determine which motion pictures to generate, the method for generating execution code and data structures for use by the controller and the simulator, respectively, and comprising the steps of: for each manufacturing tool, encapsulating manufacturing tool information including manufacturing tool logic in a control assembly (CA); instantiating at least one instance of at least one CA; compiling instantiated CA instance manufacturing tool logic to generate execution code for controlling manufacturing tools; gleaning simulation information from the instantiated CA instances; and using the gleaned simulation information to generate a simulation data structure for the manufacturing tools corresponding to the instantiated CA instances. 2. The method of claim 1 further including the step of providing the execution code and the data structures to the controller and the simulator, respectively. 3. The method of claim 1 wherein the step of encapsulating also includes encapsulating simulation information corresponding to the manufacturing tools in corresponding CAS and wherein the step of gleaning includes retrieving the simulation information. 4. The method of claim 3 wherein the controller is a programmable logic controller which provides I/O combination output signals, the simulator is a movie module which displays video clips, the encapsulated simulation information includes I/O combinations correlated with specific video clips in a table and the step of gleaning includes accessing the table and retrieving the correlated combination/clip information. 5. The method of claim 4 wherein the controller also accepts feedback signals, the encapsulated simulation information further includes I/O feedback combinations correlated with specific simulation events in a feedback table and the step of gleaning includes accessing the feedback table and retrieving the correlated feedback combination/simulation event information. 6. The method of claim 1 wherein the gleaned information includes a first simulation information set and the method further includes the step of, for each of at least a subset of the CAS, encapsulating a second simulation information set in a data structure template and, wherein the step of using the gleaned information includes the step of combining the first and second simulation information sets for each instantiated CA to generate a separate data structure for each instantiated CA. 7. The method of claim 6 wherein a separate manufacturing tool set corresponds to each CA, operation of each separate manufacturing tool is dependent on both universal characteristics and circumstantial characteristics, universal characteristics being characteristics which are identical for all manufacturing tools of the specific type and circumstantial characteristics being characteristics which may vary between manufacturing tools wherein the manufacturing tools are of the same type and, wherein the first simulation information set includes universal characteristics and the second simulation information set includes circumstantial characteristics. 8. The method of claim 6 wherein manufacturing tool operation during activities is dependent on manufacturing tool environment and each second simulation information set models a manufacturing tool environment. 9. The method of claim 6 wherein manufacturing tool operation during activities is dependent on manufacturing tools characteristics and each second simulation information set models manufacturing tool characteristics. 10. The method of claim 6 further including the step of, prior to compiling, sequencing requested activities and, wherein, manufacturing tool operation during activities is dependent on prior activities and each second simulation information set includes information indicating prior activities and modeling the effects of prior activities on manufacturing tool operation. 11. The method of claim 1 wherein the step of instantiating includes indicating specific characteristics about the manufacturing tool corresponding to the CA instance. 12. The method of claim 11 wherein the step of indicating specific characteristics includes the step of selecting a subset of resources, the step of compiling includes compiling execution code for the subset and the step of gleaning includes gleaning information for the subset. 13. A control assembly (CA) set to be used with a compiler, a simulator and a controller, the controller for running execution code to provide output signals which, when linked to manufacturing tools, cause the manufacturing tools to cycle through requested activities, the simulator for receiving controller output signals and, in response thereto, generating motion pictures of manufacturing tools as the manufacturing tools cycle through the requested activities, the simulator using data structures which model the manufacturing tools to determine which motion pictures to generate, the compiler for compiling manufacturing tools information to generate execution code and data structures, the CA set including a separate information construct type for each manufacturing tools, each CA type for encapsulating information required to generate execution code and at least a subset of the information required to generate a data structure for simulating a corresponding manufacturing tool, the CA set comprising: a plurality of CAs, each CA including: a logic specification which specifies logic corresponding to the manufacturing tools associated with the CA; and a simulation specification which specifies simulation information corresponding to the manufacturing tools associated with the CA. 14. The set of claim 13 also for use with an editor and wherein each logic specification includes logic characteristics, logic characteristics corresponding to at least a subset of CAS are parameterizable using the editor and wherein each CA further includes a recording means for recording parameterization. 15. The set of claim 14 wherein the recording means is a plurality of flag boxes. 16. The set of claim 13 wherein a separate manufacturing tool set corresponds to each CA, operation of a manufacturing tool set corresponding to a specific CA type is dependent on both universal characteristics and circumstantial characteristics, universal characteristics being characteristics which are identical for all CAs of the specific type and circumstantial characteristics being characteristics which may vary from manufacturing tool set to manufacturing tool set and, wherein, the simulation specification specifies a characteristic subset of the universal and circumstantial characteristics. 17. The set of claim 16 wherein the characteristic subset includes the universal characteristics. 18. The set of claim 13 wherein the controller is a programmable logic controller which generates I/O combination output signals, the simulator is a movie module which generates video clips and each simulation specification correlates video clips with I/O output combinations. 19. The set of claim 18 wherein the controller also accepts feedback signals and each simulation specification further includes I/O feedback combinations correlated with specific simulation events in a feedback table. 20. An apparatus to be used with a system, the system including a simulator, a control assembly (CA) set, a controller and a specifier, the controller for running execution code to provide output signals which, when linked to manufacturing tools, cause the manufacturing tools to cycle through requested activties, the simulator for receiving controller output signals and, in response thereto, generating motion pictures of manufacturing tools as the manufacturing tools cycle through requested activities, the simulator using data structures which model the manufacturing tools to determine which motion pictures to generate, a CA being a data construct which encapsulates logic information for a corresponding manufacturing tool, the CA set including a separate CA for each manufacturing tool supported by the system, the editor for instantiating at least one instance of at least one CA, the apparatus for generating execution code and data structures for use by the controller and the simulator, respectively, and comprising: a processor for executing a pulse sequenced program to perform the steps of: compiling instantiated CA instance manufacturing tool logic to generate execution code; gleaning simulation information from the instantiated CA instances; and using the gleaned simulation information to generate a simulation data structure for the manufacturing tools corresponding to the instantiated CA instances. 21. The apparatus of claim 20 wherein the processor executes the pulse sequenced program to further perform the step of providing the execution code and the data structures to the controller and the simulator, respectively. 22. The apparatus of claim 20 wherein each CA also encapsulates simulation information corresponding to the CA manufacturing tools and wherein the processor gleans by retrieving the simulation information. 23. The apparatus of claim 22 wherein the controller is a programmable logic controller which provides I/O combination output signals, the simulator is a movie module which displays video clips, the encapsulated simulation information includes I/O combinations correlated with specific video clips in a table and wherein the processor gleans by accessing the table and retrieving the correlated combination/clip information. 24. The apparatus of claim 23 wherein the controller also accepts feedback signals, the encapsulated simulation information further includes I/O feedback combinations correlated with specific simulation events in a feedback table and the processor gleans by accessing the feedback table and retrieving the correlated feedback combination/simulation event information. 25. The apparatus of claim 20 wherein the gleaned information includes a first simulation information set and at least a second simulation information set is accessible to the processor and the processor performs the step of using the gleaned information by combining the first and second simulation information sets for each instantiated CA to generate a separate data structure for each instantiated CA. 26. The apparatus of claim 25 wherein a separate resource set corresponds to each CA, operation of each separate resource is dependent on both universal characteristics and circumstantial characteristics, universal characteristics being characteristics which are identical for all resources of a specific type and circumstantial characteristics being characteristics which may vary between resources wherein the resources are of the same type and, wherein, the first simulation information set includes universal characteristics and the second simulation information set includes circumstantial characteristics. 