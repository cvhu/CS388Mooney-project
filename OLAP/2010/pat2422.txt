A method for determining a pose of an object from a range image is presented. A distribution of poses for an object is determined from a model of the object. A set of reference poses is selected according to the distribution, such that more reference poses are selected for more probable poses than less probable poses. A reference image for each reference pose is generated, and the reference pose used to generate the reference image that best matches a range image including the object is assigned as the pose of the object.
Claims We claim: 1. A method for determining a pose of an object from a range image, comprising the steps of: determining a distribution of poses for an object, in which the distribution is determined from a model of the object; selecting a set of reference poses according to the distribution, such that more reference poses are selected for more probable poses than less probable poses; generating a reference image for each reference pose; and assigning the reference pose used to generate the reference image that best matches a range image including the object as the pose of the object, wherein the assigning uses an error function: .function..function..function..lamda..times..times..function..times. ##EQU00006## .times..times..function..times..times..function..times..delta..function..- times..function..times..function..times..function..times..delta..function.- .times..times..function. ##EQU00006.2## I is the range image, R.sub.i is a particular reference image, (x, y, z) is a translation, E.sub.cover(x, y) is a cover error, E.sub.range(x, y, z) is a range error, .lamda. is a weight, r.sub.i is a compensation term, A.sub.i is a foreground area of R.sub.i, A.sub.max is a maximum area among all reference range images, (u, v) are coordinates of pixels in R.sub.i, f(u, v) is a normalization factor, .delta..sub.cover(u, v, x, y) is a cover difference, c(u, v) is a weighting factor, and .delta..sub.range(u, v, x, y, z) is a range difference, wherein the steps are performed in a processor. 2. The method of claim 1, in which the model is constructed using an active light system. 3. The method of claim 1, in which the model is constructed using a computer-aided design system. 4. The method of claim 1, further comprising: simulating object stacking in a physics-based virtual bin using the model to determine the distribution. 5. The method of claim 1, further comprising: constructing a spherical parameterization of the distribution; and sampling adaptively the spherical parameterization to select the set of reference poses. 6. The method of claim 5, in which the sampling is performed using K-means clustering. 7. The method of claim 5, in which a reduced spherical parameterization is sampled adaptively if the object has a rotational symmetry. 8. The method of claim 1, in which the cover error is minimal when edges of the object in the range image I and the reference image R.sub.i match. 9. The method of claim 1, in which the cover difference is .delta..sub.cover(u,v,x,y)=|EDT.sub.I(u,v)-EDT.sub.R.sub.i(u-x,v-y)|, where EDT.sub.I and EDT.sub.R.sub.i are Euclidian distance transform values of the range image I and the reference image R.sub.i, respectively. 10. The method of claim 9, in which the normalization factor is .function..times..times..times..function.>.times. ##EQU00007## 11. The method of claim 1, in which the range error is minimal when depth values in the range image I and the reference image R.sub.i are similar. 12. The method of claim 1, in which the range difference is .delta..function..function..times..times..times..function..noteq. .function..noteq. ##EQU00008## where z.sub.I and z.sub.R.sub.i are depth images of the range image I and the reference image R.sub.i, respectively. 13. The method of claim 12, in which the weighting factor is .function..function..fwdarw..fwdarw..function..times..times..function..no- teq. ##EQU00009## where {right arrow over (V)} is a viewing vector of R.sub.i and {right arrow over (N)}(u, v) is a surface normal vector at (u, v). 14. The method of claim 1, in which the best match minimizes the error function .theta..PHI..sigma..times..times..times..times..function. .times..times. .times..times. ##EQU00010## where R.sub.i is a particular reference image of the model rendered with rotation angles (.theta., .phi., .sigma.), step 1 determines an error between each reference image R.sub.i and the range image I using a downhill simplex method for the translation values (x, y, z), and step 2 selects the reference pose of the reference range image R.sub.i with a lowest global error. 15. The method of claim 1, further comprising: refining the pose of the object in the range image. 16. The method of claim 15, in which the refining uses an iterative closest point procedure. 