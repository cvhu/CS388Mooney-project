The present invention is directed to a method and apparatus for developing a metadata-infused software program for controlling a device, such as a robot. A first library of software segments with metadata and a second library of script documents are provided. A part program wizard uses a script document selected from the second library to display queries on a screen of an interface device. Using input information received in response to the queries, the part program wizard selects and combines software segments from the first library to produce the metadata-infused software program. The metadata identifies the selected software segments and includes statuses of the selected software segments. A graphical representation of the metadata infused software program is displayed on the screen and conveys the statuses of the software segments. A deployment wizard is utilized to teach data points for the metadata-infused software program.
Claims What is claimed is: 1. A method of developing an executable software program for controlling an object, the method comprising: providing a library of segments of software code with metadata, wherein the metadata of each segment identifies the segment and includes a status of the segment that includes whether the segment has been executed; selecting a plurality of the segments from the library; connecting the selected segments; executing a first selected segment; updating the metadata for the first selected segment to convey that the first selected segment has been executed; and displaying graphical representations of the selected segments, wherein the graphical representations convey the statuses of the selected segments, with the representation for the first selected segment conveying that the first selected segment has been executed. 2. The method of claim 1, further comprising eliciting information from a user and receiving information from the user; and wherein the selection of the segments is made using the received information. 3. The method of claim 1, further comprising providing a previously-developed software program infused with metadata, and wherein the connecting of the selected segments comprises adding the selected segments into the previously-developed software program. 4. The method of claim 3, further comprising: displaying a graphical representation of the previously-developed software program on a first portion of a screen; and displaying graphical representations of the segments of the library on a second portion of the screen; and wherein the adding of the selected segments into the previously-developed software program comprises dragging the graphical representations of the selected segments from the second portion of the screen and dropping them into the graphical representation of the previously-developed software program in the first portion of the screen. 5. The method of claim 1, wherein the first selected segments includes default data and wherein the method further comprises receiving input data and changing the default data to the input data. 6. The method of claim 5, wherein the status of the first selected segments further includes whether the default data has been changed to the input data. 7. The method of claim 1, wherein changes in the statuses of the selected segments changes the graphical representations of the selected segments, respectively, and wherein the graphical representations of the selected segments are displayed in a program tree. 8. The method of claim 1, wherein the software program is for controlling a robot and wherein the segments of software code comprise robot code represented in a mark-up language. 9. A computer program product for use with a central processing unit (CPU), said product comprising: a computer-readable medium; a library of segments of software code with metadata, wherein the metadata of each segment identifies the segment and includes a status of the segment that includes whether the segment has been executed, said library being stored on the computer-readable medium; a program stored on the computer-readable medium and having instructions for causing the CPU to execute a method of developing an executable software program for controlling an object, said method comprising: selecting a plurality of the segments from the library; connecting the selected segments; executing a first selected segment; updating the metadata for the first selected segment to convey that the first selected segment has been executed; and displaying graphical representations of the selected segments, wherein the graphical representations convey the statuses of the selected segments, with the representation for the first selected segment conveying that the first selected segment has been executed. 10. The computer program product of claim 9, wherein the program stored on the computer-readable medium comprises a program development wizard and wherein the method further comprises: eliciting information from a user; and receiving information from the user; and wherein the selection of the segments is made using the received information. 11. The computer program product of claim 9, wherein the first selected segments includes default data and wherein the method further comprises receiving input data and changing the default data to the input data. 12. The computer program product of claim 11, wherein the status of the first selected segments further includes whether the default data has been changed to the input data. 13. The computer program product of claim 9, wherein changes in the statuses of the selected segments changes the color of the graphical representations of the selected segments, respectively. 14. The computer program product of claim 9 wherein the segments of software code comprise robot code represented in XML. 15. An apparatus for controlling a robot, said apparatus comprising: (a.) an interface device comprising a central processing unit (CPU) and a display; (b.) a storage medium readable by the CPU; (c.) a library of segments of robot code with metadata, wherein the metadata of each segment includes a status of the segment that includes whether the segment has been executed, said library being stored on the storage medium; (d.) a program development wizard runnable on the CPU to execute a method of developing an executable robot control software program, said method comprising: eliciting information from a user; receiving information from the user; using the received user information to select a plurality of the segments from the library; combining the selected segments; executing a first selected segment; updating the metadata for the first selected segment to convey that the first selected segment has been executed; and displaying graphical representations of the selected segments on the display; and (e.) a robot controller for executing the robot control software program to control the robot. 16. The apparatus of claim 15, wherein the metadata of each segment of robot code identifies the segment. 17. The apparatus of claim 16, wherein upon execution by the controller, the robot control software program generated by the program development wizard controls the robot to move along a process path having a plurality of position points with default values, and wherein the apparatus further comprises a deployment wizard runnable on the CPU to execute a method of teaching the robot control software program comprising teaching the position points by replacing the default values with taught values. 18. The apparatus of claim 17, wherein the first selected segments is for moving the robot to one of the position points, and wherein the status in the metadata for the first selected segment further includes whether said one of the position points has a default value or a taught value. 19. The apparatus of claim 17, wherein the metadata further includes experiential data and wherein the apparatus further comprises an optimization wizard runnable on the CPU to execute a method of optimizing the robot control software program comprising using the experiential data to generate and display recommendations for changing the robot control software program. 20. The apparatus of claim 15, wherein the interface device is a teach pendant. 21. The apparatus of claim 15, wherein the segments of robot code are represented in XML. 22. A method of controlling a robot, comprising: (a.) providing a display device and a robot program comprising metadata and robot code represented in XML; (b.) interpreting the robot code to control the robot; and (c.) interpreting the metadata to display graphical representations of the robot program on the display device; and wherein steps (b.) and (c.) are performed simultaneously wherein the metadata identifies segments of the robot program and includes statuses of the segments, and wherein one of the segments has default data. 23. The method of claim 22, further comprising changing the default data to taught data, and wherein the status of said one of the segments is whether said one of the segments has default data or taught data. 24. A computer program product for use with a central processing unit (CPU) and a robot controller, said product comprising: a computer-readable medium; a robot control software program stored on the computer-readable medium, said robot control software program comprising robot code infused with metadata that identifies segments of the robot code and conveys the statuses of the segments, respectively, said robot control software program having instructions for causing the robot controller to move a robot along a process path having a plurality of position points with default values; and a deployment wizard stored on the computer-readable medium and having instructions for causing the CPU to execute a method of teaching the robot control software program, said method including teaching the position points by replacing the default values with taught values and updating the metadata to convey that the position points have been taught; and wherein the metadata includes information for teaching the position points. 25. The computer program product of claim 24, wherein the status of each of the segments includes whether the segments has been executed. 26. The computer program product of claim 24, further comprising an optimization wizard stored on the computer-readable medium and having instructions for causing the CPU to execute a method of optimizing the robot control software program comprising generating and displaying recommendations for changing the robot control software program. 27. The computer program product of claim 26, wherein the metadata further includes experiential data and wherein the optimization wizard uses the experiential data to generate the recommendations. 28. The computer program product of claim 24, wherein the robot code is represented in XML. 